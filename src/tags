!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACT_OVER_21	spec_proc.c	1054;"	d	file:
ACT_OVER_21	spec_procs.c	1056;"	d	file:
ACT_SNICKER	spec_proc.c	1055;"	d	file:
ACT_SNICKER	spec_procs.c	1057;"	d	file:
AGGRESSIVE	spec_proc.c	/^int AGGRESSIVE(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AGGRESSIVE	spec_procs.c	/^int AGGRESSIVE(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AIR_ELEMENTAL	spells2.c	2419;"	d	file:
ALIGNSIZ	sunmalloc.c	92;"	d	file:
AND	interpreter.c	11;"	d	file:
ANISUM1	magic3.c	1033;"	d	file:
ANISUM2	magic3.c	1034;"	d	file:
ANISUM3	magic3.c	1035;"	d	file:
ASSERT	bsd.c	165;"	d	file:
ASSERT	bsd.c	177;"	d	file:
ASSERT	mybsd.c	172;"	d	file:
ASSERT	mybsd.c	184;"	d	file:
ASSHOLE_FNAME	interpreter.c	1325;"	d	file:
ASTRAL_ENTRANCE	magic.c	487;"	d	file:
AST_MOB_NUM	spec_proc2.c	4976;"	d	file:
AST_MOB_NUM	spec_procs2.c	5127;"	d	file:
ATTACK_ROOM	spec_proc2.c	4637;"	d	file:
ATTACK_ROOM	spec_procs2.c	4788;"	d	file:
AXE	pcedit.c	/^  short AXE;$/;"	m	struct:my_char_data	file:
AbbarachDragon	spec_proc.c	/^int AbbarachDragon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AbbarachDragon	spec_procs.c	/^int AbbarachDragon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AbyssGateKeeper	spec_proc2.c	/^int AbyssGateKeeper( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AbyssGateKeeper	spec_procs2.c	/^int AbyssGateKeeper( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AcidBlob	spec_proc3.c	/^int AcidBlob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AcidBlob	spec_procs3.c	/^int AcidBlob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AcidBreather	spec_proc3.c	/^int AcidBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AcidBreather	spec_procs3.c	/^int AcidBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
AddAffects	handler.c	/^void AddAffects( struct char_data *ch, struct obj_data *o)$/;"	f
AddCommand	parser.c	/^void AddCommand(char *name, void (*func), int number, int min_pos, int min_lev)$/;"	f
AddExitToRoom	create.c	/^void AddExitToRoom(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
AddFeared	Opinion.c	/^int AddFeared( struct char_data *ch, struct char_data *pud) $/;"	f
AddFears	Opinion.c	/^int AddFears( struct char_data *ch, int parm_type, int parm)$/;"	f
AddHated	Opinion.c	/^int AddHated( struct char_data *ch, struct char_data *pud) $/;"	f
AddHatred	Opinion.c	/^int AddHatred( struct char_data *ch, int parm_type, int parm)$/;"	f
AddNodeTail	parser.c	/^void AddNodeTail(NODE *n, int length, int radix)$/;"	f
AddToCharHeap	act.move.c	/^int AddToCharHeap( struct char_data *heap[50], int *top, int total[50], $/;"	f
AlignDesc	act.info.c	/^char *AlignDesc(int a)$/;"	f
AntiSunItem	spec_procs3.c	/^int AntiSunItem(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
ArmorDesc	act.info.c	/^char *ArmorDesc(int a)$/;"	f
AssistFriend	mobact.c	/^int AssistFriend( struct char_data *ch)$/;"	f
BACK	spec_proc3.c	74;"	d	file:
BACK	spec_procs3.c	73;"	d	file:
BAG	spells2.c	2369;"	d	file:
BASIL_GATEKEEPER_MAX_LEVEL	spec_proc2.c	29;"	d	file:
BASIL_GATEKEEPER_MAX_LEVEL	spec_procs2.c	30;"	d	file:
BEAGLE	magic3.c	328;"	d	file:
BERSERK	spec_procs3.c	3169;"	d	file:
BLACK	spec_proc3.c	63;"	d	file:
BLACK	spec_procs3.c	62;"	d	file:
BREAD	spells2.c	2371;"	d	file:
Bakery	spec_proc.c	16;"	d	file:
Bakery	spec_procs.c	16;"	d	file:
Bandits_Path	spec_proc2.c	28;"	d	file:
Bandits_Path	spec_procs2.c	29;"	d	file:
Barbarian	spec_proc3.c	/^int Barbarian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Barbarian	spec_procs3.c	/^int Barbarian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
BarbarianToHitMagicBonus	fight.c	/^int BarbarianToHitMagicBonus ( struct char_data *ch)$/;"	f
Barracks	spec_proc.c	5571;"	d	file:
Barracks	spec_procs.c	5620;"	d	file:
Beholder	spec_procs3.c	/^int Beholder(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
BerserkerItem	spec_procs3.c	/^int BerserkerItem(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
BestClassBIT	multiclass.c	/^int BestClassBIT(struct char_data *ch)$/;"	f
BestClassIND	multiclass.c	/^int BestClassIND(struct char_data *ch)$/;"	f
BestFightingClass	multiclass.c	/^int BestFightingClass(struct char_data *ch)$/;"	f
BestMagicClass	multiclass.c	/^int BestMagicClass(struct char_data *ch)$/;"	f
BestThiefClass	multiclass.c	/^int BestThiefClass(struct char_data *ch)$/;"	f
BreakLifeSaverObj	fight.c	/^int BreakLifeSaverObj( struct char_data *ch)$/;"	f
BreathWeapon	spec_proc2.c	/^int BreathWeapon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
BreathWeapon	spec_procs2.c	/^int BreathWeapon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
BrittleCheck	fight.c	/^int BrittleCheck(struct char_data *ch, struct char_data *v, int dam)$/;"	f
CAN_GO_ROOM	spec_proc3.c	79;"	d	file:
CAN_GO_ROOM	spec_procs3.c	78;"	d	file:
CAN_SEE	utility.c	/^int CAN_SEE(struct char_data *s, struct char_data *o)$/;"	f
CAN_SEE_OBJ	utility.c	/^int CAN_SEE_OBJ( struct char_data *ch, struct obj_data *obj)$/;"	f
CAST_OR_BLAST	spec_proc3.c	2830;"	d	file:
CAST_OR_BLAST	spec_procs3.c	2862;"	d	file:
CHAL_ACT	spec_proc.c	3910;"	d	file:
CHAL_ACT	spec_procs.c	3959;"	d	file:
CHANGE_AFFECT1_MOD	create.obj.c	21;"	d	file:
CHANGE_AFFECT2_MOD	create.obj.c	22;"	d	file:
CHANGE_AFFECT3_MOD	create.obj.c	23;"	d	file:
CHANGE_AFFECT4_MOD	create.obj.c	24;"	d	file:
CHANGE_AFFECT5_MOD	create.obj.c	33;"	d	file:
CHANGE_DESC	create.c	9;"	d	file:
CHANGE_EXIT	create.c	14;"	d	file:
CHANGE_EXIT_DELETE	create.c	21;"	d	file:
CHANGE_EXIT_DOWN	create.c	20;"	d	file:
CHANGE_EXIT_EAST	create.c	16;"	d	file:
CHANGE_EXIT_NORTH	create.c	15;"	d	file:
CHANGE_EXIT_SOUTH	create.c	17;"	d	file:
CHANGE_EXIT_UP	create.c	19;"	d	file:
CHANGE_EXIT_WEST	create.c	18;"	d	file:
CHANGE_FLAGS	create.c	10;"	d	file:
CHANGE_KEY_DOWN	create.c	33;"	d	file:
CHANGE_KEY_EAST	create.c	29;"	d	file:
CHANGE_KEY_NORTH	create.c	28;"	d	file:
CHANGE_KEY_SOUTH	create.c	30;"	d	file:
CHANGE_KEY_UP	create.c	32;"	d	file:
CHANGE_KEY_WEST	create.c	31;"	d	file:
CHANGE_MOB_ACT_FLAGS	create.mob.c	13;"	d	file:
CHANGE_MOB_AFF_FLAGS	create.mob.c	14;"	d	file:
CHANGE_MOB_ALIGN	create.mob.c	15;"	d	file:
CHANGE_MOB_ARMOR	create.mob.c	17;"	d	file:
CHANGE_MOB_DAMNUMB	create.mob.c	19;"	d	file:
CHANGE_MOB_DAMPLUS	create.mob.c	20;"	d	file:
CHANGE_MOB_DAMSIZE	create.mob.c	18;"	d	file:
CHANGE_MOB_DESC	create.mob.c	12;"	d	file:
CHANGE_MOB_DPOS	create.mob.c	24;"	d	file:
CHANGE_MOB_DSOUND	create.mob.c	29;"	d	file:
CHANGE_MOB_EXP	create.mob.c	23;"	d	file:
CHANGE_MOB_HITP	create.mob.c	16;"	d	file:
CHANGE_MOB_IMMUNE	create.mob.c	26;"	d	file:
CHANGE_MOB_LONG	create.mob.c	11;"	d	file:
CHANGE_MOB_MULTATT	create.mob.c	22;"	d	file:
CHANGE_MOB_NAME	create.mob.c	9;"	d	file:
CHANGE_MOB_RACE	create.mob.c	21;"	d	file:
CHANGE_MOB_RESIST	create.mob.c	25;"	d	file:
CHANGE_MOB_SHORT	create.mob.c	10;"	d	file:
CHANGE_MOB_SOUND	create.mob.c	28;"	d	file:
CHANGE_MOB_SUSCEP	create.mob.c	27;"	d	file:
CHANGE_NAME	create.c	8;"	d	file:
CHANGE_NUMBER_DOWN	create.c	27;"	d	file:
CHANGE_NUMBER_EAST	create.c	23;"	d	file:
CHANGE_NUMBER_NORTH	create.c	22;"	d	file:
CHANGE_NUMBER_SOUTH	create.c	24;"	d	file:
CHANGE_NUMBER_UP	create.c	26;"	d	file:
CHANGE_NUMBER_WEST	create.c	25;"	d	file:
CHANGE_OBJ_AFFECT1	create.obj.c	17;"	d	file:
CHANGE_OBJ_AFFECT2	create.obj.c	18;"	d	file:
CHANGE_OBJ_AFFECT3	create.obj.c	19;"	d	file:
CHANGE_OBJ_AFFECT4	create.obj.c	20;"	d	file:
CHANGE_OBJ_AFFECT5	create.obj.c	32;"	d	file:
CHANGE_OBJ_AFFECTS	create.obj.c	16;"	d	file:
CHANGE_OBJ_COST	create.obj.c	15;"	d	file:
CHANGE_OBJ_DESC	create.obj.c	9;"	d	file:
CHANGE_OBJ_FLAGS	create.obj.c	12;"	d	file:
CHANGE_OBJ_NAME	create.obj.c	7;"	d	file:
CHANGE_OBJ_SHORT	create.obj.c	8;"	d	file:
CHANGE_OBJ_TYPE	create.obj.c	10;"	d	file:
CHANGE_OBJ_VALUE	create.obj.c	14;"	d	file:
CHANGE_OBJ_VALUE1	create.obj.c	26;"	d	file:
CHANGE_OBJ_VALUE2	create.obj.c	27;"	d	file:
CHANGE_OBJ_VALUE3	create.obj.c	28;"	d	file:
CHANGE_OBJ_VALUE4	create.obj.c	29;"	d	file:
CHANGE_OBJ_VALUES	create.obj.c	25;"	d	file:
CHANGE_OBJ_WEAR	create.obj.c	11;"	d	file:
CHANGE_OBJ_WEIGHT	create.obj.c	13;"	d	file:
CHANGE_TYPE	create.c	11;"	d	file:
CHANGE_TYPE2	create.c	12;"	d	file:
CHANGE_TYPE3	create.c	13;"	d	file:
CLEAR_STONE	spells2.c	2425;"	d	file:
CMD_ASAY	spec_proc2.c	33;"	d	file:
CMD_ASAY	spec_procs2.c	34;"	d	file:
CMD_SAY	spec_proc2.c	32;"	d	file:
CMD_SAY	spec_procs2.c	33;"	d	file:
COMA_SIGN	comm.c	1764;"	d	file:
CREEPING_DEATH	magic3.c	930;"	d	file:
C_OR_B	spec_proc3.c	2824;"	d	file:
C_OR_B	spec_procs3.c	2856;"	d	file:
CalcThaco	fight.c	/^int CalcThaco(struct char_data *ch)$/;"	f
CallForGuard	utility.c	/^void CallForGuard$/;"	f
CanFightEachOther	utility.c	/^int CanFightEachOther(struct char_data *ch,struct char_data *ch2)$/;"	f
CanSeeTrap	utility.c	/^int CanSeeTrap(int num,struct char_data *ch)$/;"	f
CaravanGuildGuard	spec_proc.c	/^int CaravanGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
CaravanGuildGuard	spec_procs.c	/^int CaravanGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
CarrionCrawler	spec_proc.c	/^int CarrionCrawler(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
CarrionCrawler	spec_procs.c	/^int CarrionCrawler(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Chalice	spec_proc.c	6372;"	d	file:
Chalice	spec_procs.c	6421;"	d	file:
ChangeAffectMod	create.obj.c	/^void ChangeAffectMod(struct char_data *ch, char *arg, int type)$/;"	f
ChangeExitDir	create.c	/^void ChangeExitDir(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeExitNumber	create.c	/^void ChangeExitNumber(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeKeyNumber	create.c	/^void ChangeKeyNumber(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobActFlags	create.mob.c	/^void ChangeMobActFlags(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobAffFlags	create.mob.c	/^void ChangeMobAffFlags(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobAlign	create.mob.c	/^void ChangeMobAlign(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobArmor	create.mob.c	/^void ChangeMobArmor(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDamnumb	create.mob.c	/^void ChangeMobDamnumb(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDamplus	create.mob.c	/^void ChangeMobDamplus(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDamsize	create.mob.c	/^void ChangeMobDamsize(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDesc	create.mob.c	/^void ChangeMobDesc(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDpos	create.mob.c	/^void ChangeMobDpos(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobDsound	create.mob.c	/^void ChangeMobDsound(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobExp	create.mob.c	/^void ChangeMobExp(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobHitp	create.mob.c	/^void ChangeMobHitp(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobImmune	create.mob.c	/^void ChangeMobImmune(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobLong	create.mob.c	/^void ChangeMobLong(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobMultatt	create.mob.c	/^void ChangeMobMultatt(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobName	create.mob.c	/^void ChangeMobName(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobRace	create.mob.c	/^void ChangeMobRace(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobResist	create.mob.c	/^void ChangeMobResist(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobShort	create.mob.c	/^void ChangeMobShort(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobSound	create.mob.c	/^void ChangeMobSound(struct char_data *ch, char *arg, int type)$/;"	f
ChangeMobSuscep	create.mob.c	/^void ChangeMobSuscep(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjAffect	create.obj.c	/^void ChangeObjAffect(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjAffects	create.obj.c	/^void ChangeObjAffects(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjCost	create.obj.c	/^void ChangeObjCost(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjDesc	create.obj.c	/^void ChangeObjDesc(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjFlags	create.obj.c	/^void ChangeObjFlags(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjName	create.obj.c	/^void ChangeObjName(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjPrice	create.obj.c	/^void ChangeObjPrice(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjShort	create.obj.c	/^void ChangeObjShort(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjType	create.obj.c	/^void ChangeObjType(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjValue	create.obj.c	/^void ChangeObjValue(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjValues	create.obj.c	/^void ChangeObjValues(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjWear	create.obj.c	/^void ChangeObjWear(struct char_data *ch, char *arg, int type)$/;"	f
ChangeObjWeight	create.obj.c	/^void ChangeObjWeight(struct char_data *ch, char *arg, int type)$/;"	f
ChangeRoomDesc	create.c	/^void ChangeRoomDesc(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeRoomFlags	create.c	/^void ChangeRoomFlags(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeRoomName	create.c	/^void ChangeRoomName(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeRoomType	create.c	/^void ChangeRoomType(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
ChangeSeason	weather.c	/^void ChangeSeason(int month)$/;"	f
ChangeWeather	weather.c	/^void ChangeWeather( int change)$/;"	f
CheckEgo	utility.c	/^int CheckEgo(struct char_data *ch, struct obj_data *obj) $/;"	f
CheckEgoGive	utility.c	/^int CheckEgoGive(struct char_data *ch,struct char_data *vict,$/;"	f
CheckForAnyTrap	Trap.c	/^int CheckForAnyTrap(struct char_data *ch, struct obj_data *i)$/;"	f
CheckForBlockedMove	utility.c	/^int CheckForBlockedMove$/;"	f
CheckForGetTrap	Trap.c	/^int CheckForGetTrap(struct char_data *ch, struct obj_data *i)$/;"	f
CheckForInsideTrap	Trap.c	/^int CheckForInsideTrap(struct char_data *ch, struct obj_data *i)$/;"	f
CheckForMoveTrap	Trap.c	/^int CheckForMoveTrap(struct char_data *ch, int dir)$/;"	f
CheckGetBarbarianOK	utility.c	/^int CheckGetBarbarianOK(struct char_data *ch,struct obj_data *obj_object)$/;"	f
CheckGetEgo	utility.c	/^int CheckGetEgo(struct char_data *ch, struct obj_data *obj) $/;"	f
CheckGiveBarbarianOK	utility.c	/^int CheckGiveBarbarianOK(struct char_data *ch,struct char_data *vict,$/;"	f
ChurchBell	spec_procs3.c	/^int ChurchBell(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
Circlet	spec_proc.c	6373;"	d	file:
Circlet	spec_procs.c	6422;"	d	file:
ClassSpecificStuff	limits.c	/^int ClassSpecificStuff( struct char_data *ch)$/;"	f
ClassTitles	limits.c	/^char *ClassTitles(struct char_data *ch, char *buf)$/;"	f
CleanZone	utility.c	/^void CleanZone(int zone)$/;"	f
ClearDeadBit	db.c	/^void ClearDeadBit(struct char_data *ch)$/;"	f
ClericGuildMaster	spec_proc.c	/^int ClericGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
ClericGuildMaster	spec_procs.c	/^int ClericGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
CommandAssign	mobact.c	/^void CommandAssign(char *arg, void (*p))$/;"	f
CommandSearch	mobact.c	/^int CommandSearch(char *arg)$/;"	f
CommandSetup	mobact.c	/^void CommandSetup()$/;"	f
Condition	act.other.c	/^char *Condition(struct char_data *ch)$/;"	f
Conf	spec_proc.c	5573;"	d	file:
Conf	spec_procs.c	5622;"	d	file:
CountBits	multiclass.c	/^int CountBits(int class)$/;"	f
CountLimitedItems	reception.c	/^void CountLimitedItems(struct obj_file_u *st)$/;"	f
CountLims	utility.c	/^int CountLims(struct obj_data *obj)$/;"	f
CreateOneRoom	act.wizard.c	/^void CreateOneRoom( int loc_nr)$/;"	f
CrowBar	spec_proc.c	5577;"	d	file:
CrowBar	spec_procs.c	5626;"	d	file:
DEBUG	mybsd.c	44;"	d	file:
DEITY	spec_proc.c	6072;"	d	file:
DEITY	spec_procs.c	6121;"	d	file:
DEITY_NAME	spec_proc.c	6073;"	d	file:
DEITY_NAME	spec_procs.c	6122;"	d	file:
DEMON_TYPE_I	spells2.c	2490;"	d	file:
DEMON_TYPE_II	spells2.c	2491;"	d	file:
DEMON_TYPE_III	spells2.c	2492;"	d	file:
DEMON_TYPE_IV	spells2.c	2493;"	d	file:
DEMON_TYPE_V	spells2.c	2494;"	d	file:
DEMON_TYPE_VI	spells2.c	2495;"	d	file:
DFLT_PORT	comm.c	37;"	d	file:
DRUID_MOB	spec_proc2.c	4259;"	d	file:
DRUID_MOB	spec_procs2.c	4410;"	d	file:
DUAL_WIELD	fight.c	9;"	d	file:
DUST_DEVIL	magic3.c	1984;"	d	file:
DamCheckDeny	fight.c	/^int DamCheckDeny(struct char_data *ch, struct char_data *victim, int type)$/;"	f
DamDetailsOk	fight.c	/^int DamDetailsOk( struct char_data *ch, struct char_data *v, int dam, int type)$/;"	f
DamRollDesc	act.info.c	/^char *DamRollDesc(int a)$/;"	f
DamageAllStuff	fight.c	/^void DamageAllStuff( struct char_data *ch, int dam_type)$/;"	f
DamageEpilog	fight.c	/^int DamageEpilog(struct char_data *ch, struct char_data *victim, int killedbytype)$/;"	f
DamageItem	fight.c	/^int DamageItem(struct char_data *ch, struct obj_data *o, int num)$/;"	f
DamageMessages	fight.c	/^int DamageMessages( struct char_data *ch, struct char_data *v, int dam,$/;"	f
DamageOneItem	fight.c	/^int DamageOneItem( struct char_data *ch, int dam_type, struct obj_data *obj)$/;"	f
DamageStuff	fight.c	/^int DamageStuff(struct char_data *v, int type, int dam)$/;"	f
DamageTrivia	fight.c	/^int DamageTrivia(struct char_data *ch, struct char_data *v, int dam, int type)$/;"	f
DamagedByAttack	fight.c	/^int DamagedByAttack( struct obj_data *i, int dam_type)$/;"	f
DanjerKitchen	spec_proc.c	1313;"	d	file:
DanjerKitchen	spec_procs.c	1315;"	d	file:
DanjerLiving	spec_proc.c	1314;"	d	file:
DanjerLiving	spec_procs.c	1316;"	d	file:
DanjerPorch	spec_proc.c	1315;"	d	file:
DanjerPorch	spec_procs.c	1317;"	d	file:
Dblk	sunmalloc.c	/^typedef struct  dblk    *Dblk;$/;"	t	typeref:struct:dblk	file:
DeleteExit	create.c	/^void DeleteExit(struct room_data *rp, struct char_data *ch, char *arg, int type)$/;"	f
DeleteFears	Opinion.c	/^void DeleteFears(struct char_data *ch)$/;"	f
DeleteHatreds	Opinion.c	/^void DeleteHatreds(struct char_data *ch)$/;"	f
Demon	spec_proc2.c	/^int Demon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Demon	spec_procs2.c	/^int Demon(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DescAttacks	act.info.c	/^char *DescAttacks(float a)$/;"	f
DescDamage	act.info.c	/^char *DescDamage(float dam)$/;"	f
DescRatio	act.info.c	/^char *DescRatio(float f)  \/* theirs \/ yours *\/$/;"	f
DestroyedItems	fight.c	/^char DestroyedItems;  \/* set in MakeScraps *\/$/;"	v
DetermineExp	utility.c	/^int DetermineExp( struct char_data *mob, int exp_flags)$/;"	f
DevelopHatred	utility.c	/^void DevelopHatred( struct char_data *ch, struct char_data *v)$/;"	f
Devil	spec_proc2.c	/^int Devil(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Devil	spec_procs2.c	/^int Devil(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Dismount	act.other.c	/^int Dismount(struct char_data *ch, struct char_data *h, int pos)$/;"	f
DisplayGroupMove	act.move.c	/^int DisplayGroupMove(struct char_data *ch, int dir, int was_in, int total)$/;"	f
DisplayMove	act.move.c	/^int DisplayMove( struct char_data *ch, int dir, int was_in, int total)$/;"	f
DisplayOneMove	act.move.c	/^int DisplayOneMove(struct char_data *ch, int dir, int was_in)$/;"	f
DisplayStringHeap	Heap.c	/^void DisplayStringHeap$/;"	f
DoDamage	fight.c	/^int DoDamage(struct char_data *ch, struct char_data *v, int dam, int type)$/;"	f
DoScript	mobact.c	/^void DoScript(struct char_data *ch)$/;"	f
DogCatcher	spec_proc2.c	/^int DogCatcher(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DogCatcher	spec_procs2.c	/^int DogCatcher(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Donation	spec_proc.c	/^int Donation(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
Donation	spec_procs.c	/^int Donation(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
DracoLich	spec_proc.c	/^int DracoLich(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DracoLich	spec_procs.c	/^int DracoLich(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DragonHunterLeader	spec_proc2.c	/^int DragonHunterLeader(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DragonHunterLeader	spec_procs2.c	/^int DragonHunterLeader(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Drow	spec_proc.c	/^int Drow(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Drow	spec_procs.c	/^int Drow(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DruidAttackSpells	spec_proc2.c	/^int DruidAttackSpells(struct char_data *ch, struct char_data *vict, int level)$/;"	f
DruidAttackSpells	spec_procs2.c	/^int DruidAttackSpells(struct char_data *ch, struct char_data *vict, int level)$/;"	f
DruidChallenger	spec_proc2.c	/^int DruidChallenger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DruidChallenger	spec_procs2.c	/^int DruidChallenger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DruidGuildMaster	spec_proc2.c	/^int DruidGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
DruidGuildMaster	spec_procs2.c	/^int DruidGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
DruidHeal	spec_proc2.c	/^void DruidHeal(struct char_data *ch, int level)$/;"	f
DruidHeal	spec_procs2.c	/^void DruidHeal(struct char_data *ch, int level)$/;"	f
DruidList	spells2.c	/^struct PolyType DruidList[MAX_DRUID_POLY] = {$/;"	v	typeref:struct:PolyType
DruidMob	spec_proc2.c	/^int DruidMob(struct char_data *ch)$/;"	f
DruidMob	spec_procs2.c	/^int DruidMob(struct char_data *ch)$/;"	f
DruidTree	spec_proc2.c	/^int DruidTree(struct char_data *ch)$/;"	f
DruidTree	spec_procs2.c	/^int DruidTree(struct char_data *ch)$/;"	f
Dump	spec_proc.c	17;"	d	file:
Dump	spec_procs.c	17;"	d	file:
DwarvenMiners	spec_proc2.c	/^int DwarvenMiners(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
DwarvenMiners	spec_procs2.c	/^int DwarvenMiners(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
EARTH_ELEMENTAL	spells2.c	2420;"	d	file:
ELF_DELIVERY	spec_proc.c	4331;"	d	file:
ELF_DELIVERY	spec_procs.c	4380;"	d	file:
ELF_DUMP	spec_proc.c	4332;"	d	file:
ELF_DUMP	spec_procs.c	4381;"	d	file:
ELF_GETTING	spec_proc.c	4330;"	d	file:
ELF_GETTING	spec_procs.c	4379;"	d	file:
ELF_INIT	spec_proc.c	4328;"	d	file:
ELF_INIT	spec_procs.c	4377;"	d	file:
ELF_RESTING	spec_proc.c	4329;"	d	file:
ELF_RESTING	spec_procs.c	4378;"	d	file:
ELF_RETURN_HOME	spec_proc.c	4334;"	d	file:
ELF_RETURN_HOME	spec_procs.c	4383;"	d	file:
ELF_RETURN_TOWER	spec_proc.c	4333;"	d	file:
ELF_RETURN_TOWER	spec_procs.c	4382;"	d	file:
END_ROOM	spec_proc.c	6194;"	d	file:
END_ROOM	spec_procs.c	6243;"	d	file:
ENTER	spec_proc2.c	4572;"	d	file:
ENTER	spec_procs2.c	4723;"	d	file:
ENTER_CHECK	create.c	35;"	d	file:
ENTER_CHECK	create.mob.c	32;"	d	file:
ENTER_CHECK	create.obj.c	35;"	d	file:
EXIT_ROOM	spec_proc3.c	78;"	d	file:
EXIT_ROOM	spec_procs3.c	77;"	d	file:
EXP_CAP	fight.c	876;"	d	file:
EXP_CAP_1	fight.c	877;"	d	file:
EXP_CAP_2	fight.c	878;"	d	file:
EXP_CAP_3	fight.c	879;"	d	file:
EXP_CAP_4	fight.c	880;"	d	file:
EXP_CAP_5	fight.c	881;"	d	file:
EXP_CAP_6	fight.c	882;"	d	file:
EXP_CAP_7	fight.c	883;"	d	file:
EXP_CAP_8	fight.c	884;"	d	file:
EXP_CAP_OTHER	fight.c	885;"	d	file:
E_HACKING	spec_proc.c	1306;"	d	file:
E_HACKING	spec_procs.c	1308;"	d	file:
E_LONG_BEER_RUN	spec_proc.c	1309;"	d	file:
E_LONG_BEER_RUN	spec_procs.c	1311;"	d	file:
E_SHORT_BEER_RUN	spec_proc.c	1308;"	d	file:
E_SHORT_BEER_RUN	spec_procs.c	1310;"	d	file:
E_SKYDIVING	spec_proc.c	1311;"	d	file:
E_SKYDIVING	spec_procs.c	1313;"	d	file:
E_SLEEPING	spec_proc.c	1307;"	d	file:
E_SLEEPING	spec_procs.c	1309;"	d	file:
E_STOCK_FRIDGE	spec_proc.c	1310;"	d	file:
E_STOCK_FRIDGE	spec_procs.c	1312;"	d	file:
EarthQ	spec_proc.c	5575;"	d	file:
EarthQ	spec_procs.c	5624;"	d	file:
EasySummon	act.wizard.c	/^char EasySummon = 1;$/;"	v
EgoBladeSave	utility.c	/^int EgoBladeSave(struct char_data *ch)$/;"	f
Elf_Home	spec_proc.c	15;"	d	file:
Elf_Home	spec_procs.c	15;"	d	file:
EqWBits	utility.c	/^int EqWBits(struct char_data *ch, int bits)$/;"	f
Erics_Lair	spec_proc.c	1312;"	d	file:
Erics_Lair	spec_procs.c	1314;"	d	file:
EvilBlade	spec_proc3.c	/^int EvilBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
EvilBlade	spec_procs3.c	/^int EvilBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
ExpCaps	fight.c	/^long ExpCaps(int group_count, long total) $/;"	f
FALSE	Heap.c	11;"	d	file:
FIRE_ELEMENTAL	magic3.c	1146;"	d	file:
FIRE_ELEMENTAL	spells2.c	2417;"	d	file:
FLEE	spec_proc2.c	4261;"	d	file:
FLEE	spec_procs2.c	4412;"	d	file:
FNDELAY	comm.c	24;"	d	file:
FORCE_RENT_TIME	limits.c	945;"	d	file:
FORGET	utility.c	/^int FORGET(struct char_data *ch, int spl) $/;"	f
FORWARD	spec_proc3.c	73;"	d	file:
FORWARD	spec_procs3.c	72;"	d	file:
FOUND_FOOD	skills.c	1612;"	d	file:
FOUND_WATER	skills.c	1670;"	d	file:
FailCalm	magicutils.c	/^FailCalm(struct char_data *victim, struct char_data *ch)$/;"	f
FailCharm	magicutils.c	/^FailCharm(struct char_data *victim, struct char_data *ch)$/;"	f
FailPara	magicutils.c	/^FailPara(struct char_data *victim, struct char_data *ch)$/;"	f
FailPoison	magicutils.c	/^FailPoison(struct char_data *victim, struct char_data *ch)$/;"	f
FailSleep	magicutils.c	/^FailSleep(struct char_data *victim, struct char_data *ch)$/;"	f
FailSnare	magicutils.c	/^FailSnare(struct char_data *victim, struct char_data *ch)$/;"	f
FallOffMount	utility.c	/^void FallOffMount(struct char_data *ch, struct char_data *h)$/;"	f
Fears	Opinion.c	/^int Fears( struct char_data *ch, struct char_data *v)$/;"	f
FighterMove	utility.c	/^void FighterMove( struct char_data *ch)$/;"	f
FindABetterWeapon	mobact.c	/^FindABetterWeapon(struct char_data *mob)$/;"	f
FindAFearee	Opinion.c	/^struct char_data *FindAFearee( struct char_data *ch) $/;"	f
FindAHatee	Opinion.c	/^struct char_data *FindAHatee( struct char_data *ch) $/;"	f
FindAnAttacker	fight.c	/^struct char_data *FindAnAttacker(struct char_data *ch) $/;"	f
FindAnyVictim	fight.c	/^struct char_data *FindAnyVictim( struct char_data *ch)$/;"	f
FindCommandName	parser.c	/^char *FindCommandName(int num)$/;"	f
FindCommandNumber	parser.c	/^int FindCommandNumber(char *cmd)$/;"	f
FindMetaVictim	fight.c	/^struct char_data *FindMetaVictim( struct char_data *ch)$/;"	f
FindMobDiffZoneSameRace	utility.c	/^struct char_data *FindMobDiffZoneSameRace(struct char_data *ch)$/;"	f
FindMobInRoomWithFunction	spec_proc.c	/^struct char_data *FindMobInRoomWithFunction(int room, int (*func)())$/;"	f
FindMobInRoomWithFunction	spec_procs.c	/^struct char_data *FindMobInRoomWithFunction(int room, int (*func)())$/;"	f
FindTrapDamage	Trap.c	/^void FindTrapDamage( struct char_data *v, struct obj_data *i)$/;"	f
FindValidCommand	parser.c	/^NODE *FindValidCommand(char *name)$/;"	f
FindVictim	fight.c	/^struct char_data *FindVictim( struct char_data *ch)$/;"	f
FindZone	utility.c	/^int FindZone(int zone)$/;"	f
FireBreather	spec_proc3.c	/^int FireBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
FireBreather	spec_procs3.c	/^int FireBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Fountain	spec_proc.c	/^int Fountain(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
Fountain	spec_procs.c	/^int Fountain(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
Fountain_Level	spec_proc2.c	30;"	d	file:
Fountain_Level	spec_procs2.c	31;"	d	file:
FreeFears	Opinion.c	/^int FreeFears( struct char_data *ch)$/;"	f
FreeHates	Opinion.c	/^int FreeHates( struct char_data *ch)$/;"	f
Freehdr	sunmalloc.c	/^typedef struct  freehdr *Freehdr;$/;"	t	typeref:struct:freehdr	file:
FrostBreather	spec_proc3.c	/^int FrostBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
FrostBreather	spec_procs3.c	/^int FrostBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
GAIN	spec_proc2.c	1951;"	d	file:
GAIN	spec_procs2.c	1965;"	d	file:
GIVE	spec_proc2.c	1950;"	d	file:
GIVE	spec_procs2.c	1964;"	d	file:
GOLEM	magic3.c	461;"	d	file:
GO_OK	skills.c	386;"	d	file:
GO_OK_SMARTER	skills.c	388;"	d	file:
GREY_STONE	spells2.c	2424;"	d	file:
GainLevel	spec_proc.c	/^int GainLevel(struct char_data *ch, int class)$/;"	f
GainLevel	spec_procs.c	/^int GainLevel(struct char_data *ch, int class)$/;"	f
GasBreather	spec_proc3.c	/^int GasBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
GasBreather	spec_procs3.c	/^int GasBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
GenerateHash	parser.c	/^void GenerateHash()$/;"	f
GenericCityguard	spec_proc2.c	/^int GenericCityguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
GenericCityguard	spec_procs2.c	/^int GenericCityguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
GenericCityguardHateUndead	spec_proc2.c	/^int GenericCityguardHateUndead(struct char_data *ch, int cmd, char *arg, struct char_data *mob,int type)$/;"	f
GenericCityguardHateUndead	spec_procs2.c	/^int GenericCityguardHateUndead(struct char_data *ch, int cmd, char *arg, struct char_data *mob,int type)$/;"	f
GetALevel	multiclass.c	/^int GetALevel(struct char_data *ch, int which)$/;"	f
GetApprox	utility.c	/^int GetApprox(int num, int perc)$/;"	f
GetClassLevel	multiclass.c	/^int GetClassLevel(struct char_data *ch, int class)$/;"	f
GetDamBonus	mobact.c	/^int GetDamBonus(struct obj_data *w)$/;"	f
GetDamage	mobact.c	/^int GetDamage(struct obj_data *w, struct char_data *ch) $/;"	f
GetFormType	fight.c	/^int GetFormType(struct char_data *ch)$/;"	f
GetHandDamage	mobact.c	/^int GetHandDamage(struct char_data *ch) $/;"	f
GetItemClassRestrictions	utility.c	/^int GetItemClassRestrictions(struct obj_data *obj)$/;"	f
GetItemDamageType	fight.c	/^int GetItemDamageType( int type)$/;"	f
GetMaxLevel	multiclass.c	/^int GetMaxLevel(struct char_data *ch)$/;"	f
GetMonth	weather.c	/^void GetMonth( int month)$/;"	f
GetNewRace	utility.c	/^int GetNewRace(struct char_file_u *s)$/;"	f
GetSecMaxLev	multiclass.c	/^int GetSecMaxLev(struct char_data *ch)$/;"	f
GetSumRaceMaxLevInRoom	utility.c	/^int GetSumRaceMaxLevInRoom( struct char_data *ch)$/;"	f
GetThirdMaxLev	multiclass.c	/^int GetThirdMaxLev(struct char_data *ch)$/;"	f
GetTotLevel	multiclass.c	/^int GetTotLevel(struct char_data *ch)$/;"	f
GetWeaponDam	fight.c	/^int GetWeaponDam(struct char_data *ch, struct char_data *v, $/;"	f
GetWeaponType	fight.c	/^int GetWeaponType(struct char_data *ch, struct obj_data **wielded) $/;"	f
Getw_type	fight.c	/^int Getw_type(struct obj_data *wielded) $/;"	f
GhostLieutenant	spec_proc.c	6196;"	d	file:
GhostLieutenant	spec_procs.c	6245;"	d	file:
GhostSoldier	spec_proc.c	6195;"	d	file:
GhostSoldier	spec_procs.c	6244;"	d	file:
GiveMinStrToWield	handler.c	/^int GiveMinStrToWield(struct obj_data *obj, struct char_data *ch)$/;"	f
GoodBlade	spec_proc3.c	/^int GoodBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
GoodBlade	spec_procs3.c	/^int GoodBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
GreetPeople	spec_proc2.c	/^void GreetPeople(struct char_data *ch)$/;"	f
GreetPeople	spec_procs2.c	/^void GreetPeople(struct char_data *ch)$/;"	f
GroupLevelRatioExp	fight.c	/^long GroupLevelRatioExp(struct char_data *ch,int group_max_level,long experincepoints)$/;"	f
HASH_KEY	hash.c	7;"	d	file:
HOLDING_MAX	spec_proc2.c	2810;"	d	file:
HOLDING_MAX	spec_procs2.c	2833;"	d	file:
HOLDING_TANK	spec_proc2.c	2811;"	d	file:
HOLDING_TANK	spec_procs2.c	2834;"	d	file:
HOLY_ITEM_RAVENLOFT	spec_proc3.c	731;"	d	file:
HOLY_ITEM_RAVENLOFT	spec_procs3.c	730;"	d	file:
HasClass	multiclass.c	/^int HasClass(struct char_data *ch, int class)$/;"	f
HasHands	utility.c	/^int HasHands( struct char_data *ch)$/;"	f
HasObject	utility.c	/^int HasObject( struct char_data *ch, int ob_num)$/;"	f
HasWBits	utility.c	/^int HasWBits(struct char_data *ch, int bits)$/;"	f
HashTable	parser.c	/^byte HashTable[256];$/;"	v
Hates	Opinion.c	/^int Hates( struct char_data *ch, struct char_data *v)$/;"	f
HighIntPaladin	spec_proc3.c	/^int HighIntPaladin(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
HitCheckDeny	fight.c	/^int HitCheckDeny(struct char_data *ch, struct char_data *victim, int type, $/;"	f
HitOrMiss	fight.c	/^int HitOrMiss(struct char_data *ch, struct char_data *victim, int calc_thaco) $/;"	f
HitRollDesc	act.info.c	/^char *HitRollDesc(int a)$/;"	f
HitVictim	fight.c	/^int HitVictim(struct char_data *ch, struct char_data *v, int dam, $/;"	f
House	spec_proc.c	/^int House(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
House	spec_procs.c	/^int House(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
HowManyClasses	multiclass.c	/^int HowManyClasses(struct char_data *ch)$/;"	f
HowManySpecials	utility.c	/^int HowManySpecials(struct char_data *ch)$/;"	f
HuntingMercenary	spec_proc2.c	/^int HuntingMercenary(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
HuntingMercenary	spec_procs2.c	/^int HuntingMercenary(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
INIT_GRAIN	sunmalloc.c	165;"	d	file:
INIT_MXFAST	sunmalloc.c	163;"	d	file:
INIT_NLBLKS	sunmalloc.c	164;"	d	file:
INQ_LOOSE	spec_proc.c	9;"	d	file:
INQ_LOOSE	spec_procs.c	9;"	d	file:
INQ_SHOUT	spec_proc.c	8;"	d	file:
INQ_SHOUT	spec_procs.c	8;"	d	file:
IRON_DIR_STOP	spec_proc3.c	978;"	d	file:
IRON_DIR_STOP	spec_procs3.c	977;"	d	file:
IRON_ROOM_STOP	spec_proc3.c	979;"	d	file:
IRON_ROOM_STOP	spec_procs3.c	978;"	d	file:
IS_BLACK	spec_proc3.c	67;"	d	file:
IS_BLACK	spec_procs3.c	66;"	d	file:
IS_DIR	skills.c	385;"	d	file:
IS_ENEMY	spec_proc3.c	70;"	d	file:
IS_ENEMY	spec_procs3.c	69;"	d	file:
IS_FOLLOWING	skills.c	/^int IS_FOLLOWING(struct char_data *tch, struct char_data *person) $/;"	f
IS_FRIEND	spec_proc3.c	71;"	d	file:
IS_FRIEND	spec_procs3.c	70;"	d	file:
IS_IMMUNE	magic3.c	16;"	d	file:
IS_LINKDEAD	utility.c	/^int IS_LINKDEAD(struct char_data *ch)$/;"	f
IS_MURDER	utility.c	/^int IS_MURDER(struct char_data *ch)$/;"	f
IS_PIECE	spec_proc3.c	69;"	d	file:
IS_PIECE	spec_procs3.c	68;"	d	file:
IS_STEALER	utility.c	/^int IS_STEALER(struct char_data *ch)$/;"	f
IS_UNDERGROUND	utility.c	/^int IS_UNDERGROUND(struct char_data *ch)$/;"	f
IS_WHITE	spec_proc3.c	68;"	d	file:
IS_WHITE	spec_procs3.c	67;"	d	file:
Identifier	spec_proc.c	6198;"	d	file:
Identifier	spec_procs.c	6247;"	d	file:
ImpSaveSpell	spell_parser.c	/^bool ImpSaveSpell(struct char_data *ch, sh_int save_type, int mod)$/;"	f
IncrementZoneNr	utility.c	/^void IncrementZoneNr(int nr)$/;"	f
InformMess	Trap.c	/^void InformMess( struct char_data *v)$/;"	f
InitHeap	Heap.c	/^struct StrHeap *InitHeap()$/;"	f
InitRadix	parser.c	/^void InitRadix()$/;"	f
InitScreen	comm.c	/^void InitScreen(struct char_data *ch)$/;"	f
Inquisitor	spec_proc.c	/^int Inquisitor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Inquisitor	spec_procs.c	/^int Inquisitor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
InvWBits	utility.c	/^int InvWBits(struct char_data *ch, int bits)$/;"	f
IsAnimal	utility.c	/^int IsAnimal( struct char_data *ch)$/;"	f
IsBadSide	utility.c	/^int IsBadSide(struct char_data *ch)$/;"	f
IsDarkOutside	utility.c	/^int IsDarkOutside(struct room_data *rp)$/;"	f
IsDiabolic	utility.c	/^int IsDiabolic( struct char_data *ch)$/;"	f
IsDragon	utility.c	/^int IsDragon( struct char_data *ch)$/;"	f
IsExtraPlanar	utility.c	/^int IsExtraPlanar( struct char_data *ch)$/;"	f
IsGiant	utility.c	/^int IsGiant ( struct char_data *ch)$/;"	f
IsGiantish	utility.c	/^int IsGiantish( struct char_data *ch)$/;"	f
IsGodly	utility.c	/^int IsGodly( struct char_data *ch)$/;"	f
IsGoodSide	utility.c	/^int IsGoodSide(struct char_data *ch)$/;"	f
IsHumanoid	utility.c	/^int IsHumanoid( struct char_data *ch)$/;"	f
IsImmune	utility.c	/^unsigned IsImmune(struct char_data *ch, int bit)$/;"	f
IsLycanthrope	utility.c	/^int IsLycanthrope( struct char_data *ch)$/;"	f
IsMagicSpell	utility.c	/^int IsMagicSpell(int spell_num) $/;"	f
IsOnPmp	utility.c	/^int IsOnPmp(int room_nr)$/;"	f
IsOther	utility.c	/^int IsOther( struct char_data *ch)$/;"	f
IsPerson	utility.c	/^int IsPerson( struct char_data *ch)$/;"	f
IsReptile	utility.c	/^int IsReptile( struct char_data *ch)$/;"	f
IsResist	utility.c	/^unsigned IsResist(struct char_data *ch, int bit)$/;"	f
IsRestricted	act.obj2.c	/^int IsRestricted(int Mask, int Class)$/;"	f
IsRideable	utility.c	/^int IsRideable( struct char_data *ch)$/;"	f
IsSmall	utility.c	/^int IsSmall( struct char_data *ch)$/;"	f
IsSpecialized	utility.c	/^int IsSpecialized(int sk_num)$/;"	f
IsSusc	utility.c	/^unsigned IsSusc(struct char_data *ch, int bit)$/;"	f
IsUndead	utility.c	/^int IsUndead( struct char_data *ch)$/;"	f
IsVeggie	utility.c	/^int IsVeggie( struct char_data *ch)$/;"	f
ItemAlignClash	utility.c	/^int ItemAlignClash(struct char_data *ch, struct obj_data *obj)$/;"	f
ItemDamType	constants.c	/^const char *ItemDamType[] = $/;"	v
ItemEgoClash	utility.c	/^int ItemEgoClash(struct char_data *ch, struct obj_data *obj, int bon)$/;"	f
ItemSave	fight.c	/^int ItemSave( struct obj_data *i, int dam_type) $/;"	f
ItemSaveThrows	constants.c	/^int ItemSaveThrows[22][5] = {$/;"	v
Ivory_Gate	spec_proc.c	18;"	d	file:
Ivory_Gate	spec_procs.c	18;"	d	file:
KITTEN	magic3.c	326;"	d	file:
KLUDGE_MEM	mybsd.c	42;"	d	file:
Keftab	spec_proc.c	/^int Keftab(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Keftab	spec_procs.c	/^int Keftab(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Kitchen	spec_proc.c	5570;"	d	file:
Kitchen	spec_procs.c	5619;"	d	file:
Kraken	spec_proc.c	/^int Kraken(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Kraken	spec_procs.c	/^int Kraken(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
LAST_DRUID_MOB	spells2.c	111;"	d	file:
LAST_POLY_MOB	spells2.c	87;"	d	file:
LBUFSIZ	sunmalloc.c	1466;"	d	file:
LEFT	spec_proc3.c	75;"	d	file:
LEFT	spec_procs3.c	74;"	d	file:
LITTLE_ROCK	magic3.c	1535;"	d	file:
LOG_ZONE_ERROR	db.c	1206;"	d	file:
LONG_SWORD	spells2.c	2366;"	d	file:
Lattimore_Eating	spec_proc.c	5563;"	d	file:
Lattimore_Eating	spec_procs.c	5612;"	d	file:
Lattimore_FoodRun	spec_proc.c	5562;"	d	file:
Lattimore_FoodRun	spec_procs.c	5611;"	d	file:
Lattimore_GoHome	spec_proc.c	5564;"	d	file:
Lattimore_GoHome	spec_procs.c	5613;"	d	file:
Lattimore_Hiding	spec_proc.c	5565;"	d	file:
Lattimore_Hiding	spec_procs.c	5614;"	d	file:
Lattimore_Initialize	spec_proc.c	5560;"	d	file:
Lattimore_Initialize	spec_procs.c	5609;"	d	file:
Lattimore_Item	spec_proc.c	5568;"	d	file:
Lattimore_Item	spec_procs.c	5617;"	d	file:
Lattimore_Lockers	spec_proc.c	5561;"	d	file:
Lattimore_Lockers	spec_procs.c	5610;"	d	file:
Lattimore_Run	spec_proc.c	5567;"	d	file:
Lattimore_Run	spec_procs.c	5616;"	d	file:
Lattimore_Sleeping	spec_proc.c	5566;"	d	file:
Lattimore_Sleeping	spec_procs.c	5615;"	d	file:
Leader	spec_proc.c	/^int Leader(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Leader	spec_procs.c	/^int Leader(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
LearnFromMistake	utility.c	/^int LearnFromMistake(struct char_data *ch, int sknum, int silent, int max)$/;"	f
LevelMod	fight.c	/^int LevelMod(struct char_data *ch, struct char_data *v, int exp)$/;"	f
LightningBreather	spec_proc3.c	/^int LightningBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
LightningBreather	spec_procs3.c	/^int LightningBreather(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
LoadZoneFile	utility.c	/^int LoadZoneFile(FILE *fl, int zon)$/;"	f
LoreBackstabBonus	fight.c	/^int LoreBackstabBonus(struct char_data *ch, struct char_data *v)$/;"	f
MAGIC	bsd.c	133;"	d	file:
MAGIC	mybsd.c	134;"	d	file:
MAIN_MENU	create.c	7;"	d	file:
MANA_CL	spell_parser.c	14;"	d	file:
MANA_MU	spell_parser.c	13;"	d	file:
MAX	utility.c	/^int MAX(int a, int b)$/;"	f
MAX_BREATHS	spells2.c	1881;"	d	file:
MAX_CMD_LIST	interpreter.c	15;"	d	file:
MAX_CONNECTS	comm.c	32;"	d	file:
MAX_DRUID_POLY	spells2.c	90;"	d	file:
MAX_GNAME	act.other.c	1199;"	d	file:
MAX_HOSTNAME	comm.c	39;"	d	file:
MAX_INDICES	db.c	702;"	d	file:
MAX_LANGS	act.comm.c	672;"	d	file:
MAX_MAGE_POLY	spells2.c	36;"	d	file:
MAX_MESSAGE_LENGTH	board.c	15;"	d	file:
MAX_MSGS	board.c	14;"	d	file:
MAX_MUTYPE	spec_assign.c	32;"	d	file:
MAX_NAME_LENGTH	comm.c	38;"	d	file:
MAX_NOTE_LENGTH	act.comm.c	478;"	d	file:
MAX_NPC_CORPSE_TIME	fight.c	367;"	d	file:
MAX_PC_CORPSE_TIME	fight.c	368;"	d	file:
MAX_PROD	shop.c	9;"	d	file:
MAX_SAVE_PTR	mybsd.c	149;"	d	file:
MAX_SPECIALS	utility.c	/^int MAX_SPECIALS(struct char_data *ch)$/;"	f
MAX_STR	modify.c	155;"	d	file:
MAX_SUN_SWORDS	spec_proc3.c	730;"	d	file:
MAX_SUN_SWORDS	spec_procs3.c	729;"	d	file:
MAX_TRADE	shop.c	8;"	d	file:
MEMORIZED	utility.c	/^int MEMORIZED(struct char_data *ch, int spl) $/;"	f
MIN	utility.c	/^int MIN(int a, int b)$/;"	f
MOB_DIR	db.c	19;"	d	file:
MOB_HIT_RETURN	create.mob.c	30;"	d	file:
MOB_MAIN_MENU	create.mob.c	8;"	d	file:
MONK_MOB	spec_proc2.c	4260;"	d	file:
MONK_MOB	spec_procs2.c	4411;"	d	file:
MOUNT_EVIL	magic3.c	2394;"	d	file:
MOUNT_GOOD	magic3.c	2393;"	d	file:
MOUNT_NEUT	magic3.c	2395;"	d	file:
MOUNT_ONE	magic3.c	2392;"	d	file:
MSTATS	mybsd.c	45;"	d	file:
MageGuildMaster	spec_proc.c	/^int MageGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
MageGuildMaster	spec_procs.c	/^int MageGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
Magic_Fountain	spec_proc2.c	/^int Magic_Fountain(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
Magic_Fountain	spec_procs2.c	/^int Magic_Fountain(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
MakeNiftyAttack	utility.c	/^void MakeNiftyAttack( struct char_data *ch)$/;"	f
MakeNoise	Sound.c	/^void MakeNoise(int room, char *local_snd, char *distant_snd)$/;"	f
MakeQuest	spec_proc2.c	/^int MakeQuest(struct char_data *ch, struct char_data *gm, int Class, char *arg, int cmd) $/;"	f
MakeQuest	spec_procs2.c	/^int MakeQuest(struct char_data *ch, struct char_data *gm, int Class, char *arg, int cmd) $/;"	f
MakeScrap	fight.c	/^void MakeScrap( struct char_data *ch,struct char_data *v, struct obj_data *obj)$/;"	f
MakeSound	Sound.c	/^MakeSound(int pulse)$/;"	f
MakeZoneFile	utility.c	/^FILE *MakeZoneFile( struct char_data *c, int zone)$/;"	f
Manticore	spec_proc.c	/^int Manticore(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Manticore	spec_procs.c	/^int Manticore(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MaxCanMemorize	utility.c	/^int MaxCanMemorize(struct char_data *ch, int spell)$/;"	f
MaxChrForRace	utility.c	/^int MaxChrForRace(struct char_data *ch)$/;"	f
MaxConForRace	utility.c	/^int MaxConForRace(struct char_data *ch)$/;"	f
MaxDexForRace	utility.c	/^int MaxDexForRace(struct char_data *ch)$/;"	f
MaxIntForRace	utility.c	/^int MaxIntForRace(struct char_data *ch)$/;"	f
MaxLimited	utility.c	/^int MaxLimited(int lev)$/;"	f
MaxStrForRace	utility.c	/^int MaxStrForRace(struct char_data *ch)$/;"	f
MaxWisForRace	utility.c	/^int MaxWisForRace(struct char_data *ch)$/;"	f
Med_Chambers	spec_proc.c	6375;"	d	file:
Med_Chambers	spec_procs.c	6424;"	d	file:
MidgaardCitizen	spec_proc.c	/^int MidgaardCitizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MidgaardCitizen	spec_procs.c	/^int MidgaardCitizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MidgaardCityguard	spec_proc.c	/^int MidgaardCityguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MidgaardCityguard	spec_procs.c	/^int MidgaardCityguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MissVictim	fight.c	/^int MissVictim(struct char_data *ch, struct char_data *v, int type, int w_type,$/;"	f
MissileDamage	fight.c	/^int MissileDamage(struct char_data *ch, struct char_data *victim,$/;"	f
MissileHit	fight.c	/^void MissileHit(struct char_data *ch, struct char_data *victim, int type)$/;"	f
MobCountInRoom	utility.c	/^int MobCountInRoom( struct char_data *list)$/;"	f
MobEdit	create.mob.c	/^void MobEdit(struct char_data *ch, char *arg)$/;"	f
MobFriend	mobact.c	/^int MobFriend( struct char_data *ch, struct char_data *f)$/;"	f
MobHit	mobact.c	/^void MobHit(struct char_data *ch, struct char_data *v, int type)$/;"	f
MobHitReturn	create.mob.c	/^void MobHitReturn(struct char_data *ch, char *arg, int type)$/;"	f
MobHunt	mobact.c	/^void MobHunt(struct char_data *ch)$/;"	f
MobLevBonus	act.info.c	/^int MobLevBonus(struct char_data *ch)$/;"	f
MobScavenge	mobact.c	/^void MobScavenge(struct char_data *ch)$/;"	f
MobVnum	utility.c	/^long MobVnum( struct char_data *c)$/;"	f
MonkChallenger	spec_proc2.c	/^int MonkChallenger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MonkChallenger	spec_procs2.c	/^int MonkChallenger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MonkDodge	fight.c	/^int MonkDodge( struct char_data *ch, struct char_data *v, int *dam)$/;"	f
MonkMove	utility.c	/^void MonkMove( struct char_data *ch)$/;"	f
MordGuard	spec_proc.c	/^int MordGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MordGuard	spec_procs.c	/^int MordGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MordGuildGuard	spec_proc.c	/^int MordGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MordGuildGuard	spec_procs.c	/^int MordGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
MountEgoCheck	utility.c	/^int MountEgoCheck(struct char_data *ch, struct char_data *horse)$/;"	f
MoveGroup	act.move.c	/^int MoveGroup( struct char_data *ch, int dir)$/;"	f
MoveOne	act.move.c	/^int MoveOne(struct char_data *ch, int dir)$/;"	f
Mymalloc	utility.c	/^void *Mymalloc( long size)$/;"	f
NAME	interpreter.c	1384;"	d	file:
NAME	interpreter.c	1410;"	d	file:
NBUCKETS	bsd.c	147;"	d	file:
NBUCKETS	mybsd.c	154;"	d	file:
NEW_ABS_MAX_CLASS	pcedit.c	12;"	d	file:
NEW_MAX_AFFECT	pcedit.c	11;"	d	file:
NEW_MAX_CONDITIONS	pcedit.c	16;"	d	file:
NEW_MAX_NEW_LANGUAGES	pcedit.c	14;"	d	file:
NEW_MAX_SAVES	pcedit.c	15;"	d	file:
NEW_MAX_SKILLS	pcedit.c	10;"	d	file:
NEW_MAX_TOUNGE	pcedit.c	13;"	d	file:
NEW_ZONE_SYSTEM	db.c	15;"	d	file:
NFREE_HDRS	sunmalloc.c	78;"	d	file:
NIL	sunmalloc.c	77;"	d	file:
NN_FOLLOW	spec_proc.c	3105;"	d	file:
NN_FOLLOW	spec_procs.c	3147;"	d	file:
NN_LOOSE	spec_proc.c	3104;"	d	file:
NN_LOOSE	spec_procs.c	3146;"	d	file:
NN_STOP	spec_proc.c	3106;"	d	file:
NN_STOP	spec_procs.c	3148;"	d	file:
NOD	spec_proc2.c	4258;"	d	file:
NOD	spec_procs2.c	4409;"	d	file:
NOT	interpreter.c	10;"	d	file:
NOTAFF_N_LEARNED	spec_proc3.c	2816;"	d	file:
NOTAFF_N_LEARNED	spec_procs3.c	2848;"	d	file:
NTMEGATE	spec_proc.c	4604;"	d	file:
NTMEGATE	spec_procs.c	4653;"	d	file:
NTMGOALEM	spec_proc.c	4611;"	d	file:
NTMGOALEM	spec_procs.c	4660;"	d	file:
NTMGOALEN	spec_proc.c	4618;"	d	file:
NTMGOALEN	spec_procs.c	4667;"	d	file:
NTMGOALNM	spec_proc.c	4610;"	d	file:
NTMGOALNM	spec_procs.c	4659;"	d	file:
NTMGOALNN	spec_proc.c	4617;"	d	file:
NTMGOALNN	spec_procs.c	4666;"	d	file:
NTMGOALOM	spec_proc.c	4614;"	d	file:
NTMGOALOM	spec_procs.c	4663;"	d	file:
NTMGOALON	spec_proc.c	4621;"	d	file:
NTMGOALON	spec_procs.c	4670;"	d	file:
NTMGOALSM	spec_proc.c	4612;"	d	file:
NTMGOALSM	spec_procs.c	4661;"	d	file:
NTMGOALSN	spec_proc.c	4619;"	d	file:
NTMGOALSN	spec_procs.c	4668;"	d	file:
NTMGOALWM	spec_proc.c	4613;"	d	file:
NTMGOALWM	spec_procs.c	4662;"	d	file:
NTMGOALWN	spec_proc.c	4620;"	d	file:
NTMGOALWN	spec_procs.c	4669;"	d	file:
NTMNGATE	spec_proc.c	4603;"	d	file:
NTMNGATE	spec_procs.c	4652;"	d	file:
NTMOFFICE	spec_proc.c	4602;"	d	file:
NTMOFFICE	spec_procs.c	4651;"	d	file:
NTMSGATE	spec_proc.c	4605;"	d	file:
NTMSGATE	spec_procs.c	4654;"	d	file:
NTMSTARTM	spec_proc.c	4609;"	d	file:
NTMSTARTM	spec_procs.c	4658;"	d	file:
NTMSTARTN	spec_proc.c	4616;"	d	file:
NTMSTARTN	spec_procs.c	4665;"	d	file:
NTMSUSP	spec_proc.c	4622;"	d	file:
NTMSUSP	spec_procs.c	4671;"	d	file:
NTMWGATE	spec_proc.c	4606;"	d	file:
NTMWGATE	spec_procs.c	4655;"	d	file:
NTMWMORN	spec_proc.c	4608;"	d	file:
NTMWMORN	spec_procs.c	4657;"	d	file:
NTMWNIGHT	spec_proc.c	4615;"	d	file:
NTMWNIGHT	spec_procs.c	4664;"	d	file:
NTM_FIX	spec_proc.c	4623;"	d	file:
NTM_FIX	spec_procs.c	4672;"	d	file:
NULL	mybsd.c	48;"	d	file:
NULL	sunmalloc.c	81;"	d	file:
NUM_BOARDS	board.c	16;"	d	file:
NailThisSucker	fight.c	/^void NailThisSucker( struct char_data *ch)$/;"	f
Necklace	spec_proc.c	6374;"	d	file:
Necklace	spec_proc.c	6637;"	d	file:
Necklace	spec_procs.c	6423;"	d	file:
Necklace	spec_procs.c	6686;"	d	file:
NeutralBlade	spec_proc3.c	/^int NeutralBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
NeutralBlade	spec_procs3.c	/^int NeutralBlade(struct char_data *ch, int cmd, char *arg,struct obj_data *tobj, int type)$/;"	f
NewThalosCitizen	spec_proc.c	/^int NewThalosCitizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NewThalosCitizen	spec_procs.c	/^int NewThalosCitizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NewThalosGuildGuard	spec_proc.c	/^int NewThalosGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NewThalosGuildGuard	spec_procs.c	/^int NewThalosGuildGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NewThalosMayor	spec_proc.c	/^int NewThalosMayor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NewThalosMayor	spec_procs.c	/^int NewThalosMayor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NoSummon	utility.c	/^int NoSummon(struct char_data *ch)$/;"	f
NotLegalMove	act.move.c	/^void NotLegalMove(struct char_data *ch)$/;"	f
NudgeNudge	spec_proc.c	/^int NudgeNudge(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NudgeNudge	spec_procs.c	/^int NudgeNudge(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
NumCharmedFollowersInRoom	utility.c	/^int NumCharmedFollowersInRoom(struct char_data *ch)$/;"	f
OBJ_DIR	db.c	18;"	d	file:
OBJ_FILE_FREE	reception.c	21;"	d	file:
OBJ_HIT_RETURN	create.obj.c	30;"	d	file:
OBJ_MAIN_MENU	create.obj.c	6;"	d	file:
OBJ_SAVE_FILE	reception.c	20;"	d	file:
OBJ_VNUM_MONEY_ONE	handler.c	2116;"	d	file:
OBJ_VNUM_MONEY_SOME	handler.c	2115;"	d	file:
OK_NAME	act.info.c	2535;"	d	file:
OLD_ZONE_STUFF	db.c	12;"	d	file:
ONE_RING	spec_proc.c	3268;"	d	file:
ONE_RING	spec_procs.c	3310;"	d	file:
ON_BOARD	spec_proc3.c	72;"	d	file:
ON_BOARD	spec_procs3.c	71;"	d	file:
OPT_USEC	comm.c	40;"	d	file:
OR	interpreter.c	12;"	d	file:
O_LOG_NAME	comm.c	91;"	d	file:
O_MAX_LINES	comm.c	92;"	d	file:
ObjEdit	create.obj.c	/^void ObjEdit(struct char_data *ch, char *arg)$/;"	f
ObjFromCorpse	limits.c	/^int ObjFromCorpse( struct obj_data *c)$/;"	f
ObjHitReturn	create.obj.c	/^void ObjHitReturn(struct char_data *ch, char *arg, int type)$/;"	f
ObjVnum	utility.c	/^long ObjVnum( struct obj_data *o)$/;"	f
OnlyClass	multiclass.c	/^int OnlyClass( struct char_data *ch, int class)$/;"	f
OpenZoneFile	utility.c	/^FILE *OpenZoneFile(struct char_data *c, int zone)$/;"	f
PALE_BLUE_STONE	spells2.c	2423;"	d	file:
PORTAL	magic3.c	2310;"	d	file:
PRISON_LET_OUT_ROOM	spec_proc2.c	2395;"	d	file:
PRISON_LET_OUT_ROOM	spec_procs2.c	2414;"	d	file:
PRISON_ROOM	spec_proc2.c	2394;"	d	file:
PRISON_ROOM	spec_procs2.c	2413;"	d	file:
PROBABILITY_TRAVEL_ENTRANCE	mindskills1.c	124;"	d	file:
PROFILE	comm.c	372;"	d	file:
PSI_CAN	spec_proc3.c	2813;"	d	file:
PSI_CAN	spec_procs3.c	2845;"	d	file:
PULL	spec_procs3.c	3095;"	d	file:
PUPPY	magic3.c	327;"	d	file:
Paladin	spec_procs3.c	/^int Paladin(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) {$/;"	f
PaladinGuildGuard	spec_proc.c	/^int PaladinGuildGuard( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PaladinGuildGuard	spec_procs.c	/^int PaladinGuildGuard( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PaladinGuildmaster	spec_proc2.c	/^int PaladinGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PaladinGuildmaster	spec_procs2.c	/^int PaladinGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ParseAnsiColors	comm.c	/^char *ParseAnsiColors(int UsingAnsi, char *txt)$/;"	f
PeacefulWorks	fight.c	/^char PeacefulWorks = 1;  \/* set in @set *\/$/;"	v
PolyList	spells2.c	/^struct PolyType PolyList[MAX_MAGE_POLY] = {$/;"	v	typeref:struct:PolyType
PostKey	spec_proc.c	5578;"	d	file:
PostKey	spec_procs.c	5627;"	d	file:
PostMaster	spec_proc3.c	/^int PostMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PostMaster	spec_procs3.c	/^int PostMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PreProcDam	fight.c	/^int PreProcDam(struct char_data *ch, int type, int dam)$/;"	f
PrintLimitedItems	reception.c	/^void PrintLimitedItems()$/;"	f
PrisonGuard	spec_proc2.c	/^int PrisonGuard( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PrisonGuard	spec_procs2.c	/^int PrisonGuard( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PrydainGuard	spec_proc2.c	/^int PrydainGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PrydainGuard	spec_procs2.c	/^int PrydainGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PsiGuildmaster	spec_proc2.c	/^int PsiGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PsiGuildmaster	spec_procs2.c	/^int PsiGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Psionist	spec_proc3.c	/^int Psionist(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Psionist	spec_procs3.c	/^int Psionist(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
PulseMobiles	mobact.c	/^void PulseMobiles(int type)$/;"	f
RACE_WAR_MIN_LEVEL	act.other.c	2162;"	d	file:
RAFT	spells2.c	2368;"	d	file:
RCHECK	mybsd.c	43;"	d	file:
REBOOT_AT	modify.c	9;"	d	file:
RED_STONE	spells2.c	2422;"	d	file:
RENT_INACTIVE	db.c	10;"	d	file:
RESCUE_ROOM	spec_proc3.c	1014;"	d	file:
RESCUE_ROOM	spec_procs3.c	1013;"	d	file:
RESCUE_VIRGIN	spec_proc3.c	1013;"	d	file:
RESCUE_VIRGIN	spec_procs3.c	1012;"	d	file:
RHYODIN_FILE	spec_proc.c	6636;"	d	file:
RHYODIN_FILE	spec_procs.c	6685;"	d	file:
RIGHT	spec_proc3.c	76;"	d	file:
RIGHT	spec_procs3.c	75;"	d	file:
RMAGIC	bsd.c	134;"	d	file:
RMAGIC	mybsd.c	135;"	d	file:
ROOMP	spec_proc3.c	83;"	d	file:
ROOMP	spec_procs3.c	82;"	d	file:
ROTT	magic3.c	329;"	d	file:
RSLOP	bsd.c	137;"	d	file:
RSLOP	bsd.c	139;"	d	file:
RSLOP	mybsd.c	138;"	d	file:
RSLOP	mybsd.c	140;"	d	file:
RaceName	constants.c	/^const char *RaceName[] = {$/;"	v
RacialMax	constants.c	/^const int RacialMax[MAX_RACE+1][MAX_CLASS] = {$/;"	v
RandomWord	act.comm.c	/^char *RandomWord()$/;"	f
Ranger	spec_proc3.c	/^int Ranger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Ranger	spec_procs3.c	/^int Ranger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RangerGuildmaster	spec_proc2.c	/^int RangerGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RangerGuildmaster	spec_procs2.c	/^int RangerGuildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RatioExp	fight.c	/^int RatioExp( struct char_data *ch, struct char_data *victim, int total)$/;"	f
RawMove	act.move.c	/^int RawMove(struct char_data *ch, int dir)$/;"	f
RawSummon	magic.c	/^void RawSummon( struct char_data *v, struct char_data *c)$/;"	f
ReadObjs	pcedit.c	/^int ReadObjs( FILE *fl, struct obj_file_u *st)$/;"	f
ReadObjs	reception.c	/^int ReadObjs( FILE *fl, struct obj_file_u *st)$/;"	f
RecCompObjNum	utility.c	/^int RecCompObjNum( struct obj_data *o, int obj_num)$/;"	f
RecGetObjRoom	Sound.c	/^int RecGetObjRoom(struct obj_data *obj) $/;"	f
RecZwriteObj	utility.c	/^void RecZwriteObj(FILE *fp, struct obj_data *o)$/;"	f
RemAllAffects	utility.c	/^void RemAllAffects( struct char_data *ch)$/;"	f
RemFeared	Opinion.c	/^int RemFeared( struct char_data *ch, struct char_data *pud) $/;"	f
RemHated	Opinion.c	/^int RemHated( struct char_data *ch, struct char_data *pud) $/;"	f
RemHatred	Opinion.c	/^int RemHatred( struct char_data *ch, unsigned short bitv)$/;"	f
RepairGuy	spec_proc2.c	/^int RepairGuy( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RepairGuy	spec_procs2.c	/^int RepairGuy( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RestoreChar	utility.c	/^void RestoreChar(struct char_data *ch)$/;"	f
RideCheck	utility.c	/^int RideCheck( struct char_data *ch, int mod)$/;"	f
Ring	spec_proc.c	6371;"	d	file:
Ring	spec_procs.c	6420;"	d	file:
Ringwraith	spec_proc.c	/^int Ringwraith( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Ringwraith	spec_procs.c	/^int Ringwraith( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RiverPulseStuff	utility.c	/^void RiverPulseStuff(int pulse)$/;"	f
RoomEdit	create.c	/^void RoomEdit(struct char_data *ch, char *arg)$/;"	f
RoomLoad	utility.c	/^void RoomLoad( struct char_data *ch, int start, int end)$/;"	f
RoomSave	utility.c	/^void RoomSave(struct char_data *ch, long start, long end)$/;"	f
RustMonster	spec_proc.c	/^int RustMonster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
RustMonster	spec_procs.c	/^int RustMonster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
SAPLING	magic3.c	1497;"	d	file:
SEVERED_HEAD	fight.c	369;"	d	file:
SHAMAN_NAME	spec_proc.c	6103;"	d	file:
SHAMAN_NAME	spec_procs.c	6152;"	d	file:
SHIELD	spells2.c	2367;"	d	file:
SHOP_FILE	shop.c	7;"	d	file:
SISYPHUS_MAX_LEVEL	spec_proc.c	4101;"	d	file:
SISYPHUS_MAX_LEVEL	spec_procs.c	4150;"	d	file:
SLAV_DEAD_DONE_ROOM	spec_procs3.c	3116;"	d	file:
SLAV_LIVE_ROOM	spec_procs3.c	3117;"	d	file:
SMALLEST_BLK	sunmalloc.c	79;"	d	file:
SNAKE_GOD	spec_proc3.c	1015;"	d	file:
SNAKE_GOD	spec_procs3.c	1014;"	d	file:
SPELL_LEVEL	spell_parser.c	/^int SPELL_LEVEL(struct char_data *ch, int sn) $/;"	f
SPELL_SPECIAL_COST	spec_proc2.c	5845;"	d	file:
SPELL_SPECIAL_COST	spec_procs2.c	5996;"	d	file:
SPL_NME	spec_proc3.c	2820;"	d	file:
SPL_NME	spec_procs3.c	2852;"	d	file:
START_ROOM	spec_proc.c	6193;"	d	file:
START_ROOM	spec_procs.c	6242;"	d	file:
STATE	comm.c	42;"	d	file:
STATE	interpreter.c	14;"	d	file:
STATE	magic3.c	15;"	d	file:
STRAHD_RELOCATE_ROOM	spec_proc3.c	733;"	d	file:
STRAHD_RELOCATE_ROOM	spec_procs3.c	732;"	d	file:
STRAHD_VAMPIRE	spec_proc3.c	732;"	d	file:
STRAHD_VAMPIRE	spec_procs3.c	731;"	d	file:
STRAHD_ZOMBIE	spec_proc3.c	688;"	d	file:
STRAHD_ZOMBIE	spec_procs3.c	687;"	d	file:
SUN_SWORD_RAVENLOFT	spec_proc3.c	729;"	d	file:
SUN_SWORD_RAVENLOFT	spec_procs3.c	728;"	d	file:
SWORD_ANCIENTS	spec_proc.c	11;"	d	file:
SWORD_ANCIENTS	spec_procs.c	11;"	d	file:
Samah	spec_proc2.c	/^int Samah( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Samah	spec_procs2.c	/^int Samah( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
SameRace	mobact.c	/^int SameRace( struct char_data *ch1, struct char_data *ch2)$/;"	f
SaveZoneFile	utility.c	/^int SaveZoneFile(FILE *fp, int start_room, int end_room)$/;"	f
SayHello	spec_proc2.c	/^void  SayHello(struct char_data *ch, struct char_data *t)$/;"	f
SayHello	spec_procs2.c	/^void  SayHello(struct char_data *ch, struct char_data *t)$/;"	f
ScreenOff	act.info.c	/^void ScreenOff(struct char_data *ch)$/;"	f
SearchForNodeByName	parser.c	/^NODE *SearchForNodeByName(NODE *head, char *name, int len)$/;"	f
SecCheck	security.c	/^int SecCheck(char *arg, char *site)$/;"	f
SetCharFighting	fight.c	/^int SetCharFighting(struct char_data *ch, struct char_data *v)$/;"	f
SetDefaultLang	utility.c	/^int SetDefaultLang(struct char_data *ch)$/;"	f
SetHunting	utility.c	/^void SetHunting( struct char_data *ch, struct char_data *tch)$/;"	f
SetRacialStuff	utility.c	/^void SetRacialStuff( struct char_data *mob)$/;"	f
SetVictFighting	fight.c	/^int SetVictFighting(struct char_data *ch, struct char_data *v)$/;"	f
Shield	spec_proc.c	6370;"	d	file:
Shield	spec_procs.c	6419;"	d	file:
Silence	interpreter.c	/^int Silence = 0;$/;"	v
SiteLock	utility.c	/^int SiteLock (char *site)$/;"	f
SkipImmortals	fight.c	/^int SkipImmortals(struct char_data *v, int amnt,int attacktype)$/;"	f
Slavalis	spec_procs3.c	/^int Slavalis(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
SlotMachine	spec_proc2.c	/^int SlotMachine(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
SlotMachine	spec_procs2.c	/^int SlotMachine(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
SmartStrCpy	Heap.c	/^void SmartStrCpy(char *s1, const char *s2) \/* ignore trailing spaces and \\n *\/$/;"	f
SpaceForSkills	utility.c	/^int SpaceForSkills(struct char_data *ch)$/;"	f
SpellWearOff	spell_parser.c	/^void SpellWearOff(int s, struct char_data *ch)$/;"	f
SpellWearOffSoon	spell_parser.c	/^void SpellWearOffSoon(int s, struct char_data *ch)$/;"	f
SpyCheck	skills.c	/^int SpyCheck(struct char_data *ch)$/;"	f
StandUp	utility.c	/^void StandUp (struct char_data *ch)$/;"	f
StartLevels	multiclass.c	/^void StartLevels(struct char_data *ch)$/;"	f
StatTeller	spec_proc.c	/^int StatTeller(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
StatTeller	spec_procs.c	/^int StatTeller(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Storeroom	spec_proc.c	5572;"	d	file:
Storeroom	spec_procs.c	5621;"	d	file:
StormGiant	spec_proc.c	/^int StormGiant(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
StormGiant	spec_procs.c	/^int StormGiant(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
StringHeap	Heap.c	/^void StringHeap(char *string, struct StrHeap *Heap)$/;"	f
Submit	spec_proc2.c	/^void  Submit(struct char_data *ch, struct char_data *t)$/;"	f
Submit	spec_procs2.c	/^void  Submit(struct char_data *ch, struct char_data *t)$/;"	f
SultanGuard	spec_proc.c	/^int SultanGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
SultanGuard	spec_procs.c	/^int SultanGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Summoner	spec_proc2.c	/^int Summoner(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Summoner	spec_procs2.c	/^int Summoner(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
SwitchStuff	magicutils.c	/^SwitchStuff( struct char_data *giver, struct char_data *taker)$/;"	f
SystemFlags	comm.c	/^long SystemFlags;$/;"	v
T1000_data	spec_proc2.c	/^typedef struct T1000_data {$/;"	s	file:
T1000_data	spec_proc2.c	/^} T1000_data;$/;"	t	typeref:struct:T1000_data	file:
T1000_data	spec_procs2.c	/^typedef struct T1000_data {$/;"	s	file:
T1000_data	spec_procs2.c	/^} T1000_data;$/;"	t	typeref:struct:T1000_data	file:
TAN_BAG	skills.c	1193;"	d	file:
TAN_BOOTS	skills.c	1188;"	d	file:
TAN_GLOVES	skills.c	1189;"	d	file:
TAN_HELMET	skills.c	1192;"	d	file:
TAN_JACKET	skills.c	1187;"	d	file:
TAN_LEGGINGS	skills.c	1190;"	d	file:
TAN_SHIELD	skills.c	1186;"	d	file:
TAN_SLEEVES	skills.c	1191;"	d	file:
THE_PUB	spec_proc.c	1089;"	d	file:
THE_PUB	spec_procs.c	1091;"	d	file:
TIMNUSNORTHLIMIT	spec_proc3.c	511;"	d	file:
TIMNUSNORTHLIMIT	spec_procs3.c	510;"	d	file:
TIMNUSWESTLIMIT	spec_proc3.c	512;"	d	file:
TIMNUSWESTLIMIT	spec_procs3.c	511;"	d	file:
TP_ERROR	modify.c	13;"	d	file:
TP_MOB	modify.c	11;"	d	file:
TP_OBJ	modify.c	12;"	d	file:
TREE	magic3.c	111;"	d	file:
TRUE	Heap.c	10;"	d	file:
TYPE_III_ITEM	spells2.c	2500;"	d	file:
TYPE_II_ITEM	spells2.c	2501;"	d	file:
TYPE_IV_ITEM	spells2.c	2499;"	d	file:
TYPE_I_ITEM	spells2.c	2502;"	d	file:
TYPE_VI_ITEM	spells2.c	2497;"	d	file:
TYPE_V_ITEM	spells2.c	2498;"	d	file:
TYT_CIT	spec_proc.c	2732;"	d	file:
TYT_CIT	spec_procs.c	2774;"	d	file:
TYT_HIT	spec_proc.c	2735;"	d	file:
TYT_HIT	spec_procs.c	2777;"	d	file:
TYT_NONE	spec_proc.c	2731;"	d	file:
TYT_NONE	spec_procs.c	2773;"	d	file:
TYT_TELL	spec_proc.c	2734;"	d	file:
TYT_TELL	spec_procs.c	2776;"	d	file:
TYT_WHAT	spec_proc.c	2733;"	d	file:
TYT_WHAT	spec_procs.c	2775;"	d	file:
TeleportPulseStuff	utility.c	/^void TeleportPulseStuff(int pulse)$/;"	f
TempDis	comm.c	/^long TempDis=0;$/;"	v
ThiefGuildMaster	spec_proc.c	/^int ThiefGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
ThiefGuildMaster	spec_procs.c	/^int ThiefGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
ThrowChar	spec_proc.c	/^void ThrowChar(struct char_data *ch, struct char_data *v, int dir)$/;"	f
ThrowChar	spec_procs.c	/^void ThrowChar(struct char_data *ch, struct char_data *v, int dir)$/;"	f
ThrowerMob	spec_proc.c	/^int ThrowerMob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ThrowerMob	spec_procs.c	/^int ThrowerMob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
TimnusRoom	spec_proc3.c	510;"	d	file:
TimnusRoom	spec_procs3.c	509;"	d	file:
Tiredness	act.other.c	/^char *Tiredness(struct char_data *ch)$/;"	f
TotalMaxCanMem	act.other.c	/^int TotalMaxCanMem(struct char_data *ch)$/;"	f
TotalMemorized	act.other.c	/^int TotalMemorized(struct char_data *ch)$/;"	f
Trap	spec_proc.c	5574;"	d	file:
Trap	spec_procs.c	5623;"	d	file:
TrapDam	Trap.c	/^void TrapDam(struct char_data *v, int damtype, int amnt, struct obj_data *t)$/;"	f
TrapDamage	Trap.c	/^void TrapDamage(struct char_data *v, int damtype, int amnt, struct obj_data *t)$/;"	f
TrapDir	constants.c	/^const int TrapDir[] = $/;"	v
TrapPoison	Trap.c	/^void TrapPoison(struct char_data *v, struct obj_data *t)$/;"	f
TrapSleep	Trap.c	/^void TrapSleep(struct char_data *v)$/;"	f
TrapTeleport	Trap.c	/^void TrapTeleport(struct char_data *v) $/;"	f
TreeThrowerMob	spec_proc3.c	/^int TreeThrowerMob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
TreeThrowerMob	spec_procs3.c	/^int TreeThrowerMob(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
TriggerTrap	Trap.c	/^int TriggerTrap( struct char_data *ch, struct obj_data *i)$/;"	f
Tyrannosaurus_swallower	spec_proc.c	/^int Tyrannosaurus_swallower(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Tyrannosaurus_swallower	spec_procs.c	/^int Tyrannosaurus_swallower(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Tytan	spec_proc.c	/^int Tytan(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
Tytan	spec_procs.c	/^int Tytan(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
UMIN	comm.c	1395;"	d	file:
USE_COLOR	dimd.c	43;"	d	file:
USE_MANA	spell_parser.c	20;"	d	file:
UpdateMobMenu	create.mob.c	/^void UpdateMobMenu(struct char_data *ch)$/;"	f
UpdateObjMenu	create.obj.c	/^void UpdateObjMenu(struct char_data *ch)$/;"	f
UpdateRoomMenu	create.c	/^void UpdateRoomMenu(struct char_data *ch)$/;"	f
UpdateScreen	comm.c	/^void UpdateScreen(struct char_data *ch, int update)$/;"	f
Uptime	comm.c	/^long Uptime;            \/* time that the game has been up *\/$/;"	v
UseViolentHeldItem	mobact.c	/^int UseViolentHeldItem(struct char_data *ch) $/;"	f
VOID_PULL_TIME	limits.c	944;"	d	file:
ValidMove	act.move.c	/^int ValidMove( struct char_data *ch, int cmd) $/;"	f
Valik	spec_proc.c	/^int Valik( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type )$/;"	f
Valik	spec_procs.c	/^int Valik( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type )$/;"	f
Valik_Meditating	spec_proc.c	6365;"	d	file:
Valik_Meditating	spec_procs.c	6414;"	d	file:
Valik_Qfour	spec_proc.c	6369;"	d	file:
Valik_Qfour	spec_procs.c	6418;"	d	file:
Valik_Qone	spec_proc.c	6366;"	d	file:
Valik_Qone	spec_procs.c	6415;"	d	file:
Valik_Qthree	spec_proc.c	6368;"	d	file:
Valik_Qthree	spec_procs.c	6417;"	d	file:
Valik_Qtwo	spec_proc.c	6367;"	d	file:
Valik_Qtwo	spec_procs.c	6416;"	d	file:
Valik_Wandering	spec_proc.c	6364;"	d	file:
Valik_Wandering	spec_procs.c	6413;"	d	file:
WATER_BARREL	spells2.c	2370;"	d	file:
WATER_ELEMENTAL	spells2.c	2418;"	d	file:
WHERE_TO_SIT	spec_proc2.c	4667;"	d	file:
WHERE_TO_SIT	spec_procs2.c	4818;"	d	file:
WHITE	spec_proc3.c	62;"	d	file:
WHITE	spec_procs3.c	61;"	d	file:
WHO_TO_CALL	spec_proc2.c	4668;"	d	file:
WHO_TO_CALL	spec_procs2.c	4819;"	d	file:
WHO_TO_HUNT	spec_proc2.c	4666;"	d	file:
WHO_TO_HUNT	spec_procs2.c	4817;"	d	file:
WOLF	magic3.c	330;"	d	file:
WarrenGuard	spec_proc.c	/^int WarrenGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
WarrenGuard	spec_procs.c	/^int WarrenGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
WarriorGuildMaster	spec_proc.c	/^int WarriorGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
WarriorGuildMaster	spec_procs.c	/^int WarriorGuildMaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type) $/;"	f
WeaponCheck	fight.c	/^int WeaponCheck(struct char_data *ch, struct char_data *v, int type, int dam)$/;"	f
WeaponImmune	utility.c	/^int WeaponImmune(struct char_data *ch)$/;"	f
WeaponSpell	fight.c	/^int WeaponSpell( struct char_data *c, struct char_data *v, $/;"	f
WizLock	interpreter.c	/^int WizLock;$/;"	v
WizardGuard	spec_proc.c	/^int WizardGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
WizardGuard	spec_procs.c	/^int WizardGuard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
WriteObjs	reception.c	/^int WriteObjs( FILE *fl, struct obj_file_u *st)$/;"	f
ZCMD	db.c	2208;"	d	file:
ZCMD	db.c	2676;"	d	file:
ZM_MANA	spec_proc.c	3522;"	d	file:
ZM_MANA	spec_procs.c	3573;"	d	file:
ZM_NEMESIS	spec_proc.c	3523;"	d	file:
ZM_NEMESIS	spec_procs.c	3574;"	d	file:
ZO_DEAD	db.c	2130;"	d	file:
ZeroFeared	Opinion.c	/^void ZeroFeared(struct char_data *ch, struct char_data *v)$/;"	f
ZeroHatred	Opinion.c	/^void ZeroHatred(struct char_data *ch, struct char_data *v)$/;"	f
ZeroRent	reception.c	/^void ZeroRent( char *n)$/;"	f
Zwrite	utility.c	/^void Zwrite (FILE *fp, char cmd, int tf, int arg1, int arg2, int arg3, $/;"	f
__main	comm.c	/^int __main ()$/;"	f
__mallinfo	sunmalloc.c	/^struct  mallinfo __mallinfo = {$/;"	v	typeref:struct:mallinfo
_affected_by_s	comm.c	/^int _affected_by_s(struct char_data *ch, int skill)$/;"	f
_check_ass_name	interpreter.c	/^int _check_ass_name(char *name)$/;"	f
_hash_enter	hash.c	/^void _hash_enter(struct hash_header *ht, long key, void *data)$/;"	f
_lbound	sunmalloc.c	/^char    *_lbound = NULL;                \/* lower bound of heap *\/$/;"	v
_parse_name	interpreter.c	/^int _parse_name(char *arg, char *name)$/;"	f
_root	sunmalloc.c	/^Freehdr _root   = NIL;                  \/* root of free space list *\/$/;"	v
_ubound	sunmalloc.c	/^char    *_ubound = NULL;                \/* upper bound of heap *\/$/;"	v
abilities	pcedit.c	/^	struct char_ability_data abilities;$/;"	m	struct:char_file_u_new	typeref:struct:char_file_u_new::char_ability_data	file:
access_rent_files	pcedit.c	/^void access_rent_files(int number, int ITEM, char buf[40]) {$/;"	f
acid_monster	spec_proc3.c	/^int acid_monster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
acid_monster	spec_procs3.c	/^int acid_monster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
act	comm.c	/^void act(char *str, int hide_invisible, struct char_data *ch,$/;"	f
act	pcedit.c	/^	long    act;          \/* ACT Flags                    *\/$/;"	m	struct:char_file_u_new	file:
act_nr	act.social.c	/^	int act_nr;$/;"	m	struct:social_messg	file:
actflag	spec_proc.c	/^  int   actflag;$/;"	m	struct:pub_beers	file:
actflag	spec_procs.c	/^  int   actflag;$/;"	m	struct:pub_beers	file:
action_bits	constants.c	/^const char *action_bits[] = {$/;"	v
add_follower	spell_parser.c	/^void add_follower(struct char_data *ch, struct char_data *leader)$/;"	f
add_obj_cost	reception.c	/^void add_obj_cost(struct char_data *ch, struct char_data *re,$/;"	f
advance_level	limits.c	/^void advance_level(struct char_data *ch, int class)$/;"	f
affect_from_char	handler.c	/^void affect_from_char( struct char_data *ch, int skill)$/;"	f
affect_join	handler.c	/^void affect_join( struct char_data *ch, struct affected_type *af,$/;"	f
affect_modify	handler.c	/^void affect_modify(struct char_data *ch,byte loc, long mod, long bitv,bool add)$/;"	f
affect_remove	handler.c	/^void affect_remove( struct char_data *ch, struct affected_type *af )$/;"	f
affect_status	spec_proc.c	/^int affect_status(struct memory *mem, struct char_data *ch,$/;"	f
affect_status	spec_procs.c	/^int affect_status(struct memory *mem, struct char_data *ch,$/;"	f
affect_to_char	handler.c	/^void affect_to_char( struct char_data *ch, struct affected_type *af )$/;"	f
affect_total	handler.c	/^void affect_total(struct char_data *ch)$/;"	f
affect_update	spell_parser.c	/^void affect_update( int pulse )$/;"	f
affected	pcedit.c	/^	struct affected_type affected[MAX_AFFECT];$/;"	m	struct:char_file_u_new	typeref:struct:char_file_u_new::affected_type	file:
affected_bits	constants.c	/^const char *affected_bits[] = $/;"	v
affected_bits2	constants.c	/^const char *affected_bits2[] = $/;"	v
affected_by	pcedit.c	/^	long affected_by;$/;"	m	struct:char_file_u_new	file:
affected_by2	pcedit.c	/^	long affected_by2;$/;"	m	struct:char_file_u_new	file:
affected_by_spell	handler.c	/^bool affected_by_spell( struct char_data *ch, int skill )$/;"	f
after_ammt	pcedit.c	/^int orig_ammt=0, after_ammt=0;$/;"	v
age	utility.c	/^struct time_info_data age(struct char_data *ch)$/;"	f
age2	utility.c	/^void age2(struct char_data *ch, struct time_info_data *g)$/;"	f
alias	pcedit.c	/^	char alias[30];  \/* for later use.... *\/$/;"	m	struct:char_file_u_new	file:
alignment	pcedit.c	/^	int alignment;     $/;"	m	struct:char_file_u_new	file:
allocate_room	db.c	/^void allocate_room(long room_number)$/;"	f
allocated	sunmalloc.c	/^        uint    allocated;$/;"	m	struct:mallinfo	file:
andy_wilcox	spec_proc.c	/^int andy_wilcox(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
andy_wilcox	spec_procs.c	/^int andy_wilcox(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
another_hour	weather.c	/^void another_hour(int mode)$/;"	f
ansi_parse	ansi_parser.c	/^char *ansi_parse(char *code )$/;"	f
answer_a_mud	dimd.c	/^bool answer_a_mud(void)$/;"	f
anti_barbarian_stuff	utility.c	/^int anti_barbarian_stuff(struct obj_data *obj_object)$/;"	f
antioch_grenade	spec_proc2.c	/^int antioch_grenade(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
antioch_grenade	spec_procs2.c	/^int antioch_grenade(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
appear	fight.c	/^void appear(struct char_data *ch)$/;"	f
append_to_string_block	handler.c	/^void append_to_string_block(struct string_block *sb, char *str)$/;"	f
apply_ac	handler.c	/^int apply_ac(struct char_data *ch, int eq_pos)$/;"	f
apply_saving_throw	pcedit.c	/^	sh_int apply_saving_throw[MAX_SAVES];$/;"	m	struct:char_file_u_new	file:
apply_soundproof	utility.c	/^int apply_soundproof(struct char_data *ch)$/;"	f
apply_types	constants.c	/^const char *apply_types[] = {$/;"	v
archer	spec_procs3.c	/^int archer(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
archer_hth	spec_procs3.c	/^int archer_hth(struct char_data *ch)$/;"	f
archer_instructor	spec_procs2.c	/^int archer_instructor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
archer_sub	spec_procs3.c	/^int archer_sub(struct char_data *ch)$/;"	f
arena	sunmalloc.c	/^        uint    arena;$/;"	m	struct:mallinfo	file:
argument_interpreter	interpreter.c	/^void argument_interpreter(char *argument,char *first_arg,char *second_arg )$/;"	f
argument_split_2	act.info.c	/^void argument_split_2(char *argument, char *first_arg, char *second_arg) {$/;"	f
assign_command_pointers	interpreter.c	/^void assign_command_pointers ()$/;"	f
assign_mobiles	spec_assign.c	/^void assign_mobiles()$/;"	f
assign_objects	spec_assign.c	/^void assign_objects()$/;"	f
assign_rooms	spec_assign.c	/^void assign_rooms()$/;"	f
assign_spell_pointers	spell_parser.c	/^void assign_spell_pointers()$/;"	f
assign_the_shopkeepers	shop.c	/^void assign_the_shopkeepers()$/;"	f
astral_portal	spec_proc2.c	/^int astral_portal(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
astral_portal	spec_procs2.c	/^int astral_portal(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
att_kick_hit_ch	constants.c	/^const char *att_kick_hit_ch[] = {$/;"	v
att_kick_hit_room	constants.c	/^const char *att_kick_hit_room[] = {$/;"	v
att_kick_hit_victim	constants.c	/^const char *att_kick_hit_victim[] = {$/;"	v
att_kick_kill_ch	constants.c	/^const char *att_kick_kill_ch[] = {$/;"	v
att_kick_kill_room	constants.c	/^const char *att_kick_kill_room[] = {$/;"	v
att_kick_kill_victim	constants.c	/^const char *att_kick_kill_victim[] = {$/;"	v
att_kick_miss_ch	constants.c	/^const char *att_kick_miss_ch[] = {$/;"	v
att_kick_miss_room	constants.c	/^const char *att_kick_miss_room[] = {$/;"	v
att_kick_miss_victim	constants.c	/^const char *att_kick_miss_victim[] = {$/;"	v
attack_hit_text	fight.c	/^struct attack_hit_type attack_hit_text[] =$/;"	v	typeref:struct:attack_hit_type
attack_rats	spec_proc2.c	/^int attack_rats(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
attack_rats	spec_procs2.c	/^int attack_rats(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
author	board.c	/^  char *author;$/;"	m	struct:message	file:
avail_descs	comm.c	/^int maxdesc, avail_descs;$/;"	v
avatar_celestian	spec_proc3.c	/^int avatar_celestian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
avatar_celestian	spec_procs3.c	/^int avatar_celestian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
baby_bear	spec_proc3.c	/^int baby_bear(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
baby_bear	spec_procs3.c	/^int baby_bear(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
back_left_square	spec_proc3.c	/^struct room_data *back_left_square(struct room_data *room)$/;"	f
back_left_square	spec_procs3.c	/^struct room_data *back_left_square(struct room_data *room)$/;"	f
back_right_square	spec_proc3.c	/^struct room_data *back_right_square(struct room_data *room)$/;"	f
back_right_square	spec_procs3.c	/^struct room_data *back_right_square(struct room_data *room)$/;"	f
back_square	spec_proc3.c	/^struct room_data *back_square(struct room_data *room)$/;"	f
back_square	spec_procs3.c	/^struct room_data *back_square(struct room_data *room)$/;"	f
backstab_mult	constants.c	/^const byte backstab_mult[ABS_MAX_LVL] = {$/;"	v
badblksize	sunmalloc.c	202;"	d	file:
banana	spec_proc.c	/^int banana(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
banana	spec_procs.c	/^int banana(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
bank	spec_proc.c	/^int bank (struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
bank	spec_procs.c	/^int bank (struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
banshee	spec_proc3.c	/^int banshee(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
banshee	spec_procs3.c	/^int banshee(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
barbarian_guildmaster	spec_proc2.c	/^int barbarian_guildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
barbarian_guildmaster	spec_procs2.c	/^int barbarian_guildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
berserkdambonus	fight.c	/^int berserkdambonus ( struct char_data *ch, int dam)$/;"	f
berserkthaco	fight.c	/^int berserkthaco ( struct char_data *ch)$/;"	f
birth	pcedit.c	/^	time_t birth;  \/* Time of birth of character     *\/$/;"	m	struct:char_file_u_new	file:
bisect_arg	modify.c	/^void bisect_arg(char *arg, int *field, char *string)$/;"	f
blank	act.wizard.c	/^  int	blank;$/;"	m	struct:show_room_zone_struct	file:
blink	spec_proc.c	/^int blink( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
blink	spec_procs.c	/^int blink( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
blkerror	sunmalloc.c	/^static blkerror(p)$/;"	f	file:
block	sunmalloc.c	/^        Dblk    block;                  \/* Ptr to the data block *\/$/;"	m	struct:freehdr	file:
board	board.c	/^int board(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
board	board.c	/^struct board {$/;"	s	file:
board_check_locks	board.c	/^int board_check_locks (int bnum, struct char_data *ch) {$/;"	f
board_display_msg	board.c	/^int board_display_msg(struct char_data *ch, char *arg, int bnum)$/;"	f
board_load_board	board.c	/^void board_load_board() {$/;"	f
board_lock	board.c	/^} board_lock[NUM_BOARDS];$/;"	v	typeref:struct:board_lock_struct	file:
board_lock_struct	board.c	/^static struct board_lock_struct {$/;"	s	file:
board_remove_msg	board.c	/^int board_remove_msg(struct char_data *ch, char *arg, int bnum) {$/;"	f
board_save_board	board.c	/^void board_save_board(bnum) {$/;"	f
board_show_board	board.c	/^int board_show_board(struct char_data *ch, char *arg, int bnum)$/;"	f
board_write_msg	board.c	/^void board_write_msg(struct char_data *ch, char *arg, int bnum) {$/;"	f
boards	board.c	/^struct board boards[NUM_BOARDS];$/;"	v	typeref:struct:board
bool	sunmalloc.c	/^typedef enum {false,true} bool;$/;"	t	typeref:enum:__anon3	file:
boot_db	db.c	/^void boot_db()$/;"	f
boot_pose_messages	act.social.c	/^void boot_pose_messages()$/;"	f
boot_saved_rooms	db.c	/^void boot_saved_rooms()$/;"	f
boot_saved_zones	db.c	/^void boot_saved_zones()$/;"	f
boot_social_messages	act.social.c	/^void boot_social_messages()$/;"	f
boot_the_shops	shop.c	/^void boot_the_shops()$/;"	f
boot_world	db.c	/^void boot_world()$/;"	f
boot_zones	db.c	/^void boot_zones()$/;"	f
botch	bsd.c	/^botch(s)$/;"	f	file:
botch	mybsd.c	/^botch(s)$/;"	f	file:
bottom	act.wizard.c	/^  int	bottom, top;$/;"	m	struct:show_room_zone_struct	file:
breath_monsters	spec_proc2.c	/^struct breather breath_monsters[] = {$/;"	v	typeref:struct:breather
breath_monsters	spec_procs2.c	/^struct breather breath_monsters[] = {$/;"	v	typeref:struct:breather
breath_potions	spells2.c	/^} breath_potions[] = {$/;"	v	typeref:struct:pbreath
breath_victim	spec_proc2.c	/^struct breath_victim {$/;"	s	file:
breath_victim	spec_procs2.c	/^struct breath_victim {$/;"	s	file:
breath_weapon	spec_proc2.c	/^int breath_weapon(struct char_data *ch, struct char_data *target,$/;"	f
breath_weapon	spec_procs2.c	/^int breath_weapon(struct char_data *ch, struct char_data *target,$/;"	f
breaths	spec_proc2.c	/^static void (*breaths[])() = {$/;"	v	file:
breaths	spec_procs2.c	/^static funcp breaths[] = {$/;"	v	file:
buf_largecount	comm.c	/^int     buf_largecount;         \/* # of large buffers which exist *\/$/;"	v
buf_overflows	comm.c	/^int     buf_overflows;          \/* # of overflows of output *\/$/;"	v
buf_switches	comm.c	/^int     buf_switches;           \/* # of switches from small to large buf *\/$/;"	v
bufpool	comm.c	/^struct txt_block *bufpool = 0;  \/* pool of large output buffers *\/$/;"	v	typeref:struct:txt_block
build_help_index	modify.c	/^struct help_index_element *build_help_index(FILE *fl, int *num)$/;"	f
build_player_index	db.c	/^void build_player_index()$/;"	f
bweapons	act.off.c	/^funcp bweapons[] = {$/;"	v
c	spec_proc.c	/^  short c;$/;"	m	struct:memory	file:
c	spec_procs.c	/^  short c;$/;"	m	struct:memory	file:
cact	dimd.c	/^void cact(char *s,byte boo, struct char_data *ch, struct obj_data *obj, struct char_data *ch2, int i, int ii)$/;"	f
call_a_mud	dimd.c	/^bool call_a_mud(int mud)$/;"	f
calloc	bsd.c	/^calloc(num, size)$/;"	f
calloc	mybsd.c	/^calloc(num, size)$/;"	f
can_see_linear	act.info.c	/^int can_see_linear(struct char_data *ch, struct char_data *targ, int *rng, int *dr) $/;"	f
cartesian	sunmalloc.c	/^cartesian(p)$/;"	f	file:
cast_acid_blast	spells1.c	/^void cast_acid_blast( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_acid_breath	spells2.c	/^void cast_acid_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_aid	spells2.c	/^void cast_aid( byte level, struct char_data *ch, char *arg, $/;"	f
cast_animal_friendship	spells2.c	/^void cast_animal_friendship( byte level, struct char_data *ch, char *arg, $/;"	f
cast_animal_growth	spells2.c	/^void cast_animal_growth( byte level, struct char_data *ch, char *arg,$/;"	f
cast_animal_summon_1	spells2.c	/^void cast_animal_summon_1( byte level, struct char_data *ch, char *arg,$/;"	f
cast_animal_summon_2	spells2.c	/^void cast_animal_summon_2( byte level, struct char_data *ch, char *arg,$/;"	f
cast_animal_summon_3	spells2.c	/^void cast_animal_summon_3( byte level, struct char_data *ch, char *arg,$/;"	f
cast_animate_dead	spells2.c	/^void cast_animate_dead( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_animate_rock	spells2.c	/^void cast_animate_rock( byte level, struct char_data *ch, char *arg, $/;"	f
cast_anti_magic_shell	spells2.c	/^void cast_anti_magic_shell( byte level, struct char_data *ch, char *arg, $/;"	f
cast_armor	spells2.c	/^void cast_armor( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_astral_walk	spells2.c	/^void cast_astral_walk( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_barkskin	spells2.c	/^void cast_barkskin( byte level, struct char_data *ch, char *arg, $/;"	f
cast_bless	spells2.c	/^void cast_bless( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_blindness	spells2.c	/^void cast_blindness( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_burning_hands	spells1.c	/^void cast_burning_hands( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cacaodemon	spells2.c	/^void cast_cacaodemon( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_call_lightning	spells1.c	/^void cast_call_lightning(byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_calm	spells2.c	/^void cast_calm( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cause_critic	spells1.c	/^void cast_cause_critic(byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cause_light	spells1.c	/^void cast_cause_light( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cause_serious	spells1.c	/^void cast_cause_serious( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_chain_lightn	spells2.c	/^void cast_chain_lightn( byte level, struct char_data *ch, char *arg, $/;"	f
cast_change_form	spells2.c	/^void cast_change_form( byte level, struct char_data *ch, char *arg, $/;"	f
cast_changestaff	spells2.c	/^void cast_changestaff( byte level, struct char_data *ch, char *arg, $/;"	f
cast_charm_monster	spells2.c	/^void cast_charm_monster( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_charm_person	spells2.c	/^void cast_charm_person( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_charm_veggie	spells2.c	/^void cast_charm_veggie( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_chill_touch	spells1.c	/^void cast_chill_touch( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_clone	spells2.c	/^void cast_clone( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_colour_spray	spells1.c	/^void cast_colour_spray( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_command	spells2.c	/^void cast_command( byte level, struct char_data *ch, char *arg,$/;"	f
cast_commune	spells2.c	/^void cast_commune( byte level, struct char_data *ch, char *arg,$/;"	f
cast_comp_languages	spells2.c	/^void cast_comp_languages( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cone_of_cold	spells1.c	/^void cast_cone_of_cold( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_conjure_elemental	spells2.c	/^void cast_conjure_elemental( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cont_light	spells2.c	/^void cast_cont_light( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_control_weather	spells2.c	/^void cast_control_weather(byte level,struct char_data *ch, char *arg, int type,$/;"	f
cast_create_food	spells2.c	/^void cast_create_food( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_create_water	spells2.c	/^void cast_create_water( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_creeping_death	spells2.c	/^void cast_creeping_death( byte level, struct char_data *ch, char *arg,$/;"	f
cast_cure_blind	spells2.c	/^void cast_cure_blind( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cure_critic	spells2.c	/^void cast_cure_critic( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cure_light	spells2.c	/^void cast_cure_light( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_cure_serious	spells2.c	/^void cast_cure_serious( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_curse	spells2.c	/^void cast_curse( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_detect_evil	spells2.c	/^void cast_detect_evil( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_detect_invisibility	spells2.c	/^void cast_detect_invisibility( byte level, struct char_data *ch, char *arg, int type, struct char_data *tar_ch, struct obj_data *tar_obj )$/;"	f
cast_detect_magic	spells2.c	/^void cast_detect_magic( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_detect_poison	spells2.c	/^void cast_detect_poison( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_disintergrate	spells1.c	/^void cast_disintergrate( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_dispel_evil	spells2.c	/^void cast_dispel_evil( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_dispel_good	spells2.c	/^void cast_dispel_good( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_dispel_magic	spells2.c	/^void cast_dispel_magic( byte level, struct char_data *ch, char *arg, $/;"	f
cast_dragon_breath	spells2.c	/^void cast_dragon_breath(byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_dragon_ride	spells2.c	/^void cast_dragon_ride( byte level, struct char_data *ch, char *arg, $/;"	f
cast_dust_devil	spells2.c	/^void cast_dust_devil( byte level, struct char_data *ch, char *arg, $/;"	f
cast_earth_servant	spells2.c	/^void cast_earth_servant( byte level, struct char_data *ch, char *arg,$/;"	f
cast_earthquake	spells1.c	/^void cast_earthquake( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_enchant_armor	spells2.c	/^void cast_enchant_armor( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_enchant_weapon	spells2.c	/^void cast_enchant_weapon( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_energy_drain	spells1.c	/^void cast_energy_drain( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_entangle	spells2.c	/^void cast_entangle( byte level, struct char_data *ch, char *arg, $/;"	f
cast_faerie_fire	spells2.c	/^void cast_faerie_fire( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_faerie_fog	spells2.c	/^void cast_faerie_fog( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_familiar	spells2.c	/^void cast_familiar( byte level, struct char_data *ch, char *arg, $/;"	f
cast_fear	spells2.c	/^void cast_fear( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_feeblemind	spells2.c	/^void cast_feeblemind( byte level, struct char_data *ch, char *arg,$/;"	f
cast_find_traps	spells2.c	/^void cast_find_traps( byte level, struct char_data *ch, char *arg, $/;"	f
cast_fire_breath	spells2.c	/^void cast_fire_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_fire_servant	spells2.c	/^void cast_fire_servant( byte level, struct char_data *ch, char *arg,$/;"	f
cast_fireball	spells1.c	/^void cast_fireball( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_fireshield	spells2.c	/^void cast_fireshield( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_firestorm	spells2.c	/^void cast_firestorm( byte level, struct char_data *ch, char *arg, $/;"	f
cast_flame_blade	spells2.c	/^void cast_flame_blade( byte level, struct char_data *ch, char *arg,$/;"	f
cast_flamestrike	spells1.c	/^void cast_flamestrike( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_fly_group	spells2.c	/^void cast_fly_group( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_flying	spells2.c	/^void cast_flying( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_frost_breath	spells2.c	/^void cast_frost_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_gas_breath	spells2.c	/^void cast_gas_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_geyser	spells1.c	/^void cast_geyser( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_globe_darkness	spells2.c	/^void cast_globe_darkness( byte level, struct char_data *ch, char *arg, $/;"	f
cast_globe_major_inv	spells2.c	/^void cast_globe_major_inv( byte level, struct char_data *ch, char *arg, $/;"	f
cast_globe_minor_inv	spells2.c	/^void cast_globe_minor_inv( byte level, struct char_data *ch, char *arg, $/;"	f
cast_golem	spells2.c	/^void cast_golem( byte level, struct char_data *ch, char *arg, $/;"	f
cast_goodberry	spells2.c	/^void cast_goodberry( byte level, struct char_data *ch, char *arg,$/;"	f
cast_green_slime	spells1.c	/^void cast_green_slime( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_gust_of_wind	spells2.c	/^void cast_gust_of_wind( byte level, struct char_data *ch, char *arg, $/;"	f
cast_harm	spells1.c	/^void cast_harm( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_haste	spells2.c	/^void cast_haste( byte level, struct char_data *ch, char *arg, $/;"	f
cast_heal	spells2.c	/^void cast_heal( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_heat_stuff	spells2.c	/^void cast_heat_stuff( byte level, struct char_data *ch, char *arg, $/;"	f
cast_heroes_feast	spells2.c	/^void cast_heroes_feast( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_holyword	spells2.c	/^void cast_holyword( byte level, struct char_data *ch, char *arg, $/;"	f
cast_ice_storm	spells1.c	/^void cast_ice_storm( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_identify	spells2.c	/^void cast_identify( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_incendiary_cloud	spells1.c	/^void cast_incendiary_cloud( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_infravision	spells2.c	/^void cast_infravision( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_insect_growth	spells2.c	/^void cast_insect_growth( byte level, struct char_data *ch, char *arg,$/;"	f
cast_invis_to_animals	spells2.c	/^void cast_invis_to_animals( byte level, struct char_data *ch, char *arg, $/;"	f
cast_invisibility	spells2.c	/^void cast_invisibility( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_knock	spells2.c	/^void cast_knock( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_know_alignment	spells2.c	/^void cast_know_alignment(byte level, struct char_data *ch, char *arg, $/;"	f
cast_know_monster	spells2.c	/^void cast_know_monster( byte level, struct char_data *ch, char *arg, $/;"	f
cast_light	spells2.c	/^void cast_light( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_lightning_bolt	spells1.c	/^void cast_lightning_bolt( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_lightning_breath	spells2.c	/^void cast_lightning_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_locate_object	spells2.c	/^void cast_locate_object( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_magic_missile	spells1.c	/^void cast_magic_missile( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_major_track	spells2.c	/^void cast_major_track( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mana	spells2.c	/^void cast_mana( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_messenger	spells2.c	/^void cast_messenger( byte level, struct char_data *ch, char *arg, $/;"	f
cast_meteor_swarm	spells1.c	/^void cast_meteor_swarm( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_minor_creation	spells2.c	/^void cast_minor_creation(byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_minor_track	spells2.c	/^void cast_minor_track( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum1	spells2.c	/^void cast_mon_sum1( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum2	spells2.c	/^void cast_mon_sum2( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum3	spells2.c	/^void cast_mon_sum3( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum4	spells2.c	/^void cast_mon_sum4( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum5	spells2.c	/^void cast_mon_sum5( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum6	spells2.c	/^void cast_mon_sum6( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mon_sum7	spells2.c	/^void cast_mon_sum7( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_mount	spells2.c	/^void cast_mount( byte level, struct char_data *ch, char *arg, $/;"	f
cast_paralyze	spells2.c	/^void cast_paralyze( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_poison	spells2.c	/^void cast_poison( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_poly_self	spells2.c	/^void cast_poly_self( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_portal	spells2.c	/^void cast_portal( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prismatic_spray	spells1.c	/^void cast_prismatic_spray( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_prot_cold	spells2.c	/^void cast_prot_cold( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_prot_dragon_breath	spells2.c	/^void cast_prot_dragon_breath( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_dragon_breath_acid	spells2.c	/^void cast_prot_dragon_breath_acid( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_dragon_breath_elec	spells2.c	/^void cast_prot_dragon_breath_elec( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_dragon_breath_fire	spells2.c	/^void cast_prot_dragon_breath_fire( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_dragon_breath_frost	spells2.c	/^void cast_prot_dragon_breath_frost( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_dragon_breath_gas	spells2.c	/^void cast_prot_dragon_breath_gas( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_elec	spells2.c	/^void cast_prot_elec( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_prot_energy	spells2.c	/^void cast_prot_energy( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_prot_energy_drain	spells2.c	/^void cast_prot_energy_drain( byte level, struct char_data *ch, char *arg, $/;"	f
cast_prot_fire	spells2.c	/^void cast_prot_fire( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_protection_from_evil	spells2.c	/^void cast_protection_from_evil( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_protection_from_evil_group	spells2.c	/^void cast_protection_from_evil_group( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_pword_blind	spells2.c	/^void cast_pword_blind( byte level, struct char_data *ch, char *arg, $/;"	f
cast_pword_kill	spells2.c	/^void cast_pword_kill( byte level, struct char_data *ch, char *arg, $/;"	f
cast_refresh	spells2.c	/^void cast_refresh( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_reincarnate	spells2.c	/^void cast_reincarnate( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_remove_curse	spells2.c	/^void cast_remove_curse( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_remove_paralysis	spells2.c	/^void cast_remove_paralysis( byte level, struct char_data *ch, char *arg, int type,  struct char_data *tar_ch, struct obj_data *tar_obj )$/;"	f
cast_remove_poison	spells2.c	/^void cast_remove_poison( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_resurrection	spells2.c	/^void cast_resurrection( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_sanctuary	spells2.c	/^void cast_sanctuary( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_scare	spells2.c	/^void cast_scare( byte level, struct char_data *ch, char *arg, $/;"	f
cast_second_wind	spells2.c	/^void cast_second_wind( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_sending	spells2.c	/^void cast_sending( byte level, struct char_data *ch, char *arg, $/;"	f
cast_sense_life	spells2.c	/^void cast_sense_life( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_shield	spells2.c	/^void cast_shield( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_shillelagh	spells2.c	/^void cast_shillelagh( byte level, struct char_data *ch, char *arg,$/;"	f
cast_shocking_grasp	spells1.c	/^void cast_shocking_grasp( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_silence	spells2.c	/^void cast_silence( byte level, struct char_data *ch, char *arg, $/;"	f
cast_sleep	spells2.c	/^void cast_sleep( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_slow	spells2.c	/^void cast_slow( byte level, struct char_data *ch, char *arg, $/;"	f
cast_slow_poison	spells2.c	/^void cast_slow_poison( byte level, struct char_data *ch, char *arg, $/;"	f
cast_snare	spells2.c	/^void cast_snare( byte level, struct char_data *ch, char *arg, $/;"	f
cast_speak_with_plants	spells2.c	/^void cast_speak_with_plants( byte level, struct char_data *ch, char *arg, $/;"	f
cast_stone_skin	spells2.c	/^void cast_stone_skin( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_strength	spells2.c	/^void cast_strength( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_succor	spells2.c	/^void cast_succor( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_summon	spells2.c	/^void cast_summon( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_sunray	spells2.c	/^void cast_sunray( byte level, struct char_data *ch, char *arg, $/;"	f
cast_teleport	spells2.c	/^void cast_teleport( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_teleport_wo_error	spells2.c	/^void cast_teleport_wo_error( byte level, struct char_data *ch, char *arg, $/;"	f
cast_transport_via_plant	spells2.c	/^void cast_transport_via_plant( byte level, struct char_data *ch, char *arg, $/;"	f
cast_travelling	spells2.c	/^void cast_travelling( byte level, struct char_data *ch, char *arg, $/;"	f
cast_tree	spells2.c	/^void cast_tree( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_tree_travel	spells2.c	/^void cast_tree_travel( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_true_seeing	spells2.c	/^void cast_true_seeing( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_turn	spells2.c	/^void cast_turn( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_unholyword	spells2.c	/^void cast_unholyword( byte level, struct char_data *ch, char *arg, $/;"	f
cast_veggie_growth	spells2.c	/^void cast_veggie_growth( byte level, struct char_data *ch, char *arg,$/;"	f
cast_ventriloquate	spells2.c	/^void cast_ventriloquate( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_warp_weapon	spells2.c	/^void cast_warp_weapon( byte level, struct char_data *ch, char *arg, $/;"	f
cast_water_breath	spells2.c	/^void cast_water_breath( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_water_servant	spells2.c	/^void cast_water_servant( byte level, struct char_data *ch, char *arg,$/;"	f
cast_weakness	spells2.c	/^void cast_weakness( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_web	spells2.c	/^void cast_web( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_wind_servant	spells2.c	/^void cast_wind_servant( byte level, struct char_data *ch, char *arg,$/;"	f
cast_wizard_eye	spells1.c	/^void cast_wizard_eye( byte level, struct char_data *ch, char *arg, int type,$/;"	f
cast_word_of_recall	spells2.c	/^void cast_word_of_recall( byte level, struct char_data *ch, char *arg,int type,$/;"	f
cfree	bsd.c	/^cfree(p)$/;"	f
cfree	mybsd.c	/^cfree(p)$/;"	f
ch	spec_proc2.c	/^  struct char_data      *ch;$/;"	m	struct:breath_victim	typeref:struct:breath_victim::char_data	file:
ch	spec_procs2.c	/^  struct char_data	*ch;$/;"	m	struct:breath_victim	typeref:struct:breath_victim::char_data	file:
chalice	spec_proc.c	/^int chalice(struct char_data *ch, int cmd, char *arg)$/;"	f
chalice	spec_procs.c	/^int chalice(struct char_data *ch, int cmd, char *arg)$/;"	f
change_alignment	fight.c	/^void change_alignment(struct char_data *ch, struct char_data *victim)$/;"	f
change_struct	pcedit.c	/^int change_struct( int orig_ammt)$/;"	f
char_auto	act.social.c	/^	char *char_auto;$/;"	m	struct:social_messg	file:
char_file_u_new	pcedit.c	/^struct char_file_u_new$/;"	s	file:
char_found	act.social.c	/^	char *char_found;		\/* if NULL, read no further, ignore args *\/$/;"	m	struct:social_messg	file:
char_from_room	handler.c	/^void char_from_room(struct char_data *ch)$/;"	f
char_holding	utility.c	/^struct char_data *char_holding(struct obj_data *obj)$/;"	f
char_no_arg	act.social.c	/^	char *char_no_arg;$/;"	m	struct:social_messg	file:
char_to_room	handler.c	/^void char_to_room(struct char_data *ch, long room)$/;"	f
char_to_store	db.c	/^void char_to_store(struct char_data *ch, struct char_file_u *st)$/;"	f
character_list	db.c	/^struct char_data *character_list = 0; \/* global l-list of chars          *\/$/;"	v	typeref:struct:char_data
check_affected	comm.c	/^void check_affected(char *msg,char *msg2)$/;"	f
check_decharm	spell_parser.c	/^void check_decharm( struct char_data *ch)$/;"	f
check_drowning	spell_parser.c	/^void check_drowning( struct char_data *ch)$/;"	f
check_falling	spell_parser.c	/^int check_falling( struct char_data *ch)$/;"	f
check_falling_obj	spell_parser.c	/^void check_falling_obj( struct obj_data *obj, int room)$/;"	f
check_idling	limits.c	/^void check_idling(struct char_data *ch)$/;"	f
check_memorize	act.other.c	/^void check_memorize(struct char_data *ch, struct affected_type *af)$/;"	f
check_mobile_activity	mobact.c	/^void check_mobile_activity(int pulse)$/;"	f
check_nature	spell_parser.c	/^int check_nature( struct char_data *i)$/;"	f
check_nomagic	utility.c	/^int check_nomagic(struct char_data *ch, char *msg_ch, char *msg_rm)$/;"	f
check_peaceful	fight.c	/^int check_peaceful(struct char_data *ch, char *msg)$/;"	f
check_reboot	modify.c	/^void check_reboot()$/;"	f
check_soundproof	utility.c	/^int check_soundproof(struct char_data *ch)$/;"	f
checkpointing	signals.c	/^void checkpointing()$/;"	f
chess_game	spec_proc3.c	/^int chess_game(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
chess_game	spec_procs3.c	/^int chess_game(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
chkblk	sunmalloc.c	1305;"	d	file:
chkhdr	sunmalloc.c	1312;"	d	file:
choose_exit_global	skills.c	/^int choose_exit_global(int in_room, int tgt_room, int depth)$/;"	f
choose_exit_in_zone	skills.c	/^int choose_exit_in_zone(int in_room, int tgt_room, int depth)$/;"	f
choose_victims	spec_proc2.c	/^struct breath_victim *choose_victims(struct char_data *ch,$/;"	f
choose_victims	spec_procs2.c	/^struct breath_victim *choose_victims(struct char_data *ch,$/;"	f
chr_apply	constants.c	/^struct chr_app_type chr_apply[26] = {$/;"	v	typeref:struct:chr_app_type
circle_follow	spell_parser.c	/^bool circle_follow(struct char_data *ch, struct char_data *victim)$/;"	f
citizen	spec_proc.c	/^int citizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
citizen	spec_procs.c	/^int citizen(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
class	pcedit.c	/^	int class;$/;"	m	struct:char_file_u_new	file:
cleanout_room	db.c	/^void cleanout_room(struct room_data *rp)$/;"	f
clearpath	act.off.c	/^int clearpath(struct char_data *ch, long room, int direc)$/;"	f
cleric	spec_proc2.c	/^int cleric(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
cleric	spec_procs2.c	/^int cleric(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
cleric_imp	spec_proc3.c	/^int cleric_imp(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
cleric_imp	spec_procs3.c	/^int cleric_imp(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
cleric_mage	spec_procs3.c	/^int cleric_mage(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
clone_container_obj	act.wizard.c	/^void clone_container_obj(struct obj_data *to, struct obj_data *obj)$/;"	f
clone_obj	act.wizard.c	/^struct obj_data *clone_obj(struct obj_data *obj)$/;"	f
clone_obj_to_obj	db.c	/^int clone_obj_to_obj(struct obj_data *obj, struct obj_data *osrc)$/;"	f
close1	shop.c	/^	int close1,close2;	\/* When does the shop close?		*\/$/;"	m	struct:shop_data	file:
close2	shop.c	/^	int close1,close2;	\/* When does the shop close?		*\/$/;"	m	struct:shop_data	file:
close_dimd	dimd.c	/^void close_dimd(void)$/;"	f
close_socket	comm.c	/^void close_socket(struct descriptor_data *d)$/;"	f
close_socket_fd	comm.c	/^int close_socket_fd( int desc)$/;"	f
close_sockets	comm.c	/^void close_sockets(int s)$/;"	f
cmd	spec_proc.c	/^  char *cmd;$/;"	m	struct:social_type	file:
cmd	spec_procs.c	/^  char *cmd;$/;"	m	struct:social_type	file:
cmsg	dimd.c	/^void cmsg(char *s, struct char_data *ch, int i)$/;"	f
coldcaster	spec_proc.c	/^int coldcaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
coldcaster	spec_procs.c	/^int coldcaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
color_liquid	constants.c	/^const char *color_liquid[]=$/;"	v
coma	comm.c	/^void coma(int s)$/;"	f
combat_list	fight.c	/^struct char_data *combat_list = 0;   \/* head of l-list of fighting chars    *\/$/;"	v	typeref:struct:char_data
combat_next_dude	fight.c	/^struct char_data *combat_next_dude = 0; \/* Next dude global trick           *\/$/;"	v	typeref:struct:char_data
command_interpreter	interpreter.c	/^void command_interpreter(struct char_data *ch, char *argument) $/;"	f
compare	db.c	/^int compare(struct player_index_element *arg1, struct player_index_element$/;"	f
completely_cleanout_room	db.c	/^void completely_cleanout_room(struct room_data *rp)$/;"	f
con_app	constants.c	/^struct con_app_type con_app[26] = {$/;"	v	typeref:struct:con_app_type
conditions	pcedit.c	/^	int conditions[MAX_CONDITIONS];$/;"	m	struct:char_file_u_new	file:
connected_types	constants.c	/^const char *connected_types[]	=	{$/;"	v
construct_prompt	comm.c	/^int construct_prompt(char *outbuf, struct char_data *ch)$/;"	f
construct_who_list	dimd.c	/^void construct_who_list(char *buf, int cmd,$/;"	f
contained_weight	reception.c	/^int contained_weight(struct obj_data *container)$/;"	f
container	spec_proc.c	/^  int   container;$/;"	m	struct:pub_beers	file:
container	spec_procs.c	/^  int	container;$/;"	m	struct:pub_beers	file:
contains	spec_proc.c	/^  int   contains;$/;"	m	struct:pub_beers	file:
contains	spec_procs.c	/^  int   contains;$/;"	m	struct:pub_beers	file:
convert_playerfile	pcedit.c	/^int convert_playerfile(char *argv[]) {$/;"	f
create_entry	db.c	/^int create_entry(char *name)$/;"	f
create_money	handler.c	/^struct obj_data *create_money( int amount )$/;"	f
credits	db.c	/^char credits[MAX_STRING_LENGTH];      \/* the Credits List                *\/$/;"	v
creeping_death	spec_proc2.c	/^int creeping_death( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
cur_depth	reception.c	/^int     cur_depth=0;$/;"	v
curr_board	board.c	/^struct board *curr_board;$/;"	v	typeref:struct:board
curr_msg	board.c	/^struct message *curr_msg;  $/;"	v	typeref:struct:message
dam_message	fight.c	/^void dam_message(int dam, struct char_data *ch, struct char_data *victim,$/;"	f
damage	fight.c	/^int damage(struct char_data *ch, struct char_data *victim,$/;"	f
dark_dwarf_class_choice	interpreter.c	/^const int dark_dwarf_class_choice[]= {$/;"	v
dark_elf_class_choice	interpreter.c	/^const int dark_elf_class_choice[]= {$/;"	v
data	sunmalloc.c	/^        char    data[ALIGNSIZ];         \/* Addr returned to the caller *\/$/;"	m	struct:dblk	file:
date	board.c	/^  char *date;$/;"	m	struct:message	file:
dblk	sunmalloc.c	/^struct  dblk    {$/;"	s	file:
death_cry	fight.c	/^void death_cry(struct char_data *ch)$/;"	f
death_knight	spec_proc3.c	/^int death_knight(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
death_knight	spec_procs3.c	/^int death_knight(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
debug_level	sunmalloc.c	/^static  int debug_level = 0;$/;"	v	file:
debugf	comm.c	/^  static FILE *debugf=NULL;$/;"	v	file:
default_class_choice	interpreter.c	/^const int default_class_choice[]= {$/;"	v
delete	sunmalloc.c	/^delete(p)$/;"	f	file:
delivery_beast	spec_proc.c	/^int delivery_beast(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
delivery_beast	spec_procs.c	/^int delivery_beast(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
delivery_elf	spec_proc.c	/^int delivery_elf(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
delivery_elf	spec_procs.c	/^int delivery_elf(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
demote	sunmalloc.c	/^demote(p)$/;"	f	file:
depth	sunmalloc.c	/^static  depth = 0;$/;"	v	file:
description	pcedit.c	/^	char description[240];$/;"	m	struct:char_file_u_new	file:
descriptor_list	comm.c	/^struct descriptor_data *descriptor_list, *next_to_process;$/;"	v	typeref:struct:descriptor_data
destroy_hash_table	hash.c	/^void destroy_hash_table(struct hash_header *ht, void (*gman)())$/;"	f
destroy_string_block	handler.c	/^void destroy_string_block(struct string_block *sb)$/;"	f
dex_app	constants.c	/^struct dex_app_type dex_app[26] = {$/;"	v	typeref:struct:dex_app_type
dex_app_skill	constants.c	/^const struct dex_skill_type dex_app_skill[26] = {$/;"	v	typeref:struct:dex_skill_type
dice	utility.c	/^int dice(int number, int size) $/;"	f
die	fight.c	/^void die(struct char_data *ch,int killedbytype)$/;"	f
die_follower	spell_parser.c	/^void die_follower(struct char_data *ch)$/;"	f
dimd_broadcast	dimd.c	/^void dimd_broadcast(char *buf)$/;"	f
dimd_can_see	dimd.c	/^bool dimd_can_see(int slev, struct char_data *o)$/;"	f
dimd_credit	dimd.c	/^bool dimd_credit(struct char_data *ch, int credits)$/;"	f
dimd_gossip	dimd.c	/^bool	dimd_gossip = TRUE;$/;"	v
dimd_local_mud	dimd.c	/^int	dimd_local_mud = UNDEFINED;$/;"	v
dimd_loop	dimd.c	/^void dimd_loop(void)$/;"	f
dimd_muse	dimd.c	/^bool	dimd_muse = TRUE;$/;"	v
dimd_on	dimd.c	/^bool	dimd_on = TRUE;$/;"	v
dimd_port	dimd.c	/^int	dimd_port;$/;"	v
dimd_s	dimd.c	/^int	dimd_s;$/;"	v
dimd_state	dimd.c	/^int	dimd_state = DIMD_OPENING;$/;"	v
dimd_think	dimd.c	/^bool	dimd_think = TRUE;$/;"	v
dir_track	skills.c	/^int dir_track( struct char_data *ch, struct char_data *vict)$/;"	f
dirs	constants.c	/^const char *dirs[] = $/;"	v
dlog	utility.c	/^void dlog(char *s)$/;"	f
do_WorldSave	utility.c	/^void do_WorldSave(struct char_data *ch, char *argument, char cmd)$/;"	f
do_act	mobact.c	/^void do_act(char *arg, struct char_data *ch)$/;"	f
do_action	act.social.c	/^void do_action(struct char_data *ch, char *argument, int cmd)$/;"	f
do_actual_wiz_help	act.info.c	/^void do_actual_wiz_help(struct char_data *ch, char *argument, int cmd)$/;"	f
do_addhost	act.wizard.c	/^void do_addhost(struct char_data *ch, char *argument, int command)$/;"	f
do_adrenalize	skills.c	/^void do_adrenalize( struct char_data *ch, char *argument, int cmd)$/;"	f
do_advance	act.wizard.c	/^void do_advance(struct char_data *ch, char *argument, int cmd)$/;"	f
do_alias	act.other.c	/^void do_alias(struct char_data *ch, char *arg, int cmd)$/;"	f
do_ask	act.comm.c	/^void do_ask(struct char_data *ch, char *argument, int cmd)$/;"	f
do_assist	act.off.c	/^void do_assist(struct char_data *ch, char *argument, int cmd)$/;"	f
do_at	act.wizard.c	/^void do_at(struct char_data *ch, char *argument, int cmd)$/;"	f
do_attribute	act.info.c	/^void do_attribute(struct char_data *ch, char *argument, int cmd)$/;"	f
do_auction	act.comm.c	/^void do_auction(struct char_data *ch, char *argument, int cmd)$/;"	f
do_aura_sight	skills.c	/^void do_aura_sight( struct char_data *ch, char *argument, int cmd)$/;"	f
do_auth	act.wizard.c	/^void do_auth(struct char_data *ch, char *argument, int cmd)$/;"	f
do_backstab	act.off.c	/^void do_backstab(struct char_data *ch, char *argument, int cmd)$/;"	f
do_bamfin	act.wizard.c	/^void do_bamfin(struct char_data *ch, char *arg, int cmd)$/;"	f
do_bamfout	act.wizard.c	/^void do_bamfout(struct char_data *ch, char *arg, int cmd)$/;"	f
do_bash	act.off.c	/^void do_bash(struct char_data *ch, char *argument, int cmd)$/;"	f
do_beep	act.wizard.c	/^void do_beep(struct char_data *ch, char *argument, int cmd)$/;"	f
do_bellow	skills.c	/^void do_bellow( struct char_data *ch, char *arg, int cmd)$/;"	f
do_berserk	act.off.c	/^void do_berserk( struct char_data *ch, char *arg, int cmd)$/;"	f
do_blast	skills.c	/^void do_blast( struct char_data *ch, char *argument, int cmd)$/;"	f
do_blessing	skills.c	/^void do_blessing(struct char_data *ch, char *argument, int cmd)$/;"	f
do_breath	act.off.c	/^void do_breath(struct char_data *ch, char *argument, int cmd)$/;"	f
do_brew	skills.c	/^void do_brew( struct char_data *ch, char *argument, int cmd)$/;"	f
do_brief	act.other.c	/^void do_brief(struct char_data *ch, char *argument, int cmd)$/;"	f
do_bug	act.other.c	/^void do_bug(struct char_data *ch, char *argument, int cmd)$/;"	f
do_canibalize	skills.c	/^void do_canibalize( struct char_data *ch, char *argument, int cmd)$/;"	f
do_carve	skills.c	/^void do_carve( struct char_data *ch, char *argument, int cmd)$/;"	f
do_cast	spell_parser.c	/^void do_cast(struct char_data *ch, char *argument, int cmd)$/;"	f
do_climb	skills.c	/^void do_climb( struct char_data *ch, char *arg, int cmd)$/;"	f
do_clone	act.wizard.c	/^void do_clone(struct char_data *ch, char *argument, int cmd)$/;"	f
do_close	act.move.c	/^void do_close(struct char_data *ch, char *argument, int cmd)$/;"	f
do_command_list	act.info.c	/^void do_command_list(struct char_data *ch, char *arg, int cmd)$/;"	f
do_commune	act.comm.c	/^void do_commune(struct char_data *ch, char *argument, int cmd)$/;"	f
do_compact	act.other.c	/^void do_compact(struct char_data *ch, char *argument, int cmd)$/;"	f
do_consider	act.info.c	/^void do_consider(struct char_data *ch, char *argument, int cmd)$/;"	f
do_create	act.wizard.c	/^void do_create( struct char_data *ch, char *argument, int cmd)$/;"	f
do_credits	act.info.c	/^void do_credits(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_cset	act.wizard.c	/^void do_cset(struct char_data *ch, char *arg, int cmd)$/;"	f
do_debug	act.wizard.c	/^void do_debug(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dgossip	dimd.c	/^void do_dgossip(struct char_data *ch, char *argument, int cmd)$/;"	f
do_disarm	skills.c	/^void do_disarm(struct char_data *ch, char *argument, int cmd)$/;"	f
do_disconnect	act.wizard.c	/^void do_disconnect(struct char_data *ch, char *argument, int cmd )$/;"	f
do_disguise	skills.c	/^void do_disguise(struct char_data *ch, char *argument, int cmd)$/;"	f
do_display	act.info.c	/^void do_display(struct char_data *ch, char *arg, int cmd)$/;"	f
do_dlink	dimd.c	/^void do_dlink(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dlist	dimd.c	/^void do_dlist(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dmanage	dimd.c	/^void do_dmanage(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dmuse	dimd.c	/^void do_dmuse(struct char_data *ch, char *argument, int cmd)$/;"	f
do_doorbash	skills.c	/^void do_doorbash( struct char_data *ch, char *arg, int cmd)$/;"	f
do_doorway	skills.c	/^void do_doorway( struct char_data *ch, char *argument, int cmd)$/;"	f
do_drainlevel	act.wizard.c	/^void do_drainlevel(struct char_data *ch, char *argument , int cmd)$/;"	f
do_drestrict	dimd.c	/^void do_drestrict(struct char_data *ch, char *argument, int cmd)$/;"	f
do_drink	act.obj2.c	/^void do_drink(struct char_data *ch, char *argument, int cmd)$/;"	f
do_drop	act.obj1.c	/^void do_drop(struct char_data *ch, char *argument, int cmd) $/;"	f
do_dtell	dimd.c	/^void do_dtell(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dthink	dimd.c	/^void do_dthink(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dunlink	dimd.c	/^void do_dunlink(struct char_data *ch, char *argument, int cmd)$/;"	f
do_dwho	dimd.c	/^void do_dwho(struct char_data *ch, char *argument, int cmd)$/;"	f
do_eat	act.obj2.c	/^void do_eat(struct char_data *ch, char *argument, int cmd)$/;"	f
do_echo	act.wizard.c	/^void do_echo(struct char_data *ch, char *argument, int cmd)$/;"	f
do_edit	modify.c	/^void do_edit(struct char_data *ch, char *arg, int cmd)$/;"	f
do_emote	act.wizard.c	/^void do_emote(struct char_data *ch, char *argument, int cmd)$/;"	f
do_enter	act.move.c	/^void do_enter(struct char_data *ch, char *argument, int cmd)$/;"	f
do_equipment	act.info.c	/^void do_equipment(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_esp	skills.c	/^void do_esp( struct char_data *ch, char *argument, int cmd)$/;"	f
do_event	act.wizard.c	/^void do_event(struct char_data *ch, char *arg, int cmd)$/;"	f
do_examine	act.info.c	/^void do_examine(struct char_data *ch, char *argument, int cmd)$/;"	f
do_exits	act.info.c	/^void do_exits(struct char_data *ch, char *argument, int cmd)$/;"	f
do_feign_death	skills.c	/^void do_feign_death( struct char_data *ch, char *arg, int cmd)$/;"	f
do_find	skills.c	/^void do_find( struct char_data *ch, char *arg, int cmd)$/;"	f
do_find_food	skills.c	/^void do_find_food( struct char_data *ch, char *arg, int cmd)$/;"	f
do_find_traps	skills.c	/^void do_find_traps( struct char_data *ch, char *arg, int cmd)$/;"	f
do_find_water	skills.c	/^void do_find_water( struct char_data *ch, char *arg, int cmd)$/;"	f
do_finger	act.other.c	/^void do_finger(struct char_data *ch, char *argument, int cmd)$/;"	f
do_fire	act.off.c	/^void do_fire(struct char_data *ch, char *argument, int cmd)$/;"	f
do_first_aid	skills.c	/^void do_first_aid( struct char_data *ch, char *arg, int cmd)$/;"	f
do_flame_shroud	skills.c	/^void do_flame_shroud( struct char_data *ch, char *argument, int cmd)$/;"	f
do_flee	act.off.c	/^void do_flee(struct char_data *ch, char *argument, int cmd)$/;"	f
do_follow	act.move.c	/^void do_follow(struct char_data *ch, char *argument, int cmd)$/;"	f
do_force	act.wizard.c	/^void do_force(struct char_data *ch, char *argument, int cmd)$/;"	f
do_force_rent	act.wizard.c	/^void do_force_rent(struct char_data *ch, char *argument , int cmd)$/;"	f
do_freeze	act.wizard.c	/^void do_freeze(struct char_data *ch, char *argument , int cmd)$/;"	f
do_gain	act.other.c	/^void do_gain(struct char_data *ch, char *argument, int cmd)$/;"	f
do_get	act.obj1.c	/^void do_get(struct char_data *ch, char *argument, int cmd)$/;"	f
do_ghost	act.wizard.c	/^void do_ghost(struct char_data *ch, char *argument , int cmd) $/;"	f
do_give	act.obj1.c	/^void do_give(struct char_data *ch, char *argument, int cmd)$/;"	f
do_god_interven	act.wizard.c	/^void do_god_interven(struct char_data *ch, char *argument , int cmd)$/;"	f
do_gossip	act.comm.c	/^void do_gossip(struct char_data *ch, char *argument, int cmd)$/;"	f
do_goto	act.wizard.c	/^void do_goto(struct char_data *ch, char *argument, int cmd)$/;"	f
do_grab	act.obj2.c	/^void do_grab(struct char_data *ch, char *argument, int cmd)$/;"	f
do_great_sight	skills.c	/^void do_great_sight( struct char_data *ch, char *argument, int cmd)$/;"	f
do_group	act.other.c	/^void do_group(struct char_data *ch, char *argument, int cmd)$/;"	f
do_group_name	act.other.c	/^void do_group_name(struct char_data *ch, char *arg, int cmd)$/;"	f
do_gtell	act.comm.c	/^void do_gtell(struct char_data *ch, char *argument, int cmd)$/;"	f
do_guard	act.other.c	/^void do_guard(struct char_data *ch, char *argument, int cmd)$/;"	f
do_help	act.info.c	/^void do_help(struct char_data *ch, char *argument, int cmd)$/;"	f
do_heroic_rescue	skills.c	/^void do_heroic_rescue(struct char_data *ch, char *arguement, int command)$/;"	f
do_hide	act.other.c	/^void do_hide(struct char_data *ch, char *argument, int cmd)$/;"	f
do_highfive	act.wizard.c	/^void do_highfive(struct char_data *ch, char *argument, int cmd)$/;"	f
do_hit	act.off.c	/^void do_hit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_holy_warcry	skills.c	/^void do_holy_warcry (struct char_data *ch, char *argument, int cmd)$/;"	f
do_home	act.wizard.c	/^void do_home(struct char_data *ch, char *argument, int cmd) $/;"	f
do_hypnosis	skills.c	/^void do_hypnosis( struct char_data *ch, char *argument, int cmd)$/;"	f
do_idea	act.other.c	/^void do_idea(struct char_data *ch, char *argument, int cmd)$/;"	f
do_imptest	act.wizard.c	/^void do_imptest(struct char_data *ch, char *arg, int cmd)$/;"	f
do_info	act.info.c	/^void do_info(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_insult	act.social.c	/^void do_insult(struct char_data *ch, char *argument, int cmd)$/;"	f
do_inventory	act.info.c	/^void do_inventory(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_invis	act.wizard.c	/^void do_invis(struct char_data *ch, char *argument, int cmd)$/;"	f
do_invisibililty	skills.c	/^void do_invisibililty( struct char_data *ch, char *argument, int cmd)$/;"	f
do_jmp	mobact.c	/^void do_jmp(char *arg, struct char_data *ch)$/;"	f
do_jsr	mobact.c	/^void do_jsr(char *arg, struct char_data *ch)$/;"	f
do_junk	act.other.c	/^void do_junk(struct char_data *ch, char *argument, int cmd)$/;"	f
do_kick	act.off.c	/^void do_kick(struct char_data *ch, char *argument, int cmd)$/;"	f
do_kill	act.off.c	/^void do_kill(struct char_data *ch, char *argument, int cmd)$/;"	f
do_lay_on_hands	skills.c	/^void do_lay_on_hands (struct char_data *ch, char *argument, int cmd)$/;"	f
do_leave	act.move.c	/^void do_leave(struct char_data *ch, char *argument, int cmd)$/;"	f
do_levels	act.info.c	/^void do_levels(struct char_data *ch, char *argument, int cmd)$/;"	f
do_listhosts	act.wizard.c	/^void do_listhosts(struct char_data *ch, char *argument, int command)$/;"	f
do_load	act.wizard.c	/^void do_load(struct char_data *ch, char *argument, int cmd)$/;"	f
do_lock	act.move.c	/^void do_lock(struct char_data *ch, char *argument, int cmd)$/;"	f
do_look	act.info.c	/^void do_look(struct char_data *ch, char *argument, int cmd)$/;"	f
do_look	do_look.c	/^void do_look(struct char_data *ch, char *argument, int cmd)$/;"	f
do_medit	create.mob.c	/^void do_medit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_meditate	skills.c	/^void do_meditate( struct char_data *ch, char *argument, int cmd)$/;"	f
do_memorize	act.other.c	/^void do_memorize(struct char_data *ch, char *argument, int cmd)$/;"	f
do_mforce	act.wizard.c	/^void do_mforce(struct char_data *ch, char *argument, int cmd)$/;"	f
do_mindsummon	skills.c	/^void do_mindsummon( struct char_data *ch, char *argument, int cmd)$/;"	f
do_mount	act.other.c	/^void do_mount(struct char_data *ch, char *arg, int cmd)$/;"	f
do_move	act.move.c	/^void do_move(struct char_data *ch, char *argument, int cmd)$/;"	f
do_new_say	act.comm.c	/^void do_new_say(struct char_data *ch, char *argument, int cmd)$/;"	f
do_news	act.info.c	/^void do_news(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_nohassle	act.wizard.c	/^void do_nohassle(struct char_data *ch, char *argument, int cmd)$/;"	f
do_noshout	act.wizard.c	/^void do_noshout(struct char_data *ch, char *argument, int cmd)$/;"	f
do_not_buy	shop.c	/^	char *do_not_buy;	\/* If keeper dosn't buy such things. 	*\/$/;"	m	struct:shop_data	file:
do_not_here	act.other.c	/^void do_not_here(struct char_data *ch, char *argument, int cmd)$/;"	f
do_nuke	act.wizard.c	/^void do_nuke(struct char_data *ch, char *argument , int cmd)$/;"	f
do_oedit	create.obj.c	/^void do_oedit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_ooedit	act.wizard.c	/^void do_ooedit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_open	act.move.c	/^void do_open(struct char_data *ch, char *argument, int cmd)$/;"	f
do_open_exit	act.move.c	/^void do_open_exit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_order	act.off.c	/^void do_order(struct char_data *ch, char *argument, int cmd)$/;"	f
do_osave	act.wizard.c	/^void do_osave(struct char_data *ch, char *argument, int cmd)$/;"	f
do_passwd	act.wizard.c	/^void do_passwd(struct char_data *ch, char *argument, int cmdnum)$/;"	f
do_pick	act.move.c	/^void do_pick(struct char_data *ch, char *argument, int cmd)$/;"	f
do_plr_noauction	act.other.c	/^void do_plr_noauction(struct char_data *ch, char *argument, int cmd)$/;"	f
do_plr_nogossip	act.other.c	/^void do_plr_nogossip(struct char_data *ch, char *argument, int cmd)$/;"	f
do_plr_noshout	act.other.c	/^void do_plr_noshout(struct char_data *ch, char *argument, int cmd)$/;"	f
do_plr_notell	act.other.c	/^void do_plr_notell(struct char_data *ch, char *argument, int cmd)$/;"	f
do_pose	act.social.c	/^void do_pose(struct char_data *ch, char *argument, int cmd)$/;"	f
do_pour	act.obj2.c	/^void do_pour(struct char_data *ch, char *argument, int cmd)$/;"	f
do_practice	act.other.c	/^void do_practice(struct char_data *ch, char *arg, int cmd) $/;"	f
do_pray	act.comm.c	/^void do_pray(struct char_data *ch, char *argument, int cmd)$/;"	f
do_psi_portal	skills.c	/^void do_psi_portal( struct char_data *ch, char *argument, int cmd)$/;"	f
do_psi_shield	skills.c	/^void do_psi_shield( struct char_data *ch, char *argument, int cmd)$/;"	f
do_purge	act.wizard.c	/^void do_purge(struct char_data *ch, char *argument, int cmd)$/;"	f
do_put	act.obj1.c	/^void do_put(struct char_data *ch, char *argument, int cmd)$/;"	f
do_quaff	act.other.c	/^void do_quaff(struct char_data *ch, char *argument, int cmd)$/;"	f
do_qui	act.other.c	/^void do_qui(struct char_data *ch, char *argument, int cmd)$/;"	f
do_quit	act.other.c	/^void do_quit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_quivering_palm	act.off.c	/^void do_quivering_palm( struct char_data *ch, char *arg, int cmd)$/;"	f
do_read	act.info.c	/^void do_read(struct char_data *ch, char *argument, int cmd)$/;"	f
do_recite	act.other.c	/^void do_recite(struct char_data *ch, char *argument, int cmd)$/;"	f
do_redit	create.c	/^void do_redit(struct char_data *ch, char *arg, int cmd)$/;"	f
do_remove	act.obj2.c	/^void do_remove(struct char_data *ch, char *argument, int cmd)$/;"	f
do_removehost	act.wizard.c	/^void do_removehost(struct char_data *ch, char *argument, int command)$/;"	f
do_report	act.comm.c	/^void do_report(struct char_data *ch, char *argument, int cmd)$/;"	f
do_reroll	act.wizard.c	/^void do_reroll(struct char_data *ch, char *argument, int cmd)$/;"	f
do_rescue	act.off.c	/^void do_rescue(struct char_data *ch, char *argument, int cmd)$/;"	f
do_resize	act.info.c	/^void do_resize(struct char_data *ch, char *arg, int cmd)$/;"	f
do_rest	act.move.c	/^void do_rest(struct char_data *ch, char *argument, int cmd) $/;"	f
do_restore	act.wizard.c	/^void do_restore(struct char_data *ch, char *argument, int cmd)$/;"	f
do_return	act.wizard.c	/^void do_return(struct char_data *ch, char *argument, int cmd)$/;"	f
do_rload	act.wizard.c	/^void do_rload(struct char_data *ch, char *argument, int cmd)$/;"	f
do_rsave	act.wizard.c	/^void do_rsave(struct char_data *ch, char *argument, int cmd)$/;"	f
do_rts	mobact.c	/^void do_rts(char *arg, struct char_data *ch)$/;"	f
do_run	act.move.c	/^void do_run(struct char_data *ch, char *argument, int cmd)$/;"	f
do_save	act.other.c	/^void do_save(struct char_data *ch, char *argument, int cmd)$/;"	f
do_say	act.comm.c	/^void do_say(struct char_data *ch, char *argument, int cmd)$/;"	f
do_scan	act.info.c	/^void do_scan(struct char_data *ch, char *argument, int cmd)$/;"	f
do_score	act.info.c	/^void do_score(struct char_data *ch, char *argument, int cmd)$/;"	f
do_scry	skills.c	/^void do_scry( struct char_data *ch, char *argument, int cmd)$/;"	f
do_sending	skills.c	/^void do_sending( struct char_data *ch, char *argument, int cmd)$/;"	f
do_set	act.wizard.c	/^void do_set(struct char_data *ch, char *argument, int cmd)$/;"	f
do_set_afk	act.other.c	/^void do_set_afk(struct char_data *ch, char *argument, int cmd)$/;"	f
do_set_flags	act.other.c	/^void do_set_flags(struct char_data *ch, char *argument, int cmd)$/;"	f
do_set_log	act.wizard.c	/^void do_set_log(struct char_data *ch, char *arg, int cmd)$/;"	f
do_set_prompt	act.other.c	/^void do_set_prompt(struct char_data *ch, char *argument, int cmd)$/;"	f
do_setsev	act.wizard.c	/^void do_setsev(struct char_data *ch, char *arg, int cmd)$/;"	f
do_setskill	modify.c	/^void do_setskill(struct char_data *ch, char *arg, int cmd)$/;"	f
do_settrap	Trap.c	/^void do_settrap( struct char_data *ch, char *arg, int cmd)$/;"	f
do_shoot	act.off.c	/^void do_shoot(struct char_data *ch, char *argument, int cmd)$/;"	f
do_shout	act.comm.c	/^void do_shout(struct char_data *ch, char *argument, int cmd)$/;"	f
do_show	act.wizard.c	/^void do_show(struct char_data *ch, char *argument, int cmd)$/;"	f
do_show_skill	act.info.c	/^void do_show_skill(struct char_data *ch, char *arg, int cmd) $/;"	f
do_shutdow	act.wizard.c	/^void do_shutdow(struct char_data *ch, char *argument, int cmd)$/;"	f
do_shutdown	act.wizard.c	/^void do_shutdown(struct char_data *ch, char *argument, int cmd)$/;"	f
do_sign	act.comm.c	/^void do_sign(struct char_data *ch, char *argument, int cmd)$/;"	f
do_silence	act.wizard.c	/^void do_silence(struct char_data *ch, char *argument, int cmd)$/;"	f
do_sip	act.obj2.c	/^void do_sip(struct char_data *ch, char *argument, int cmd)$/;"	f
do_sit	act.move.c	/^void do_sit(struct char_data *ch, char *argument, int cmd)$/;"	f
do_sleep	act.move.c	/^void do_sleep(struct char_data *ch, char *argument, int cmd) $/;"	f
do_sneak	act.other.c	/^void do_sneak(struct char_data *ch, char *argument, int cmd)$/;"	f
do_snoop	act.wizard.c	/^void do_snoop(struct char_data *ch, char *argument, int cmd)$/;"	f
do_speak	act.comm.c	/^void do_speak(struct char_data *ch, char *argument, int cmd)$/;"	f
do_spells	act.info.c	/^void do_spells(struct char_data *ch, char *argument, int cmd)$/;"	f
do_split	act.comm.c	/^void do_split(struct char_data *ch, char *argument, int cmd)$/;"	f
do_springleap	act.off.c	/^void do_springleap(struct char_data *ch, char *argument, int cmd)$/;"	f
do_spy	skills.c	/^void do_spy( struct char_data *ch, char *arg, int cmd)$/;"	f
do_stand	act.move.c	/^void do_stand(struct char_data *ch, char *argument, int cmd)$/;"	f
do_start	act.wizard.c	/^void do_start(struct char_data *ch)$/;"	f
do_stat	act.wizard.c	/^void do_stat(struct char_data *ch, char *argument, int cmd)$/;"	f
do_steal	act.other.c	/^void do_steal(struct char_data *ch, char *argument, int cmd)$/;"	f
do_stealth	act.wizard.c	/^void do_stealth(struct char_data *ch, char *argument, int cmd)$/;"	f
do_string	modify.c	/^void do_string(struct char_data *ch, char *arg, int cmd)$/;"	f
do_swim	skills.c	/^void do_swim( struct char_data *ch, char *arg, int cmd)$/;"	f
do_switch	act.wizard.c	/^void do_switch(struct char_data *ch, char *argument, int cmd)$/;"	f
do_system	act.wizard.c	/^void do_system(struct char_data *ch, char *argument, int cmd)$/;"	f
do_tan	skills.c	/^void do_tan( struct char_data *ch, char *arg, int cmd)$/;"	f
do_taste	act.obj2.c	/^void do_taste(struct char_data *ch, char *argument, int cmd)$/;"	f
do_telepathy	act.comm.c	/^void do_telepathy(struct char_data *ch, char *argument, int cmd)$/;"	f
do_tell	act.comm.c	/^void do_tell(struct char_data *ch, char *argument, int cmd)$/;"	f
do_throw	act.off.c	/^void do_throw(struct char_data *ch, char *argument, int cmd)$/;"	f
do_time	act.info.c	/^void do_time(struct char_data *ch, char *argument, int cmd)$/;"	f
do_title	act.other.c	/^void do_title(struct char_data *ch, char *argument, int cmd)$/;"	f
do_track	skills.c	/^void do_track(struct char_data *ch, char *argument, int cmd)$/;"	f
do_trans	act.wizard.c	/^void do_trans(struct char_data *ch, char *argument, int cmd)$/;"	f
do_typo	act.other.c	/^void do_typo(struct char_data *ch, char *argument, int cmd)$/;"	f
do_unlock	act.move.c	/^void do_unlock(struct char_data *ch, char *argument, int cmd)$/;"	f
do_use	act.other.c	/^void do_use(struct char_data *ch, char *argument, int cmd)$/;"	f
do_users	act.info.c	/^void do_users(struct char_data *ch, char *argument, int cmd)$/;"	f
do_value	act.info.c	/^void do_value(struct char_data *ch, char *argument, int cmd)$/;"	f
do_viewfile	act.wizard.c	/^void do_viewfile(struct char_data *ch, char *argument, int cmd)$/;"	f
do_wake	act.move.c	/^void do_wake(struct char_data *ch, char *argument, int cmd)$/;"	f
do_weapon_load	act.off.c	/^void do_weapon_load(struct char_data *ch, char *argument, int cmd)$/;"	f
do_wear	act.obj2.c	/^void do_wear(struct char_data *ch, char *argument, int cmd) $/;"	f
do_weather	act.info.c	/^void do_weather(struct char_data *ch, char *argument, int cmd)$/;"	f
do_where	act.info.c	/^void do_where(struct char_data *ch, char *argument, int cmd)$/;"	f
do_where_object	act.info.c	/^void do_where_object(struct char_data *ch, struct obj_data *obj,$/;"	f
do_where_person	act.info.c	/^void do_where_person(struct char_data *ch, struct char_data *person, struct string_block *sb)$/;"	f
do_whisper	act.comm.c	/^void do_whisper(struct char_data *ch, char *argument, int cmd)$/;"	f
do_who	act.info.c	/^void do_who(struct char_data *ch, char *argument, int cmd)$/;"	f
do_wield	act.obj2.c	/^void do_wield(struct char_data *ch, char *argument, int cmd) $/;"	f
do_wimp	act.off.c	/^void do_wimp(struct char_data *ch, char *argument, int cmd)$/;"	f
do_wizhelp	act.info.c	/^void do_wizhelp(struct char_data *ch, char *arg, int cmd)$/;"	f
do_wizlist	act.info.c	/^void do_wizlist(struct char_data *ch, char *argument, int cmd) {$/;"	f
do_wizlock	act.wizard.c	/^void do_wizlock(struct char_data *ch, char *argument, int cmd)$/;"	f
do_wizset	act.wizard.c	/^void do_wizset(struct char_data *ch, char *argument, int cmd) $/;"	f
do_world	act.info.c	/^void do_world(struct char_data *ch, char *argument, int cmd)$/;"	f
do_write	act.comm.c	/^void do_write(struct char_data *ch, char *argument, int cmd)$/;"	f
do_zclean	act.wizard.c	/^void do_zclean(struct char_data *ch, char *argument, int cmdnum)$/;"	f
do_zload	act.wizard.c	/^void do_zload(struct char_data *ch, char *argument, int cmdnum)$/;"	f
do_zsave	act.wizard.c	/^void do_zsave(struct char_data *ch, char *argument, int cmdnum)$/;"	f
donothing	skills.c	/^void donothing()$/;"	f
down_river	utility.c	/^void down_river( int pulse )$/;"	f
drink_aff	constants.c	/^const int drink_aff[][3] = {$/;"	v
drinknames	constants.c	/^const char *drinknames[]=$/;"	v
drinks	constants.c	/^const char *drinks[]=$/;"	v
drop_level	limits.c	/^void drop_level(struct char_data *ch, int class, int goddrain)$/;"	f
druid_challenge_prep_room	spec_proc2.c	/^int druid_challenge_prep_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
druid_challenge_prep_room	spec_procs2.c	/^int druid_challenge_prep_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
druid_challenge_room	spec_proc2.c	/^int druid_challenge_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
druid_challenge_room	spec_procs2.c	/^int druid_challenge_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
druid_protector	spec_proc2.c	/^int druid_protector(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
druid_protector	spec_procs2.c	/^int druid_protector(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
dsearch	act.wizard.c	/^void dsearch(char *string, char *tmp)$/;"	f
dummy	pcedit.c	/^}**dummy;$/;"	v	typeref:struct:my_char_data
dummy_sprintf	sunmalloc.c	/^dummy_sprintf( string, fmt, x1, x2, x3 )$/;"	f	file:
dummy_stderrbuf	sunmalloc.c	/^static  char    dummy_stderrbuf[LBUFSIZ];$/;"	v	file:
dump	spec_proc.c	/^int dump(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
dump	spec_procs.c	/^int dump(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
dwarf_class_choice	interpreter.c	/^const int dwarf_class_choice[]= {$/;"	v
echo_off	interpreter.c	/^unsigned char echo_off[] = {IAC, WILL, TELOPT_ECHO, '\\0'};$/;"	v
echo_on	interpreter.c	/^unsigned char echo_on[]  = {IAC, WONT, TELOPT_ECHO, '\\r', '\\n', '\\0'};$/;"	v
edit_menu	create.c	/^char *edit_menu = "    1) Name                       2) Description\\n\\r"$/;"	v
elf_class_choice	interpreter.c	/^const int elf_class_choice[]= {$/;"	v
elf_comm	spec_proc.c	/^static char *elf_comm[] = {$/;"	v	file:
elf_comm	spec_procs.c	/^static char *elf_comm[] = {$/;"	v	file:
end2	mobact.c	/^void end2(char *arg, struct char_data *ch)$/;"	f
equip_char	handler.c	/^void equip_char(struct char_data *ch, struct obj_data *obj, int pos)$/;"	f
equipment_types	constants.c	/^const char *equipment_types[] = {$/;"	v
eric_johnson	spec_proc.c	/^int eric_johnson(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
eric_johnson	spec_procs.c	/^int eric_johnson(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
error	sunmalloc.c	/^error(fmt, arg1, arg2, arg3)$/;"	f	file:
exec_social	spec_proc.c	/^void exec_social(struct char_data *npc, char *cmd, int next_line,$/;"	f
exec_social	spec_procs.c	/^void exec_social(struct char_data *npc, char *cmd, int next_line,$/;"	f
exist	utility.c	/^int exist(char *s)$/;"	f
exit_bits	constants.c	/^const char *exit_bits[] = {$/;"	v
exit_menu	create.c	/^char *exit_menu = "    1) North                      2) East\\n\\r"$/;"	v
exit_ok	utility.c	/^int exit_ok(struct room_direction_data	*exit, struct room_data **rpp)$/;"	f
exits	constants.c	/^const  char *exits[] =$/;"	v
extra_bits	constants.c	/^const char *extra_bits[] = {$/;"	v
extra_flags	pcedit.c	/^	long extra_flags;$/;"	m	struct:char_file_u_new	file:
extra_str	pcedit.c	/^	char extra_str[255];$/;"	m	struct:char_file_u_new	file:
extract_char	handler.c	/^void extract_char(struct char_data *ch)$/;"	f
extract_char_smarter	handler.c	/^void extract_char_smarter(struct char_data *ch, long save_room)$/;"	f
extract_obj	handler.c	/^void extract_obj(struct obj_data *obj)$/;"	f
fake_setup_dir	utility.c	/^void fake_setup_dir(FILE *fl, long room, int dir)$/;"	f
false	sunmalloc.c	/^typedef enum {false,true} bool;$/;"	e	enum:__anon3	file:
fido	spec_proc.c	/^int fido(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fido	spec_procs.c	/^int fido(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fight_messages	db.c	/^struct message_list fight_messages[MAX_MESSAGES]; \/* fighting messages   *\/$/;"	v	typeref:struct:message_list
fighter	spec_proc.c	/^int fighter(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fighter	spec_procs.c	/^int fighter(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fighter_cleric	spec_procs3.c	/^int fighter_cleric(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fighter_mage	spec_procs3.c	/^int fighter_mage(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
fighting_in_room	utility.c	/^int fighting_in_room(int room_n)$/;"	f
file_end_pos	mail.c	/^long	file_end_pos = 0; \/* length of file *\/$/;"	v
file_to_string	db.c	/^int file_to_string(char *name, char *buf)$/;"	f
fileno	sunmalloc.c	1464;"	d	file:
fill	interpreter.c	/^char *fill[]=$/;"	v
fill_word	interpreter.c	/^int fill_word(char *argument)$/;"	f
find_action	act.social.c	/^int find_action(int cmd)$/;"	f
find_char_in_index	mail.c	/^mail_index_type *find_char_in_index(char *searchee)$/;"	f
find_door	act.move.c	/^int find_door(struct char_data *ch, char *type, char *dir)$/;"	f
find_ex_description	act.info.c	/^char *find_ex_description(char *word, struct extra_descr_data *list)$/;"	f
find_mailman	mail.c	/^struct char_data *find_mailman(struct char_data *ch)$/;"	f
find_mobile_here_with_spec_proc	spec_proc.c	/^struct char_data *find_mobile_here_with_spec_proc(int (*fcn)(), int rnumber)$/;"	f
find_mobile_here_with_spec_proc	spec_procs.c	/^struct char_data *find_mobile_here_with_spec_proc(int (*fcn)(), int rnumber)$/;"	f
find_name	interpreter.c	/^int find_name(char *name)$/;"	f
find_path	skills.c	/^int find_path(int in_room, int (*predicate)(), void *c_data, $/;"	f
findbucket	bsd.c	/^findbucket(freep, srchlen)$/;"	f	file:
findbucket	mybsd.c	/^findbucket(freep, srchlen)$/;"	f	file:
fix_returns	board.c	/^char *fix_returns(char *text_string)$/;"	f
fl1	sunmalloc.c	/^        uint    fl1,fl2,fl3;$/;"	m	struct:mallinfo	file:
fl2	sunmalloc.c	/^        uint    fl1,fl2,fl3;$/;"	m	struct:mallinfo	file:
fl3	sunmalloc.c	/^        uint    fl1,fl2,fl3;$/;"	m	struct:mallinfo	file:
flame	spec_proc.c	/^int flame(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
flame	spec_procs.c	/^int flame(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
flush_queues	comm.c	/^void flush_queues(struct descriptor_data *d)$/;"	f
fname	handler.c	/^char *fname(char *namelist)$/;"	f
follow_time	utility.c	/^int follow_time(struct char_data *ch)$/;"	f
forward_left_square	spec_proc3.c	/^struct room_data *forward_left_square(struct room_data *room)$/;"	f
forward_left_square	spec_procs3.c	/^struct room_data *forward_left_square(struct room_data *room)$/;"	f
forward_right_square	spec_proc3.c	/^struct room_data *forward_right_square(struct room_data *room)$/;"	f
forward_right_square	spec_procs3.c	/^struct room_data *forward_right_square(struct room_data *room)$/;"	f
forward_square	spec_proc3.c	/^struct room_data *forward_square(struct room_data *room)$/;"	f
forward_square	spec_procs3.c	/^struct room_data *forward_square(struct room_data *room)$/;"	f
fread_action	act.social.c	/^char *fread_action(FILE *fl)$/;"	f
fread_string	db.c	/^char *fread_string(FILE *f1)$/;"	f
free	bsd.c	/^free(cp)$/;"	f
free	mybsd.c	/^free(cp)$/;"	f
free	sunmalloc.c	/^free(ptr)$/;"	f
free_char	db.c	/^void free_char(struct char_data *ch)$/;"	f
free_list	mail.c	/^position_list_type 	*free_list = 0;  \/* list of free positions in file *\/$/;"	v
free_obj	db.c	/^void free_obj(struct obj_data *obj)$/;"	f
free_return	sunmalloc.c	159;"	d	file:
free_t	sunmalloc.c	158;"	d	file:
free_victims	spec_proc2.c	/^void free_victims(struct breath_victim *head)$/;"	f
free_victims	spec_procs2.c	/^void free_victims(struct breath_victim *head)$/;"	f
freehdr	sunmalloc.c	/^struct  freehdr {$/;"	s	file:
freehdrlist	sunmalloc.c	/^static  Freehdr freehdrlist = NIL;      \/* List of available headers *\/$/;"	v	file:
freehdrptr	sunmalloc.c	/^static  Freehdr freehdrptr = NIL;       \/* ptr to block of available headers *\/$/;"	v	file:
fullness	constants.c	/^const char *fullness[] = {$/;"	v
fwrite_string	db.c	/^int fwrite_string (FILE *fl, char *buf)$/;"	f
gLightLevel	weather.c	/^int gLightLevel = 4;  \/* defaults to sunlight *\/$/;"	v
gMoonRise	weather.c	/^int gMoonRise = 22;$/;"	v
gMoonSet	weather.c	/^int gMoonSet = 3;$/;"	v
gSeason	weather.c	/^int gSeason;   \/* global variable --- the season *\/$/;"	v
gSunRise	weather.c	/^int gSunRise = 5;$/;"	v
gSunSet	weather.c	/^int gSunSet = 18;$/;"	v
gain_condition	limits.c	/^void gain_condition(struct char_data *ch,int condition,int value)$/;"	f
gain_exp	limits.c	/^void gain_exp(struct char_data *ch, int gain)$/;"	f
gain_exp_regardless	limits.c	/^void gain_exp_regardless(struct char_data *ch, int gain, int class)$/;"	f
game_loop	comm.c	/^int game_loop(int s)$/;"	f
generate_indices	db.c	/^struct index_data *generate_indices(FILE *fl, int *top, int *sort_top, int *alloc_top, char *dirname) $/;"	f
generic_find	handler.c	/^int generic_find(char *arg, int bitvector, struct char_data *ch,$/;"	f
get	act.obj1.c	/^void get(struct char_data *ch, struct obj_data *obj_object, $/;"	f
getFreeAffSlot	utility.c	/^int getFreeAffSlot( struct obj_data *obj)$/;"	f
get_char	handler.c	/^struct char_data *get_char(char *name)$/;"	f
get_char_linear	act.info.c	/^struct char_data *get_char_linear(struct char_data *ch, char *arg, int *rf, int *df)$/;"	f
get_char_near_room_vis	handler.c	/^struct char_data *get_char_near_room_vis(struct char_data *ch, char *name, long next_room)$/;"	f
get_char_num	handler.c	/^struct char_data *get_char_num(int nr)$/;"	f
get_char_room	handler.c	/^struct char_data *get_char_room(char *name, int room)$/;"	f
get_char_room_vis	handler.c	/^struct char_data *get_char_room_vis(struct char_data *ch, char *name)$/;"	f
get_char_vis	handler.c	/^struct char_data *get_char_vis(struct char_data *ch, char *name)$/;"	f
get_char_vis_world	handler.c	/^struct char_data *get_char_vis_world(struct char_data *ch, char *name,$/;"	f
get_from_q	comm.c	/^int get_from_q(struct txt_q *queue, char *dest)$/;"	f
get_int	pcedit.c	/^int get_int(int min, int max, int zero_ok)$/;"	f
get_number	handler.c	/^int get_number(char **name) {$/;"	f
get_obj	handler.c	/^struct obj_data *get_obj(char *name)$/;"	f
get_obj_in_list	handler.c	/^struct obj_data *get_obj_in_list(char *name, struct obj_data *list)$/;"	f
get_obj_in_list_num	handler.c	/^struct obj_data *get_obj_in_list_num(int num, struct obj_data *list)$/;"	f
get_obj_in_list_vis	handler.c	/^struct obj_data *get_obj_in_list_vis(struct char_data *ch, char *name, $/;"	f
get_obj_num	handler.c	/^struct obj_data *get_obj_num(int nr)$/;"	f
get_obj_vis	handler.c	/^struct obj_data *get_obj_vis(struct char_data *ch, char *name)$/;"	f
get_obj_vis_accessible	handler.c	/^struct obj_data *get_obj_vis_accessible(struct char_data *ch, char *name)$/;"	f
get_obj_vis_world	handler.c	/^struct obj_data *get_obj_vis_world(struct char_data *ch, char *name,$/;"	f
get_object_in_equip_vis	act.info.c	/^struct obj_data *get_object_in_equip_vis(struct char_data *ch,$/;"	f
get_string	pcedit.c	/^get_string(char *s)$/;"	f
getabunch	utility.c	/^int getabunch(char *name, char  *newname)$/;"	f
getall	utility.c	/^char getall(char *name, char *newname)$/;"	f
getfreehdr	sunmalloc.c	/^getfreehdr()$/;"	f	file:
getlocalmud	dimd.c	/^int getlocalmud(void)$/;"	f
getmud	dimd.c	/^int getmud(struct char_data *ch, char *mudname, bool checkforup)$/;"	f
gevent	shop.c	/^int gevent = 0; \/* Global Event happening currently *\/$/;"	v
geyser	spec_proc.c	/^int geyser(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
geyser	spec_procs.c	/^int geyser(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghost	spec_proc2.c	/^int ghost(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghost	spec_procs2.c	/^int ghost(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghostsoldier	spec_proc.c	/^int ghostsoldier(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghostsoldier	spec_procs.c	/^int ghostsoldier(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghoul	spec_proc.c	/^int ghoul(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ghoul	spec_procs.c	/^int ghoul(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
gnome_class_choice	interpreter.c	/^const int gnome_class_choice[]= {$/;"	v
go_direction	skills.c	/^int go_direction(struct char_data *ch, int dir)     $/;"	f
goblin_class_choice	interpreter.c	/^const int goblin_class_choice[]= {$/;"	v
goblin_sentry	spec_proc3.c	/^int goblin_sentry(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
goblin_sentry	spec_procs3.c	/^int goblin_sentry(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
golgar	spec_proc.c	/^int golgar(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
golgar	spec_procs.c	/^int golgar(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
graf	limits.c	/^int graf(int age, int p0, int p1, int p2, int p3, int p4, int p5, int p6)$/;"	f
green_slime	spec_proc.c	/^int green_slime(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
green_slime	spec_procs.c	/^int green_slime(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
group_gain	fight.c	/^void group_gain(struct char_data *ch,struct char_data *victim) {$/;"	f
grunt	pcedit.c	/^  struct char_file_u grunt;  		\/* contained in structs.h *\/$/;"	m	struct:my_char_data	typeref:struct:my_char_data::char_file_u	file:
grunt2	pcedit.c	/^  struct char_file_u_new grunt2;	\/* contained here *\/$/;"	m	struct:my_char_data	typeref:struct:my_char_data::char_file_u_new	file:
guardian	spec_proc.c	/^int guardian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
guardian	spec_procs.c	/^int guardian(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
guild_guard	spec_proc.c	/^int guild_guard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
guild_guard	spec_procs.c	/^int guild_guard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
half_chop	interpreter.c	/^void half_chop(char *string, char *arg1, char *arg2)$/;"	f
half_elf_class_choice	interpreter.c	/^const int half_elf_class_choice[]= {$/;"	v
half_giant_class_choice	interpreter.c	/^const int half_giant_class_choice[]= {$/;"	v
half_ogre_class_choice	interpreter.c	/^const int half_ogre_class_choice[]= {$/;"	v
half_orc_class_choice	interpreter.c	/^const int half_orc_class_choice[]= {$/;"	v
halfling_class_choice	interpreter.c	/^const int halfling_class_choice[]= {$/;"	v
hangup_on_a_mud	dimd.c	/^void hangup_on_a_mud(int mud)$/;"	f
has_key	act.move.c	/^int has_key(struct char_data *ch, int key)$/;"	f
has_mail	mail.c	/^int	has_mail(char *recipient)$/;"	f
hash_enter	hash.c	/^int hash_enter(struct hash_header *ht, long key, void *data)$/;"	f
hash_find	hash.c	/^void *hash_find(struct hash_header *ht, long key)$/;"	f
hash_find_or_create	hash.c	/^void *hash_find_or_create(struct hash_header *ht, long key)$/;"	f
hash_iterate	hash.c	/^void hash_iterate(struct hash_header *ht, void (*func)(), void *cdata)$/;"	f
hash_remove	hash.c	/^void *hash_remove(struct hash_header *ht, long key)$/;"	f
heapsize	sunmalloc.c	110;"	d	file:
heat_blind	magic.c	/^void heat_blind(struct char_data *ch)$/;"	f
height	pcedit.c	/^	unsigned int height;	$/;"	m	struct:char_file_u_new	file:
help	db.c	/^char help[MAX_STRING_LENGTH];         \/* the main help page              *\/$/;"	v
help_fl	db.c	/^     *help_fl,                        \/* file for help texts (HELP <kwd>)*\/$/;"	v
help_index	db.c	/^struct help_index_element *help_index = 0;$/;"	v	typeref:struct:help_index_element
hide	act.social.c	/^	int hide;$/;"	m	struct:social_messg	file:
hit	fight.c	/^void hit(struct char_data *ch, struct char_data *victim, int type)$/;"	f
hit_gain	limits.c	/^int hit_gain(struct char_data *ch)$/;"	f
hit_limit	limits.c	/^int hit_limit(struct char_data *ch)$/;"	f
hometown	pcedit.c	/^	sh_int hometown;$/;"	m	struct:char_file_u_new	file:
hostlist	comm.c	/^char hostlist[MAX_BAN_HOSTS][30];  \/* list of sites to ban           *\/$/;"	v
how_good	spec_proc.c	/^char *how_good(int percent)$/;"	f
how_good	spec_procs.c	/^char *how_good(int percent)$/;"	f
howman	spec_proc.c	/^  int   howman; $/;"	m	struct:pub_beers	file:
howman	spec_procs.c	/^  int   howman; $/;"	m	struct:pub_beers	file:
human_class_choice	interpreter.c	/^const int human_class_choice[]= {$/;"	v
hunter	spec_proc2.c	/^int hunter(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
hunter	spec_procs2.c	/^int hunter(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
hunting_data	skills.c	/^struct hunting_data {$/;"	s	file:
hupsig	signals.c	/^void hupsig()$/;"	f
identd_test	comm.c	/^void identd_test(struct sockaddr_in in_addr)$/;"	f
immunity_names	constants.c	/^const char *immunity_names[] = $/;"	v
in_group	utility.c	/^char in_group ( struct char_data *ch1, struct char_data *ch2)$/;"	f
in_room	shop.c	/^	int in_room;		\/* Where is the shop?			*\/$/;"	m	struct:shop_data	file:
inactive_axe	pcedit.c	/^void inactive_axe(int orig_ammt, time_t CURRENT_TIME) {$/;"	f
inactive_god_axe	pcedit.c	/^void inactive_god_axe(int orig_ammt, time_t CURRENT_TIME) {$/;"	f
index	spec_proc.c	/^  short index;$/;"	m	struct:memory	file:
index	spec_procs.c	/^  short index;$/;"	m	struct:memory	file:
index_mail	mail.c	/^void	index_mail(char *raw_name_to_index, long pos)$/;"	f
info	db.c	/^char info[MAX_STRING_LENGTH];         \/* the info text                   *\/$/;"	v
init_hash_table	hash.c	/^void init_hash_table(struct hash_header	*ht, int rec_size, int table_size)$/;"	f
init_socket	comm.c	/^int init_socket( int port )$/;"	f
init_string_block	handler.c	/^void init_string_block(struct string_block *sb)$/;"	f
init_world	hash.c	/^void init_world(struct room_data *room_db[])$/;"	f
insert	sunmalloc.c	/^insert(newblk, len)$/;"	f	file:
insert_index	db.c	/^struct index_data *insert_index(struct index_data *index, void *data, long vnum, int *alloc_top, int *top) $/;"	f
insert_mobile	db.c	/^int insert_mobile(struct char_data *obj, long vnum)$/;"	f
insert_object	db.c	/^int insert_object(struct obj_data *obj, long vnum)$/;"	f
int_app	constants.c	/^struct int_app_type int_app[26] = {$/;"	v	typeref:struct:int_app_type
intcomp	db.c	/^int intcomp(struct wizs *j, struct wizs *k) {$/;"	f
invert	spec_proc2.c	/^void invert(char *arg1, char *arg2)$/;"	f
invert	spec_procs2.c	/^void invert(char *arg1, char *arg2)$/;"	f
is_abbrev	interpreter.c	/^int is_abbrev(char *arg1, char *arg2)$/;"	f
is_argc	dimd.c	/^static int	is_argc,is_xargc,is_exact;		$/;"	v	file:
is_argv	dimd.c	/^static char	is_buf[MAX_STRING_LENGTH], is_names[MAX_STRING_LENGTH], *is_argv[100],$/;"	v	file:
is_buf	dimd.c	/^static char	is_buf[MAX_STRING_LENGTH], is_names[MAX_STRING_LENGTH], *is_argv[100],$/;"	v	file:
is_empty	db.c	/^int is_empty(int zone_nr)$/;"	f
is_exact	dimd.c	/^static int	is_argc,is_xargc,is_exact;		$/;"	v	file:
is_murdervict	spec_assign.c	/^int is_murdervict(struct char_data *ch)$/;"	f
is_names	dimd.c	/^static char	is_buf[MAX_STRING_LENGTH], is_names[MAX_STRING_LENGTH], *is_argv[100],$/;"	v	file:
is_number	interpreter.c	/^int is_number(char *str)$/;"	f
is_ok	shop.c	/^int is_ok(struct char_data *keeper, struct char_data *ch, int shop_nr)$/;"	f
is_same_group	act.comm.c	/^bool is_same_group( struct char_data *ach, struct char_data *bch )$/;"	f
is_target_room_p	spec_proc.c	/^int is_target_room_p(int room, void *tgt_room)$/;"	f
is_target_room_p	spec_procs.c	/^int is_target_room_p(int room, void *tgt_room)$/;"	f
is_xargc	dimd.c	/^static int	is_argc,is_xargc,is_exact;		$/;"	v	file:
is_xargv	dimd.c	/^		*is_xargv[100];$/;"	v	file:
isfreeblk	sunmalloc.c	/^isfreeblk(blk, fp)$/;"	f	file:
isname	handler.c	/^int isname(const char *str, const char *namelist)$/;"	f
isname2	handler.c	/^int isname2(const char *str, const char *namelist)$/;"	f
isname_init	dimd.c	/^isname_init(const char *str)$/;"	f
isname_iter	dimd.c	/^isname_iter(const char *namelist)$/;"	f
item_types	constants.c	/^const char *item_types[] = {$/;"	v
jabberwocky	spec_proc.c	/^int jabberwocky(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
jabberwocky	spec_procs.c	/^int jabberwocky(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
jackpot	spec_proc2.c	/^long jackpot = 25;$/;"	v
jackpot	spec_procs2.c	/^long jackpot = 25;$/;"	v
janitor	spec_proc.c	/^int janitor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
janitor	spec_procs.c	/^int janitor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
jive_box	spec_proc2.c	/^int jive_box(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
jive_box	spec_procs2.c	/^int jive_box(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
jugglernaut	spec_proc.c	/^int jugglernaut(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
jugglernaut	spec_procs.c	/^int jugglernaut(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
keeper	shop.c	/^	int keeper;             \/* The mobil who owns the shop (virtual)*\/$/;"	m	struct:shop_data	file:
keystone	spec_proc.c	/^int keystone(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
keystone	spec_procs.c	/^int keystone(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
kick_messages	act.off.c	/^void kick_messages(struct char_data *ch, struct char_data *victim, int damage)$/;"	f
killfile	db.c	16;"	d	file:
kings_hall	spec_proc.c	/^int kings_hall(struct char_data *ch, int cmd, char *arg)$/;"	f
kings_hall	spec_procs.c	/^int kings_hall(struct char_data *ch, int cmd, char *arg)$/;"	f
klog	utility.c	/^void klog (char *s) { log_sev(s, 1); }$/;"	f
last_logon	pcedit.c	/^	time_t last_logon;  \/* Time (in secs) of last logon *\/$/;"	m	struct:char_file_u_new	file:
lastblank	act.wizard.c	/^  int	startblank, lastblank;$/;"	m	struct:show_room_zone_struct	file:
lattimore	spec_proc.c	/^int lattimore(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
lattimore	spec_procs.c	/^int lattimore(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
lattimore_descs	spec_proc.c	/^char *lattimore_descs[] = {$/;"	v
lattimore_descs	spec_procs.c	/^char *lattimore_descs[] = {$/;"	v
lawful	comm.c	/^int lawful = 0;		\/* work like the game regulator *\/$/;"	v
left	sunmalloc.c	/^        Freehdr left;                   \/* Left tree pointer *\/$/;"	m	struct:freehdr	file:
left_square	spec_proc3.c	/^struct room_data *left_square(struct room_data *room)$/;"	f
left_square	spec_procs3.c	/^struct room_data *left_square(struct room_data *room)$/;"	f
length	modify.c	/^int length[] =$/;"	v
level	act.social.c	/^	int level;          \/* minimum level for poser *\/$/;"	m	struct:pose_type	file:
level	db.c	/^   int level;$/;"	m	struct:wizs	file:
level	pcedit.c	/^	byte level[ABS_MAX_CLASS];$/;"	m	struct:char_file_u_new	file:
lich_church	spec_proc3.c	/^int lich_church(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
lich_church	spec_procs3.c	/^int lich_church(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
list_char_in_room	act.info.c	/^void list_char_in_room(struct char_data *list, struct char_data *ch)$/;"	f
list_char_to_char	act.info.c	/^void list_char_to_char(struct char_data *list, struct char_data *ch, $/;"	f
list_exits_in_room	act.info.c	/^void list_exits_in_room(struct char_data *ch)$/;"	f
list_groups	act.info.c	/^void list_groups(struct char_data *ch)$/;"	f
list_obj_in_heap	act.info.c	/^void list_obj_in_heap(struct obj_data *list, struct char_data *ch)$/;"	f
list_obj_in_room	act.info.c	/^void list_obj_in_room(struct obj_data *list, struct char_data *ch)$/;"	f
list_obj_to_char	act.info.c	/^void list_obj_to_char(struct obj_data *list,struct char_data *ch, int mode, $/;"	f
list_top	act.social.c	/^static int list_top = -1;$/;"	v	file:
listexits	constants.c	/^const  char *listexits[] =$/;"	v
lizardman_shaman	spec_proc3.c	/^int lizardman_shaman(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
lizardman_shaman	spec_procs3.c	/^int lizardman_shaman(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
load_char	db.c	/^int load_char(char *name, struct char_file_u *char_element)$/;"	f
load_char_extra	reception.c	/^void load_char_extra(struct char_data *ch)$/;"	f
load_char_objs	reception.c	/^void load_char_objs(struct char_data *ch)$/;"	f
load_messages	fight.c	/^void load_messages()$/;"	f
load_one_room	db.c	/^void load_one_room(FILE *fl, struct room_data *rp)$/;"	f
load_playerfile	pcedit.c	/^int load_playerfile(char *argv[]) {$/;"	f
load_room	pcedit.c	/^	sh_int load_room;            \/* Which room to place char in  *\/$/;"	m	struct:char_file_u_new	file:
load_room_objs	reception.c	/^void load_room_objs(int room)$/;"	f
location_hit_text	fight.c	/^struct attack_hit_type location_hit_text[] =$/;"	v	typeref:struct:attack_hit_type
lock	board.c	/^  bool lock;$/;"	m	struct:board_lock_struct	file:
locked_for	board.c	/^  struct char_data *locked_for;$/;"	m	struct:board_lock_struct	typeref:struct:board_lock_struct::char_data	file:
log_sev	utility.c	/^void log_sev(char *str,int sev)$/;"	f
login	db.c	/^char login[MAX_STRING_LENGTH];$/;"	v
logsig	signals.c	/^void logsig()$/;"	f
loremaster	spec_proc2.c	/^int loremaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
loremaster	spec_procs2.c	/^int loremaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
lower	utility.c	/^char *lower(char *s)$/;"	f
mad_cyrus	spec_proc3.c	/^int mad_cyrus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mad_cyrus	spec_procs3.c	/^int mad_cyrus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mad_gertruda	spec_proc3.c	/^int mad_gertruda(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mad_gertruda	spec_procs3.c	/^int mad_gertruda(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mage_specialist_guildmaster	spec_proc2.c	/^int mage_specialist_guildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mage_specialist_guildmaster	spec_procs2.c	/^int mage_specialist_guildmaster(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user	spec_proc2.c	/^int magic_user(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user	spec_procs2.c	/^int magic_user(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user2	spec_proc.c	/^int magic_user2(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user2	spec_procs.c	/^int magic_user2(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user_imp	spec_proc3.c	/^int magic_user_imp(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
magic_user_imp	spec_procs3.c	/^int magic_user_imp(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mail_index	mail.c	/^mail_index_type		*mail_index = 0; \/* list of recs in the mail file  *\/$/;"	v
mail_ok	mail.c	/^int	mail_ok(struct char_data *ch)$/;"	f
main	comm.c	/^int main (int argc, char **argv)$/;"	f
main	pcedit.c	/^main(int argc, char *argv[])$/;"	f
make_corpse	fight.c	/^void make_corpse(struct char_data *ch, int killedbytype)$/;"	f
make_exit_ok	utility.c	/^int make_exit_ok(struct char_data *ch, struct room_data **rpp, int dir) $/;"	f
mallinfo	sunmalloc.c	/^struct mallinfo {$/;"	s	file:
malloc	bsd.c	/^malloc(nbytes)$/;"	f
malloc	mybsd.c	/^malloc(nbytes)$/;"	f
malloc	sunmalloc.c	/^malloc(nbytes)$/;"	f
malloc_debug	sunmalloc.c	/^malloc_debug(level)$/;"	f
malloc_verify	sunmalloc.c	/^malloc_verify()$/;"	f
mallocmap	sunmalloc.c	/^mallocmap()$/;"	f
mana_gain	limits.c	/^int mana_gain(struct char_data *ch)$/;"	f
mana_limit	limits.c	/^int mana_limit(struct char_data *ch)$/;"	f
matchmud	dimd.c	/^int matchmud(char *mudname)$/;"	f
max	sunmalloc.c	108;"	d	file:
max_value	modify.c	/^int max_value[] =$/;"	v
maxdesc	comm.c	/^int maxdesc, avail_descs;$/;"	v
maxptr	mybsd.c	/^long    nptr=0,maxptr=0;$/;"	v
mayor	spec_proc.c	/^int mayor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
mayor	spec_procs.c	/^int mayor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
medusa	spec_proc3.c	/^int medusa(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
medusa	spec_procs3.c	/^int medusa(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
memory	spec_proc.c	/^struct memory {$/;"	s	file:
memory	spec_procs.c	/^struct memory {$/;"	s	file:
memory_check	mybsd.c	/^void memory_check(char *p)$/;"	f
memory_check	utility.c	/^void memory_check(char *p)$/;"	f
menu2	pcedit.c	/^void menu2() {$/;"	f
message	board.c	/^struct message {$/;"	s	file:
message_buy	shop.c	/^	char *message_buy;      \/* Message when player buys item        *\/$/;"	m	struct:shop_data	file:
message_sell	shop.c	/^	char *message_sell;     \/* Message when player sells item       *\/$/;"	m	struct:shop_data	file:
min	sunmalloc.c	109;"	d	file:
min_read_level	board.c	/^int min_read_level[] = { 0, 51, 1};$/;"	v
min_remove_level	board.c	/^int min_remove_level[] = { 51, 51, 51};$/;"	v
min_victim_position	act.social.c	/^	int min_victim_position; \/* Position of victim *\/$/;"	m	struct:social_messg	file:
min_write_level	board.c	/^int min_write_level[] = { 1, 51, 1};$/;"	v
mind_burn	mindskills1.c	/^void mind_burn(byte level, struct char_data *ch,$/;"	f
mind_cell_adjustment	mindskills1.c	/^void mind_cell_adjustment(byte level, struct char_data *ch,$/;"	f
mind_chameleon	mindskills1.c	/^void mind_chameleon(byte level, struct char_data *ch,$/;"	f
mind_clairvoyance	mindskills1.c	/^void mind_clairvoyance(byte level, struct char_data *ch,$/;"	f
mind_danger_sense	mindskills1.c	/^void mind_danger_sense(byte level, struct char_data *ch,$/;"	f
mind_disintergrate	mindskills1.c	/^void mind_disintergrate(byte level, struct char_data *ch,$/;"	f
mind_domination	mindskills1.c	/^void mind_domination(byte level, struct char_data *ch,$/;"	f
mind_intensify	mindskills1.c	/^void mind_intensify(byte level, struct char_data *ch,$/;"	f
mind_levitation	mindskills1.c	/^void mind_levitation(byte level, struct char_data *ch,$/;"	f
mind_mind_over_body	mindskills1.c	/^void mind_mind_over_body(byte level, struct char_data *ch,$/;"	f
mind_mind_wipe	mindskills1.c	/^void mind_mind_wipe(byte level, struct char_data *ch,$/;"	f
mind_mindblank	mindskills1.c	/^void mind_mindblank(byte level, struct char_data *ch,$/;"	f
mind_probability_travel	mindskills1.c	/^void mind_probability_travel(byte level, struct char_data *ch,$/;"	f
mind_psi_strength	mindskills1.c	/^void mind_psi_strength(byte level, struct char_data *ch,$/;"	f
mind_psychic_crush	mindskills1.c	/^void mind_psychic_crush(byte level, struct char_data *ch,$/;"	f
mind_psychic_impersonation	mindskills1.c	/^void mind_psychic_impersonation(byte level, struct char_data *ch,$/;"	f
mind_telekinesis	mindskills1.c	/^void mind_telekinesis(byte level, struct char_data *ch,$/;"	f
mind_teleport	mindskills1.c	/^void mind_teleport(byte level, struct char_data *ch,$/;"	f
mind_tower_iron_will	mindskills1.c	/^void mind_tower_iron_will(byte level, struct char_data *ch,$/;"	f
mind_ultra_blast	mindskills1.c	/^void mind_ultra_blast(byte level, struct char_data *ch,$/;"	f
mind_use_burn	mind_use1.c	/^void mind_use_burn( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_cell_adjustment	mind_use1.c	/^void mind_use_cell_adjustment( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_chameleon	mind_use1.c	/^void mind_use_chameleon( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_clairvoyance	mind_use1.c	/^void mind_use_clairvoyance( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_danger_sense	mind_use1.c	/^void mind_use_danger_sense( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_disintergrate	mind_use1.c	/^void mind_use_disintergrate( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_domination	mind_use1.c	/^void mind_use_domination( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_intensify	mind_use1.c	/^void mind_use_intensify( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_levitation	mind_use1.c	/^void mind_use_levitation( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_mind_over_body	mind_use1.c	/^void mind_use_mind_over_body( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_mind_wipe	mind_use1.c	/^void mind_use_mind_wipe( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_mindblank	mind_use1.c	/^void mind_use_mindblank( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_probability_travel	mind_use1.c	/^void mind_use_probability_travel( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_psi_strength	mind_use1.c	/^void mind_use_psi_strength( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_psychic_crush	mind_use1.c	/^void mind_use_psychic_crush( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_psychic_impersonation	mind_use1.c	/^void mind_use_psychic_impersonation( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_telekinesis	mind_use1.c	/^void mind_use_telekinesis( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_teleport	mind_use1.c	/^void mind_use_teleport( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_tower_iron_will	mind_use1.c	/^void mind_use_tower_iron_will( byte level, struct char_data *ch, char *arg, int type,$/;"	f
mind_use_ultra_blast	mind_use1.c	/^void mind_use_ultra_blast( byte level, struct char_data *ch, char *arg, int type,$/;"	f
misaligned	sunmalloc.c	111;"	d	file:
missile_list	fight.c	/^struct char_data *missile_list = 0;   \/* head of l-list of fighting chars    *\/$/;"	v	typeref:struct:char_data
missile_next_dude	fight.c	/^struct char_data *missile_next_dude = 0; \/* Next dude global trick           *\/$/;"	v	typeref:struct:char_data
missing_cash1	shop.c	/^	char *missing_cash1;    \/* Message if keeper hasn't got cash    *\/$/;"	m	struct:shop_data	file:
missing_cash2	shop.c	/^	char *missing_cash2;    \/* Message if player hasn't got cash    *\/$/;"	m	struct:shop_data	file:
mob_count	db.c	/^long mob_count=0;$/;"	v
mob_edit_menu	create.mob.c	/^char *mob_edit_menu = "    1) Name                    2) Short description\\n\\r"$/;"	v
mob_f	db.c	/^FILE *mob_f,                          \/* file containing mob prototypes  *\/$/;"	v
mob_index	db.c	/^struct index_data *mob_index;         \/* index table for mobile file     *\/$/;"	v	typeref:struct:index_data
mob_tick_count	db.c	/^int mob_tick_count=0;$/;"	v
mobile_activity	mobact.c	/^void mobile_activity(struct char_data *ch)$/;"	f
mobile_guardian	mobact.c	/^void mobile_guardian(struct char_data *ch)$/;"	f
mobile_wander	mobact.c	/^void mobile_wander(struct char_data *ch)$/;"	f
monk	spec_proc2.c	/^int monk(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
monk	spec_procs2.c	/^int monk(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
monk_challenge_prep_room	spec_proc2.c	/^int monk_challenge_prep_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
monk_challenge_prep_room	spec_procs2.c	/^int monk_challenge_prep_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
monk_challenge_room	spec_proc2.c	/^int monk_challenge_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
monk_challenge_room	spec_procs2.c	/^int monk_challenge_room(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type) $/;"	f
monk_master	spec_proc2.c	/^int monk_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
monk_master	spec_procs2.c	/^int monk_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
month_name	constants.c	/^const char *month_name[17] = {$/;"	v
moontype	weather.c	/^unsigned char moontype;   $/;"	v
morecore	bsd.c	/^morecore(bucket)$/;"	f	file:
morecore	mybsd.c	/^morecore(bucket)$/;"	f	file:
morecore	sunmalloc.c	/^morecore(nbytes)$/;"	f	file:
motd	db.c	/^char motd[MAX_STRING_LENGTH];         \/* the messages of today           *\/$/;"	v
move_gain	limits.c	/^int move_gain(struct char_data *ch)$/;"	f
move_limit	limits.c	/^int move_limit(struct char_data *ch)$/;"	f
movement_loss	constants.c	/^const int movement_loss[]=$/;"	v
msg	board.c	/^  struct message msg[MAX_MSGS+1];$/;"	m	struct:board	typeref:struct:board::message	file:
msg	dimd.c	/^void msg(char *s, struct char_data *ch)$/;"	f
mstats	bsd.c	/^mstats(s)$/;"	f
mstats	mybsd.c	/^mstats(s)$/;"	f
muck	pcedit.c	/^void muck(int orig_ammt, char name[80]) {$/;"	f
mud_port	comm.c	/^int mud_port;$/;"	v
mud_time_passed	utility.c	/^struct time_info_data mud_time_passed(time_t t2, time_t t1)$/;"	f
mud_time_passed2	utility.c	/^void mud_time_passed2(time_t t2, time_t t1, struct time_info_data *t)$/;"	f
muds	dimd.c	/^struct mud_data muds[] =		\/*			   \/-No Idea	*\/$/;"	v	typeref:struct:mud_data
mudshutdown	comm.c	/^int mudshutdown = 0;       \/* clean shutdown *\/$/;"	v
mxfast	sunmalloc.c	/^        uint    mxfast;$/;"	m	struct:mallinfo	file:
my_char_data	pcedit.c	/^struct my_char_data {$/;"	s	file:
name	db.c	/^   char name[20];$/;"	m	struct:wizs	file:
name	pcedit.c	/^	char name[20];$/;"	m	struct:char_file_u_new	file:
name	skills.c	/^  char	*name;$/;"	m	struct:hunting_data	file:
name_from_drinkcon	act.obj2.c	/^void name_from_drinkcon(struct obj_data *obj)$/;"	f
name_to_drinkcon	act.obj2.c	/^void name_to_drinkcon(struct obj_data *obj,int type)$/;"	f
named_mobile_in_room	skills.c	/^int named_mobile_in_room(int room, struct hunting_data *c_data)$/;"	f
named_object_on_ground	spec_proc.c	/^int named_object_on_ground(int room, void *c_data)$/;"	f
named_object_on_ground	spec_procs.c	/^int named_object_on_ground(int room, void *c_data)$/;"	f
names	spec_proc.c	/^  char **names;$/;"	m	struct:memory	file:
names	spec_procs.c	/^  char **names;$/;"	m	struct:memory	file:
nanny	interpreter.c	/^void nanny(struct descriptor_data *d, char *arg)$/;"	f
nbpg	sunmalloc.c	/^static  int     nbpg = 0;       \/* set by calling getpagesize() *\/$/;"	v	file:
necklace	spec_proc.c	/^char *necklace[] = {$/;"	v
necklace	spec_procs.c	/^char *necklace[] = {$/;"	v
new	spell_parser.c	/^  char new[10];$/;"	m	struct:syllable	file:
new_connection	comm.c	/^int new_connection(int s)$/;"	f
new_descriptor	comm.c	/^int new_descriptor(int s)$/;"	f
news	db.c	/^char news[MAX_STRING_LENGTH];           \/* the news                        *\/$/;"	v
newstrlen	act.obj1.c	/^int newstrlen(char *p) {$/;"	f
next	spec_proc2.c	/^  struct breath_victim  *next;$/;"	m	struct:breath_victim	typeref:struct:breath_victim::breath_victim	file:
next	spec_procs2.c	/^  struct breath_victim	*next;$/;"	m	struct:breath_victim	typeref:struct:breath_victim::breath_victim	file:
next_line	spec_proc.c	/^  int next_line;$/;"	m	struct:social_type	file:
next_line	spec_procs.c	/^  int next_line;$/;"	m	struct:social_type	file:
next_to_process	comm.c	/^struct descriptor_data *descriptor_list, *next_to_process;$/;"	v	typeref:struct:
nextblk	sunmalloc.c	107;"	d	file:
nextf	bsd.c	/^static	union overhead *nextf[NBUCKETS];$/;"	v	typeref:union:overhead	file:
nextf	mybsd.c	/^static  union overhead *nextf[NBUCKETS];$/;"	v	typeref:union:overhead	file:
nfreehdrs	sunmalloc.c	/^static  int     nfreehdrs = 0;          \/* # of headers in current block *\/$/;"	v	file:
night_watchman	modify.c	/^void night_watchman()$/;"	f
ninja_master	spec_proc2.c	/^int ninja_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
ninja_master	spec_procs2.c	/^int ninja_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
nmalloc	bsd.c	/^static	u_int nmalloc[NBUCKETS];$/;"	v	file:
nmalloc	mybsd.c	/^static  u_int nmalloc[NBUCKETS];$/;"	v	file:
no_mail	db.c	/^int no_mail = 0;$/;"	v
no_specials	comm.c	/^int no_specials = 0;    \/* Suppress ass. of special routines *\/$/;"	v
no_such_item1	shop.c	/^	char *no_such_item1;    \/* Message if keeper hasn't got an item *\/$/;"	m	struct:shop_data	file:
no_such_item2	shop.c	/^	char *no_such_item2;    \/* Message if player hasn't got an item *\/$/;"	m	struct:shop_data	file:
nodrop	spec_proc.c	/^int nodrop(struct char_data *ch, int cmd, char *arg, struct obj_data *tobj, int type)$/;"	f
nodrop	spec_procs.c	/^int nodrop(struct char_data *ch, int cmd, char *arg, struct obj_data *tobj, int type)$/;"	f
nonblock	comm.c	/^void nonblock(int s)$/;"	f
nonecklace	spec_proc.c	/^char *nonecklace[] = {$/;"	v
nonecklace	spec_procs.c	/^char *nonecklace[] = {$/;"	v
noop	mobact.c	/^void noop(char *arg, struct char_data *ch)$/;"	f
not_found	act.social.c	/^	char *not_found;$/;"	m	struct:social_messg	file:
npc_class_types	constants.c	/^const char *npc_class_types[] = {$/;"	v
npc_steal	spec_proc.c	/^void npc_steal(struct char_data *ch,struct char_data *victim)$/;"	f
npc_steal	spec_procs.c	/^void npc_steal(struct char_data *ch,struct char_data *victim)$/;"	f
nptr	mybsd.c	/^long    nptr=0,maxptr=0;$/;"	v
number	board.c	/^  int number;$/;"	m	struct:board	file:
number	utility.c	/^int number(int from, int to) $/;"	f
number_of_saved_rooms	db.c	/^long number_of_saved_rooms = 0;$/;"	v
number_of_shops	shop.c	/^int number_of_shops;$/;"	v
numbered_person	act.info.c	/^char *numbered_person(struct char_data *ch, struct char_data *person)$/;"	f
numberhosts	comm.c	/^int numberhosts;$/;"	v
obj_count	db.c	/^long obj_count=0;$/;"	v
obj_edit_menu	create.obj.c	/^char *obj_edit_menu = "    1) Name                    2) Short description\\n\\r"$/;"	v
obj_f	db.c	/^     *obj_f,                          \/* obj prototypes                  *\/$/;"	v
obj_from_char	handler.c	/^void obj_from_char(struct obj_data *object)$/;"	f
obj_from_obj	handler.c	/^void obj_from_obj(struct obj_data *obj)$/;"	f
obj_from_room	handler.c	/^void obj_from_room(struct obj_data *object)$/;"	f
obj_index	db.c	/^struct index_data *obj_index;         \/* index table for object file     *\/$/;"	v	typeref:struct:index_data
obj_store_to_char	reception.c	/^void obj_store_to_char(struct char_data *ch, struct obj_file_u *st)$/;"	f
obj_store_to_room	reception.c	/^void obj_store_to_room(int room, struct obj_file_u *st)$/;"	f
obj_to_char	handler.c	/^void obj_to_char(struct obj_data *object, struct char_data *ch)$/;"	f
obj_to_obj	handler.c	/^void obj_to_obj(struct obj_data *obj, struct obj_data *obj_to)$/;"	f
obj_to_room	handler.c	/^void obj_to_room(struct obj_data *object, long room)$/;"	f
obj_to_room2	handler.c	/^void obj_to_room2(struct obj_data *object, long room)$/;"	f
obj_to_store	reception.c	/^void obj_to_store(struct obj_data *obj, struct obj_file_u *st,$/;"	f
object_list	db.c	/^struct obj_data  *object_list = 0;    \/* the global linked list of obj's *\/$/;"	v	typeref:struct:obj_data
object_list_new_owner	handler.c	/^void object_list_new_owner(struct obj_data *list, struct char_data *ch)$/;"	f
old_search_block	interpreter.c	/^int old_search_block(char *argument,int begin,int length,char **list,int mode)$/;"	f
one_argument	interpreter.c	/^char *one_argument(char *argument, char *first_arg )$/;"	f
one_dimd_argument	dimd.c	/^char *one_dimd_argument(char *argument, char *first_arg)$/;"	f
one_lc_dimd_argument	dimd.c	/^char *one_lc_dimd_argument(char *argument, char *first_arg)$/;"	f
one_word	modify.c	/^char *one_word(char *argument, char *first_arg )$/;"	f
only_argument	interpreter.c	/^void only_argument(char *argument, char *dest)$/;"	f
open1	shop.c	/^	int open1,open2;	\/* When does the shop open?		*\/$/;"	m	struct:shop_data	file:
open2	shop.c	/^	int open1,open2;	\/* When does the shop open?		*\/$/;"	m	struct:shop_data	file:
open_door	act.move.c	/^int open_door(struct char_data *ch, int dir)$/;"	f
orc_class_choice	interpreter.c	/^const int orc_class_choice[]= {$/;"	v
ordblks	sunmalloc.c	/^        uint    ordblks;$/;"	m	struct:mallinfo	file:
org	spell_parser.c	/^  char org[10];$/;"	m	struct:syllable	file:
orig_ammt	pcedit.c	/^int orig_ammt=0, after_ammt=0;$/;"	v
others_auto	act.social.c	/^	char *others_auto;$/;"	m	struct:social_messg	file:
others_found	act.social.c	/^	char *others_found;$/;"	m	struct:social_messg	file:
others_no_arg	act.social.c	/^	char *others_no_arg;$/;"	m	struct:social_messg	file:
our_pos	pcedit.c	/^int our_pos = 0;$/;"	v
ov_index	bsd.c	128;"	d	file:
ov_index	mybsd.c	129;"	d	file:
ov_magic	bsd.c	127;"	d	file:
ov_magic	mybsd.c	128;"	d	file:
ov_next	bsd.c	/^	union	overhead *ov_next;	\/* when free *\/$/;"	m	union:overhead	typeref:union:overhead::overhead	file:
ov_next	mybsd.c	/^        union   overhead *ov_next;      \/* when free *\/$/;"	m	union:overhead	typeref:union:overhead::overhead	file:
ov_rmagic	bsd.c	129;"	d	file:
ov_rmagic	mybsd.c	130;"	d	file:
ov_size	bsd.c	130;"	d	file:
ov_size	mybsd.c	131;"	d	file:
overhead	bsd.c	/^union	overhead {$/;"	u	file:
overhead	mybsd.c	/^union   overhead {$/;"	u	file:
ovu	bsd.c	/^	} ovu;$/;"	m	union:overhead	typeref:struct:overhead::__anon1	file:
ovu	mybsd.c	/^        } ovu;$/;"	m	union:overhead	typeref:struct:overhead::__anon2	file:
ovu_index	bsd.c	/^		u_char	ovu_index;	\/* bucket # *\/$/;"	m	struct:overhead::__anon1	file:
ovu_index	mybsd.c	/^                u_char  ovu_index;      \/* bucket # *\/$/;"	m	struct:overhead::__anon2	file:
ovu_magic	bsd.c	/^		u_char	ovu_magic;	\/* magic number *\/$/;"	m	struct:overhead::__anon1	file:
ovu_magic	mybsd.c	/^                u_char  ovu_magic;      \/* magic number *\/$/;"	m	struct:overhead::__anon2	file:
ovu_rmagic	bsd.c	/^		u_short	ovu_rmagic;	\/* range magic number *\/$/;"	m	struct:overhead::__anon1	file:
ovu_rmagic	mybsd.c	/^                u_short ovu_rmagic;     \/* range magic number *\/$/;"	m	struct:overhead::__anon2	file:
ovu_size	bsd.c	/^		u_int	ovu_size;	\/* actual block size *\/$/;"	m	struct:overhead::__anon1	file:
ovu_size	mybsd.c	/^                u_int   ovu_size;       \/* actual block size *\/$/;"	m	struct:overhead::__anon2	file:
p10	sunmalloc.c	/^        uint    p8,p9,p10;$/;"	m	struct:mallinfo	file:
p8	sunmalloc.c	/^        uint    p8,p9,p10;$/;"	m	struct:mallinfo	file:
p9	sunmalloc.c	/^        uint    p8,p9,p10;$/;"	m	struct:mallinfo	file:
page_string	modify.c	/^void page_string(struct descriptor_data *d, char *str, int keep_internal)$/;"	f
page_string_block	handler.c	/^void page_string_block(struct string_block *sb, struct char_data *ch)$/;"	f
pagebucket	bsd.c	/^static	int pagebucket;			\/* page size bucket *\/$/;"	v	file:
pagebucket	mybsd.c	/^static  int pagebucket;                 \/* page size bucket *\/$/;"	v	file:
pagesz	bsd.c	/^static	int pagesz;			\/* page size *\/$/;"	v	file:
pagesz	mybsd.c	/^static  int pagesz;                     \/* page size *\/$/;"	v	file:
paramedics	spec_proc.c	/^int paramedics(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
paramedics	spec_procs.c	/^int paramedics(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
pbreath	spells2.c	/^struct pbreath {$/;"	s	file:
pc_class_types	constants.c	/^const char *pc_class_types[] = {$/;"	v
perform_violence	fight.c	/^void perform_violence(int pulse)$/;"	f
perform_wear	act.obj2.c	/^perform_wear(struct char_data *ch, struct obj_data *obj_object, long keyword)$/;"	f
pet_shops	spec_proc.c	/^int pet_shops(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
pet_shops	spec_procs.c	/^int pet_shops(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
pick_archer_target	spec_procs3.c	/^int pick_archer_target(struct char_data *ch, int maxr, struct char_data **targ,    int *rn, int *dr)$/;"	f
played	pcedit.c	/^	int played;    \/* Number of secs played in total *\/$/;"	m	struct:char_file_u_new	file:
player_bits	constants.c	/^const char *player_bits[] = {$/;"	v
player_table	db.c	/^struct player_index_element *player_table = 0; \/* index to player file   *\/$/;"	v	typeref:struct:player_index_element
plr_tick_count	interpreter.c	/^int plr_tick_count=0;$/;"	v
pointer	spec_proc.c	/^  short pointer;$/;"	m	struct:memory	file:
pointer	spec_procs.c	/^  short pointer;$/;"	m	struct:memory	file:
points	pcedit.c	/^	struct char_point_data points;$/;"	m	struct:char_file_u_new	typeref:struct:char_file_u_new::char_point_data	file:
pop_free_list	mail.c	/^long	pop_free_list(void)$/;"	f
portal	spec_proc2.c	/^int portal(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
portal	spec_procs2.c	/^int portal(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
pose_messages	act.social.c	/^} pose_messages[MAX_MESSAGES];$/;"	v	typeref:struct:pose_type
pose_type	act.social.c	/^struct pose_type$/;"	s	file:
poser_msg	act.social.c	/^	char *poser_msg[4];  \/* message to poser        *\/$/;"	m	struct:pose_type	file:
position_types	constants.c	/^const char *position_types[] = {$/;"	v
postmaster_check_mail	mail.c	/^void	postmaster_check_mail(struct char_data *ch, int cmd, char *arg)$/;"	f
postmaster_receive_mail	mail.c	/^void	postmaster_receive_mail(struct char_data *ch, int cmd, char *arg)$/;"	f
postmaster_send_mail	mail.c	/^void	postmaster_send_mail(struct char_data *ch, int cmd, char *arg)$/;"	f
pp1	sunmalloc.c	/^        uint    pp1,pp2,pp3;$/;"	m	struct:mallinfo	file:
pp2	sunmalloc.c	/^        uint    pp1,pp2,pp3;$/;"	m	struct:mallinfo	file:
pp3	sunmalloc.c	/^        uint    pp1,pp2,pp3;$/;"	m	struct:mallinfo	file:
pray_for_items	spec_proc.c	/^int pray_for_items(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
pray_for_items	spec_procs.c	/^int pray_for_items(struct char_data *ch, int cmd, char *arg, struct room_data *rp, int type)$/;"	f
prfree	sunmalloc.c	/^prfree()$/;"	f
print_death_room	act.wizard.c	/^void print_death_room(int rnum, struct room_data *rp, struct string_block *sb)$/;"	f
print_private_room	act.wizard.c	/^void print_private_room(int rnum, struct room_data *rp, struct string_block *sb)$/;"	f
print_room	act.wizard.c	/^void print_room(int rnum, struct room_data *rp, struct string_block *sb)$/;"	f
printhost	dimd.c	/^void printhost(struct in_addr *addr, char *buf)$/;"	f
proc	spec_assign.c	/^  int	(*proc)();$/;"	m	struct:special_proc_entry	file:
process_dimd_input	dimd.c	/^int process_dimd_input(int mud)$/;"	f
process_dimd_output	dimd.c	/^int process_dimd_output(int mud)$/;"	f
process_input	comm.c	/^int process_input(struct descriptor_data *t)$/;"	f
process_output	comm.c	/^int process_output(struct descriptor_data *t)$/;"	f
producing	shop.c	/^	int producing[MAX_PROD];\/* Which item to produce (virtual)      *\/$/;"	m	struct:shop_data	file:
profit_buy	shop.c	/^	float profit_buy;       \/* Factor to multiply cost with.        *\/$/;"	m	struct:shop_data	file:
profit_sell	shop.c	/^	float profit_sell;      \/* Factor to multiply cost with.        *\/$/;"	m	struct:shop_data	file:
prtree	sunmalloc.c	/^prtree(p)$/;"	f	file:
ptr_t	sunmalloc.c	157;"	d	file:
ptrs	mybsd.c	/^void    *ptrs[MAX_SAVE_PTR];$/;"	v
pub_beers	spec_proc.c	/^struct pub_beers {$/;"	s	file:
pub_beers	spec_procs.c	/^struct pub_beers {$/;"	s	file:
puff	spec_proc.c	/^int puff(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
puff	spec_procs.c	/^int puff(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
pulse	comm.c	/^int pulse;$/;"	v
purge_one_room	act.wizard.c	/^void purge_one_room(int rnum, struct room_data *rp, int *range)$/;"	f
push_free_list	mail.c	/^void	push_free_list(long pos)$/;"	f
put_obj_in_store	reception.c	/^void put_obj_in_store(struct obj_data *obj, struct obj_file_u *st)$/;"	f
putchar	sunmalloc.c	1463;"	d	file:
putfreehdr	sunmalloc.c	/^putfreehdr(p)$/;"	f	file:
pwd	pcedit.c	/^	char pwd[11];$/;"	m	struct:char_file_u_new	file:
quad_arg	modify.c	/^void quad_arg(char *arg, int *type, char *name, int *field, char *string)$/;"	f
quest_intro	spec_proc.c	/^char *quest_intro[] = {$/;"	v
quest_intro	spec_procs.c	/^char *quest_intro[] = {$/;"	v
quest_one	spec_proc.c	/^char *quest_one[] = {$/;"	v
quest_one	spec_procs.c	/^char *quest_one[] = {$/;"	v
quest_three	spec_proc.c	/^char *quest_three[] = {$/;"	v
quest_three	spec_procs.c	/^char *quest_three[] = {$/;"	v
quest_two	spec_proc.c	/^char *quest_two[] = {$/;"	v
quest_two	spec_procs.c	/^char *quest_two[] = {$/;"	v
race	pcedit.c	/^	int   race;$/;"	m	struct:char_file_u_new	file:
race_choice	interpreter.c	/^const int race_choice[]= {$/;"	v
radix_head	parser.c	/^struct radix_list radix_head[27];$/;"	v	typeref:struct:radix_list
range_estimate	spec_procs3.c	/^int range_estimate(struct char_data *ch, struct obj_data *o, int type)$/;"	f
range_hit	fight.c	/^int range_hit(struct char_data *ch, struct char_data *targ, int rng, struct$/;"	f
raven_iron_golem	spec_proc3.c	/^int raven_iron_golem(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
raven_iron_golem	spec_procs3.c	/^int raven_iron_golem(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
raw_force_all	comm.c	/^int raw_force_all( char *to_force)$/;"	f
raw_kill	fight.c	/^void raw_kill(struct char_data *ch,int killedbytype)$/;"	f
raw_lock_door	act.move.c	/^void raw_lock_door( struct char_data *ch, $/;"	f
raw_open_door	act.move.c	/^int raw_open_door(struct char_data *ch, int dir)$/;"	f
raw_unlock_door	act.move.c	/^void raw_unlock_door( struct char_data *ch, $/;"	f
read_delete	mail.c	/^char	*read_delete(char *recipient, char *recipient_formatted)$/;"	f
read_from_file	mail.c	/^void	read_from_file(void *buf, int size, long filepos)$/;"	f
read_mobile	db.c	/^struct char_data *read_mobile(int nr, int type)$/;"	f
read_obj_from_file	db.c	/^int read_obj_from_file(struct obj_data *obj, FILE *f)$/;"	f
read_object	db.c	/^struct obj_data *read_object(int nr, int type)$/;"	f
read_object_to_memory	db.c	/^int read_object_to_memory(long vnum)$/;"	f
real_fox	spec_proc2.c	/^int real_fox(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
real_fox	spec_procs2.c	/^int real_fox(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
real_rabbit	spec_proc2.c	/^int real_rabbit(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
real_rabbit	spec_procs2.c	/^int real_rabbit(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
real_time_passed	utility.c	/^struct time_info_data real_time_passed(time_t t2, time_t t1)$/;"	f
realloc	bsd.c	/^realloc(cp, nbytes)$/;"	f
realloc	mybsd.c	/^realloc(cp, nbytes)$/;"	f
realloc	sunmalloc.c	/^realloc(ptr, nbytes)$/;"	f
realloc_srchlen	bsd.c	/^int realloc_srchlen = 4;	\/* 4 should be plenty, -1 =>'s whole list *\/$/;"	v
realloc_srchlen	mybsd.c	/^int realloc_srchlen = 4;        \/* 4 should be plenty, -1 =>'s whole list *\/$/;"	v
reboot	comm.c	/^int reboot = 0;         \/* reboot the game after a shutdown *\/$/;"	v
recep_offer	reception.c	/^bool recep_offer(struct char_data *ch,  struct char_data *receptionist,$/;"	f
receptionist	reception.c	/^int receptionist(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
reclaim	sunmalloc.c	/^reclaim(oldblk, oldsize, flag)$/;"	f	file:
regenerator	spec_proc.c	/^int regenerator( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
regenerator	spec_procs.c	/^int regenerator( struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
remove_trap	skills.c	/^int remove_trap( struct char_data *ch, struct obj_data *trap)$/;"	f
renum_zone_table	db.c	/^void renum_zone_table(int spec_zone)$/;"	f
replace_string	fight.c	/^char *replace_string(char *str, char *weapon, char *weapon_s,$/;"	f
replicant	spec_proc.c	/^int replicant( struct char_data *ch, int cmd, char *arg, struct char_data *mob1, int type)$/;"	f
replicant	spec_procs.c	/^int replicant( struct char_data *ch, int cmd, char *arg, struct char_data *mob1, int type)$/;"	f
reset_char	db.c	/^void reset_char(struct char_data *ch)$/;"	f
reset_time	db.c	/^void reset_time()$/;"	f
reset_zone	db.c	/^void reset_zone(int zone)$/;"	f
rev_dir	constants.c	/^const int rev_dir[] = $/;"	v
right	sunmalloc.c	/^        Freehdr right;                  \/* Right tree pointer *\/$/;"	m	struct:freehdr	file:
right_square	spec_proc3.c	/^struct room_data *right_square(struct room_data *room)$/;"	f
right_square	spec_procs3.c	/^struct room_data *right_square(struct room_data *room)$/;"	f
roll_abilities	act.wizard.c	/^void roll_abilities(struct char_data *ch)$/;"	f
room_bits	constants.c	/^const char *room_bits[] = {$/;"	v
room_count	db.c	/^long room_count=0;$/;"	v
room_db	db.c	/^struct hash_header      room_db;$/;"	v	typeref:struct:hash_header
room_db	db.c	/^struct room_data        *room_db[WORLD_SIZE];$/;"	v	typeref:struct:room_data
room_enter	hash.c	/^int room_enter(struct room_data *rb[], long key, struct room_data *rm)$/;"	f
room_fields	modify.c	/^char *room_fields[] =$/;"	v
room_find	hash.c	/^struct room_data *room_find( struct room_data *room_db[], long key)$/;"	f
room_find_or_create	hash.c	/^struct room_data *room_find_or_create(struct room_data *rb[], long key)$/;"	f
room_iterate	hash.c	/^void room_iterate(struct room_data *rb[], void (*func)(), void *cdata)$/;"	f
room_length	modify.c	/^int room_length[] =$/;"	v
room_msg	act.social.c	/^	char *room_msg[4];   \/* message to room         *\/$/;"	m	struct:pose_type	file:
room_of_object	utility.c	/^int room_of_object(struct obj_data *obj)$/;"	f
room_remove	hash.c	/^int room_remove(struct room_data *rb[], long key)$/;"	f
root_hit	fight.c	/^void root_hit(struct char_data *ch, struct char_data *victim, int type, $/;"	f
roundup	sunmalloc.c	106;"	d	file:
run_the_game	comm.c	/^int run_the_game(int port)$/;"	f
sailor	spec_proc2.c	/^int sailor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
sailor	spec_procs2.c	/^int sailor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
save_all	comm.c	/^void save_all()$/;"	f
save_char	db.c	/^void save_char(struct char_data *ch, sh_int load_room)$/;"	f
save_file	board.c	/^char save_file[NUM_BOARDS][20] = { $/;"	v
save_obj	reception.c	/^void save_obj(struct char_data *ch, struct obj_cost *cost, int delete)$/;"	f
save_room	reception.c	/^void save_room(int room)$/;"	f
saves_spell	spell_parser.c	/^bool saves_spell(struct char_data *ch, sh_int save_type)$/;"	f
saving_throws	spell_parser.c	/^const byte saving_throws[MAX_CLASS][5][ABS_MAX_LVL] = {$/;"	v
say_spell	spell_parser.c	/^say_spell( struct char_data *ch, int si )$/;"	f
sb	act.wizard.c	/^  struct string_block	*sb;$/;"	m	struct:show_room_zone_struct	typeref:struct:show_room_zone_struct::string_block	file:
scan_mail_file	mail.c	/^int	scan_mail_file(void)$/;"	f
scan_number	utility.c	/^int scan_number(char *text, int *rval)$/;"	f
scraps	spec_proc2.c	/^int scraps(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
scraps	spec_procs2.c	/^int scraps(struct char_data *ch, int cmd, char *arg, struct obj_data *obj, int type)$/;"	f
search_block	interpreter.c	/^int search_block(char *arg, char **list, bool exact)$/;"	f
sector_types	constants.c	/^const char *sector_types[] = {$/;"	v
send_to_all	comm.c	/^void send_to_all(char *messg)$/;"	f
send_to_arctic	comm.c	/^void send_to_arctic(char *messg)$/;"	f
send_to_char	comm.c	/^void send_to_char(char *messg, struct char_data *ch)$/;"	f
send_to_desert	comm.c	/^void send_to_desert(char *messg)$/;"	f
send_to_except	comm.c	/^void send_to_except(char *messg, struct char_data *ch)$/;"	f
send_to_out_other	comm.c	/^void send_to_out_other(char *messg)$/;"	f
send_to_outdoor	comm.c	/^void send_to_outdoor(char *messg)$/;"	f
send_to_room	comm.c	/^void send_to_room(char *messg, int room)$/;"	f
send_to_room_except	comm.c	/^void send_to_room_except(char *messg, int room, struct char_data *ch)$/;"	f
send_to_room_except_two	comm.c	/^void send_to_room_except_two$/;"	f
send_to_zone	comm.c	/^void send_to_zone(char *messg, struct char_data *ch)$/;"	f
set_fighting	fight.c	/^void set_fighting(struct char_data *ch, struct char_data *vict)$/;"	f
set_title	limits.c	/^void set_title(struct char_data *ch)$/;"	f
setup_dir	db.c	/^void setup_dir(FILE *fl, long room, int dir)$/;"	f
sex	pcedit.c	/^	byte sex;$/;"	m	struct:char_file_u_new	file:
sgoto	mobact.c	/^void sgoto(char *arg, struct char_data *ch)$/;"	f
shadow	spec_proc.c	/^int shadow(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
shadow	spec_procs.c	/^int shadow(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
shaman	spec_proc.c	/^int shaman(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
shaman	spec_procs.c	/^int shaman(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
sharp	constants.c	/^const int sharp[] = {$/;"	v
shoot	fight.c	/^void shoot( struct char_data *ch, struct char_data *victim)$/;"	f
shop_data	shop.c	/^struct shop_data$/;"	s	file:
shop_index	shop.c	/^struct shop_data *shop_index;$/;"	v	typeref:struct:shop_data
shop_keeper	shop.c	/^int shop_keeper(struct char_data *ch, int cmd, char *arg, char *mob, int type)$/;"	f
shop_multiplier	shop.c	/^float  shop_multiplier = 0;$/;"	v
shop_producing	shop.c	/^int shop_producing(struct obj_data *item, int shop_nr)$/;"	f
shopping_buy	shop.c	/^void shopping_buy( char *arg, struct char_data *ch,$/;"	f
shopping_kill	shop.c	/^void shopping_kill( char *arg, struct char_data *ch,$/;"	f
shopping_list	shop.c	/^void shopping_list( char *arg, struct char_data *ch,$/;"	f
shopping_sell	shop.c	/^void shopping_sell( char *arg, struct char_data *ch,$/;"	f
shopping_value	shop.c	/^void shopping_value( char *arg, struct char_data *ch, $/;"	f
show_char_to_char	act.info.c	/^void show_char_to_char(struct char_data *i, struct char_data *ch, int mode)$/;"	f
show_class_selection	interpreter.c	/^void show_class_selection(struct descriptor_data *d, int r)$/;"	f
show_mult_char_to_char	act.info.c	/^void show_mult_char_to_char(struct char_data *i, struct char_data *ch, int mode, int num)$/;"	f
show_mult_obj_to_char	act.info.c	/^void show_mult_obj_to_char(struct obj_data *object, struct char_data *ch, int mode, int num)$/;"	f
show_obj_to_char	act.info.c	/^void show_obj_to_char(struct obj_data *object, struct char_data *ch, int mode)$/;"	f
show_race_choice	interpreter.c	/^int show_race_choice(struct descriptor_data *d)$/;"	f
show_room_zone	act.wizard.c	/^void show_room_zone(int rnum, struct room_data *rp,$/;"	f
show_room_zone_struct	act.wizard.c	/^struct show_room_zone_struct {$/;"	s	file:
show_string	modify.c	/^void show_string(struct descriptor_data *d, char *input)$/;"	f
shrink	sunmalloc.c	/^shrink(oldblk, oldsize, newsize)$/;"	f	file:
shutdown_request	signals.c	/^void shutdown_request()$/;"	f
side	spec_proc3.c	/^int side = WHITE;  \/* to avoid having to pass side with each function call *\/$/;"	v
side	spec_procs3.c	/^int side = WHITE;  \/* to avoid having to pass side with each function call *\/$/;"	v
signal_setup	signals.c	/^void signal_setup()$/;"	f
singular	act.info.c	/^int singular( struct obj_data *o)$/;"	f
sisyphus	spec_proc.c	/^int sisyphus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
sisyphus	spec_procs.c	/^int sisyphus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
size	sunmalloc.c	/^        uint    size;                   \/* Size of the block *\/$/;"	m	struct:dblk	file:
size	sunmalloc.c	/^        uint    size;$/;"	m	struct:freehdr	file:
skill_fields	modify.c	/^char *skill_fields[] = $/;"	v
skills	pcedit.c	/^	struct char_skill_data skills[MAX_SKILLS];$/;"	m	struct:char_file_u_new	typeref:struct:char_file_u_new::char_skill_data	file:
skip_spaces	spell_parser.c	/^char *skip_spaces(char *string)$/;"	f
slam_into_wall	skills.c	/^void slam_into_wall( struct char_data *ch, struct room_direction_data *exitp)$/;"	f
slip_in_climb	skills.c	/^void slip_in_climb(struct char_data *ch, int dir, int room)$/;"	f
slog	utility.c	/^void slog(char *str)$/;"	f
slow_death	comm.c	/^int slow_death = 0;     \/* Shut her down, Martha, she's sucking mud *\/$/;"	v
smblks	sunmalloc.c	/^        uint    smblks;$/;"	m	struct:mallinfo	file:
snake	spec_proc.c	/^int snake(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
snake	spec_procs.c	/^int snake(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
snake_avt	spec_proc3.c	/^int snake_avt(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
snake_avt	spec_procs3.c	/^int snake_avt(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
snake_guardians	spec_proc3.c	/^int snake_guardians(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
snake_guardians	spec_procs3.c	/^int snake_guardians(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
soap	spec_proc.c	/^int soap(struct char_data *ch, int cmd, char *arg, struct obj_data *tobj, int type)$/;"	f
soap	spec_procs.c	/^int soap(struct char_data *ch, int cmd, char *arg, struct obj_data *tobj, int type)$/;"	f
soc_mess_list	act.social.c	/^} *soc_mess_list = 0;$/;"	v	typeref:struct:social_messg
social_messg	act.social.c	/^struct social_messg$/;"	s	file:
social_type	spec_proc.c	/^struct social_type {$/;"	s	file:
social_type	spec_procs.c	/^struct social_type {$/;"	s	file:
sold_here	spec_proc.c	/^struct pub_beers sold_here[] = {$/;"	v	typeref:struct:pub_beers
sold_here	spec_procs.c	/^struct pub_beers sold_here[] = {$/;"	v	typeref:struct:pub_beers
speaking	pcedit.c	/^	int speaking;		\/* language currently speakin in *\/$/;"	m	struct:char_file_u_new	file:
special	interpreter.c	/^int special(struct char_data *ch, int cmd, char *arg)$/;"	f
special_proc_entry	spec_assign.c	/^struct special_proc_entry {$/;"	s	file:
special_user_flags	constants.c	/^const char *special_user_flags[] =$/;"	v
specific_axe	pcedit.c	/^void specific_axe(int orig_ammt, char *name) {$/;"	f
spell	spells2.c	/^  int	vnum, spell[MAX_BREATHS];$/;"	m	struct:pbreath	file:
spell_Create_Monster	magic2.c	/^void spell_Create_Monster(byte level, struct char_data *ch,$/;"	f
spell_acid_blast	magic2.c	/^void spell_acid_blast(byte level, struct char_data *ch,$/;"	f
spell_acid_breath	magic.c	/^void spell_acid_breath(byte level, struct char_data *ch,$/;"	f
spell_aid	magic3.c	/^void spell_aid(byte level, struct char_data *ch,$/;"	f
spell_animal_friendship	magic3.c	/^void spell_animal_friendship(byte level, struct char_data *ch,$/;"	f
spell_animal_growth	magic3.c	/^void spell_animal_growth(byte level, struct char_data *ch,$/;"	f
spell_animal_summon	magic3.c	/^void spell_animal_summon(byte level, struct char_data *ch,$/;"	f
spell_animate_dead	magic2.c	/^void spell_animate_dead(byte level, struct char_data *ch,$/;"	f
spell_animate_rock	magic3.c	/^void spell_animate_rock(byte level, struct char_data *ch,$/;"	f
spell_anti_magic_shell	magic.c	/^void spell_anti_magic_shell(byte level, struct char_data *ch,$/;"	f
spell_armor	magic.c	/^void spell_armor(byte level, struct char_data *ch,$/;"	f
spell_astral_walk	magic.c	/^void spell_astral_walk(byte level, struct char_data *ch,$/;"	f
spell_barkskin	magic3.c	/^void spell_barkskin(byte level, struct char_data *ch,$/;"	f
spell_bless	magic.c	/^void spell_bless(byte level, struct char_data *ch,$/;"	f
spell_blindness	magic.c	/^void spell_blindness(byte level, struct char_data *ch,$/;"	f
spell_burning_hands	magic.c	/^void spell_burning_hands(byte level, struct char_data *ch,$/;"	f
spell_cacaodemon	magic2.c	/^void spell_cacaodemon(byte level, struct char_data *ch,$/;"	f
spell_call_lightning	magic.c	/^void spell_call_lightning(byte level, struct char_data *ch,$/;"	f
spell_calm	magic2.c	/^void spell_calm(byte level, struct char_data *ch,$/;"	f
spell_cause_critical	magic2.c	/^void spell_cause_critical(byte level, struct char_data *ch,$/;"	f
spell_cause_light	magic2.c	/^void spell_cause_light(byte level, struct char_data *ch,$/;"	f
spell_cause_serious	magic2.c	/^void spell_cause_serious(byte level, struct char_data *ch,$/;"	f
spell_chain_lightn	magic3.c	/^void spell_chain_lightn(byte level, struct char_data *ch,$/;"	f
spell_changestaff	magic3.c	/^void spell_changestaff(byte level, struct char_data *ch,$/;"	f
spell_charm_monster	magic.c	/^void spell_charm_monster(byte level, struct char_data *ch,$/;"	f
spell_charm_person	magic.c	/^void spell_charm_person(byte level, struct char_data *ch,$/;"	f
spell_charm_veggie	magic3.c	/^void spell_charm_veggie(byte level, struct char_data *ch,$/;"	f
spell_chill_touch	magic.c	/^void spell_chill_touch(byte level, struct char_data *ch,$/;"	f
spell_clone	magic.c	/^void spell_clone(byte level, struct char_data *ch,$/;"	f
spell_colour_spray	magic.c	/^void spell_colour_spray(byte level, struct char_data *ch,$/;"	f
spell_commune	magic3.c	/^void spell_commune(byte level, struct char_data *ch,$/;"	f
spell_comp_languages	magic.c	/^void spell_comp_languages(byte level, struct char_data *ch,$/;"	f
spell_cone_of_cold	magic2.c	/^void spell_cone_of_cold(byte level, struct char_data *ch,$/;"	f
spell_conjure_elemental	magic2.c	/^void spell_conjure_elemental(byte level, struct char_data *ch,$/;"	f
spell_cont_light	magic2.c	/^void spell_cont_light(byte level, struct char_data *ch,$/;"	f
spell_control_weather	magic.c	/^void spell_control_weather(byte level, struct char_data *ch,$/;"	f
spell_create_food	magic.c	/^void spell_create_food(byte level, struct char_data *ch,$/;"	f
spell_create_water	magic.c	/^void spell_create_water(byte level, struct char_data *ch,$/;"	f
spell_creeping_death	magic3.c	/^void spell_creeping_death(byte level, struct char_data *ch,$/;"	f
spell_cure_blind	magic.c	/^void spell_cure_blind(byte level, struct char_data *ch,$/;"	f
spell_cure_critic	magic.c	/^void spell_cure_critic(byte level, struct char_data *ch,$/;"	f
spell_cure_light	magic.c	/^void spell_cure_light(byte level, struct char_data *ch,$/;"	f
spell_cure_serious	magic2.c	/^void spell_cure_serious(byte level, struct char_data *ch,$/;"	f
spell_curse	magic.c	/^void spell_curse(byte level, struct char_data *ch,$/;"	f
spell_desc	constants.c	/^const char *spell_desc[] = {$/;"	v
spell_detect_charm	magic2.c	/^void spell_detect_charm(byte level, struct char_data *ch,$/;"	f
spell_detect_evil	magic.c	/^void spell_detect_evil(byte level, struct char_data *ch,$/;"	f
spell_detect_invisibility	magic.c	/^void spell_detect_invisibility(byte level, struct char_data *ch,$/;"	f
spell_detect_magic	magic.c	/^void spell_detect_magic(byte level, struct char_data *ch,$/;"	f
spell_detect_poison	magic.c	/^void spell_detect_poison(byte level, struct char_data *ch, struct char_data *victim, struct obj_data *obj)$/;"	f
spell_detect_poison	magic.c	/^void spell_detect_poison(byte level, struct char_data *ch,$/;"	f
spell_disintergrate	magic.c	/^void spell_disintergrate(byte level, struct char_data *ch,  struct char_data *victim, struct obj_data *obj)$/;"	f
spell_dispel_evil	magic.c	/^void spell_dispel_evil(byte level, struct char_data *ch,$/;"	f
spell_dispel_good	magic2.c	/^void spell_dispel_good(byte level, struct char_data *ch,$/;"	f
spell_dispel_magic	magic2.c	/^void spell_dispel_magic(byte level, struct char_data *ch,$/;"	f
spell_dragon_ride	magic3.c	/^void spell_dragon_ride(byte level, struct char_data *ch,$/;"	f
spell_dust_devil	magic3.c	/^void spell_dust_devil(byte level, struct char_data *ch,$/;"	f
spell_earthquake	magic.c	/^void spell_earthquake(byte level, struct char_data *ch,$/;"	f
spell_elemental_summoning	magic3.c	/^void spell_elemental_summoning(byte level, struct char_data *ch,$/;"	f
spell_enchant_armor	magic.c	/^void spell_enchant_armor(byte level, struct char_data *ch,$/;"	f
spell_enchant_weapon	magic.c	/^void spell_enchant_weapon(byte level, struct char_data *ch,$/;"	f
spell_energy_drain	magic.c	/^void spell_energy_drain(byte level, struct char_data *ch,$/;"	f
spell_entangle	magic3.c	/^void spell_entangle(byte level, struct char_data *ch,$/;"	f
spell_faerie_fire	magic2.c	/^void spell_faerie_fire (byte level, struct char_data *ch,$/;"	f
spell_faerie_fog	magic2.c	/^void spell_faerie_fog (byte level, struct char_data *ch,$/;"	f
spell_familiar	magic3.c	/^void spell_familiar(byte level, struct char_data *ch,$/;"	f
spell_fear	magic2.c	/^void spell_fear(byte level, struct char_data *ch,$/;"	f
spell_feeblemind	magic3.c	/^void spell_feeblemind(byte level, struct char_data *ch,$/;"	f
spell_find_traps	magic3.c	/^void spell_find_traps(byte level, struct char_data *ch,$/;"	f
spell_fire_breath	magic.c	/^void spell_fire_breath(byte level, struct char_data *ch,$/;"	f
spell_fireball	magic.c	/^void spell_fireball(byte level, struct char_data *ch,$/;"	f
spell_fireshield	magic.c	/^void spell_fireshield(byte level, struct char_data *ch,$/;"	f
spell_firestorm	magic3.c	/^void spell_firestorm(byte level, struct char_data *ch,$/;"	f
spell_flame_blade	magic3.c	/^void spell_flame_blade(byte level, struct char_data *ch,$/;"	f
spell_flamestrike	magic2.c	/^void spell_flamestrike(byte level, struct char_data *ch,$/;"	f
spell_fly	magic2.c	/^void spell_fly(byte level, struct char_data *ch,$/;"	f
spell_fly_group	magic2.c	/^void spell_fly_group(byte level, struct char_data *ch,$/;"	f
spell_frost_breath	magic.c	/^void spell_frost_breath(byte level, struct char_data *ch,$/;"	f
spell_gas_breath	magic.c	/^void spell_gas_breath(byte level, struct char_data *ch,$/;"	f
spell_geyser	magic2.c	/^void spell_geyser(byte level, struct char_data *ch,$/;"	f
spell_globe_darkness	magic2.c	/^void spell_globe_darkness(byte level, struct char_data *ch,$/;"	f
spell_globe_major_inv	magic.c	/^void spell_globe_major_inv(byte level, struct char_data *ch,$/;"	f
spell_globe_minor_inv	magic.c	/^void spell_globe_minor_inv(byte level, struct char_data *ch,$/;"	f
spell_golem	magic3.c	/^void spell_golem(byte level, struct char_data *ch,$/;"	f
spell_goodberry	magic3.c	/^void spell_goodberry(byte level, struct char_data *ch,$/;"	f
spell_green_slime	magic2.c	/^void spell_green_slime(byte level, struct char_data *ch,$/;"	f
spell_gust_of_wind	magic3.c	/^void spell_gust_of_wind(byte level, struct char_data *ch,$/;"	f
spell_harm	magic.c	/^void spell_harm(byte level, struct char_data *ch,$/;"	f
spell_haste	magic3.c	/^void spell_haste(byte level, struct char_data *ch,$/;"	f
spell_heal	magic.c	/^void spell_heal(byte level, struct char_data *ch,$/;"	f
spell_heat_stuff	magic3.c	/^void spell_heat_stuff(byte level, struct char_data *ch,$/;"	f
spell_heroes_feast	magic2.c	/^void spell_heroes_feast(byte level, struct char_data *ch,$/;"	f
spell_holy_word	magic2.c	/^void spell_holy_word(byte level, struct char_data *ch,$/;"	f
spell_holyword	magic3.c	/^void spell_holyword(byte level, struct char_data *ch,$/;"	f
spell_ice_storm	magic2.c	/^void spell_ice_storm(byte level, struct char_data *ch,$/;"	f
spell_identify	magic.c	/^void spell_identify(byte level, struct char_data *ch,$/;"	f
spell_improved_identify	magic2.c	/^void spell_improved_identify(byte level, struct char_data *ch,$/;"	f
spell_incendiary_cloud	magic.c	/^void spell_incendiary_cloud(byte level, struct char_data *ch,struct char_data *victim, struct obj_data *obj)$/;"	f
spell_info	spell_parser.c	/^struct spell_info_type spell_info[MAX_SPL_LIST];$/;"	v	typeref:struct:spell_info_type
spell_infravision	magic2.c	/^void spell_infravision(byte level, struct char_data *ch,$/;"	f
spell_insect_growth	magic3.c	/^void spell_insect_growth(byte level, struct char_data *ch,$/;"	f
spell_invis_group	magic2.c	/^void spell_invis_group(byte level, struct char_data *ch,$/;"	f
spell_invis_to_animals	magic3.c	/^void spell_invis_to_animals(byte level, struct char_data *ch,$/;"	f
spell_invisibility	magic.c	/^void spell_invisibility(byte level, struct char_data *ch,$/;"	f
spell_know_alignment	magic2.c	/^void spell_know_alignment(byte level, struct char_data *ch,$/;"	f
spell_know_monster	magic3.c	/^void spell_know_monster(byte level, struct char_data *ch,$/;"	f
spell_light	magic2.c	/^void spell_light(byte level, struct char_data *ch,$/;"	f
spell_lightning_bolt	magic.c	/^void spell_lightning_bolt(byte level, struct char_data *ch,$/;"	f
spell_lightning_breath	magic.c	/^void spell_lightning_breath(byte level, struct char_data *ch,$/;"	f
spell_locate_object	magic.c	/^void spell_locate_object(byte level, struct char_data *ch,$/;"	f
spell_magic_missile	magic.c	/^void spell_magic_missile(byte level, struct char_data *ch,$/;"	f
spell_major_create	magic2.c	/^void spell_major_create(byte level, struct char_data *ch,$/;"	f
spell_mana	magic2.c	/^void spell_mana(byte level, struct char_data *ch,$/;"	f
spell_meteor_swarm	magic2.c	/^void spell_meteor_swarm(byte level, struct char_data *ch,$/;"	f
spell_minor_create	magic2.c	/^void spell_minor_create(byte level, struct char_data *ch,$/;"	f
spell_mount	magic3.c	/^void spell_mount(byte level, struct char_data *ch,$/;"	f
spell_paralyze	magic2.c	/^void spell_paralyze(byte level, struct char_data *ch,$/;"	f
spell_poison	magic.c	/^void spell_poison(byte level, struct char_data *ch,$/;"	f
spell_poison_cloud	magic2.c	/^void spell_poison_cloud(byte level, struct char_data *ch,$/;"	f
spell_poly_self	magic2.c	/^void spell_poly_self(byte level, struct char_data *ch,$/;"	f
spell_portal	magic3.c	/^void spell_portal(byte level, struct char_data *ch,$/;"	f
spell_prismatic_spray	magic.c	/^void spell_prismatic_spray(byte level, struct char_data *ch,$/;"	f
spell_prot_cold	magic2.c	/^void spell_prot_cold(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath	magic2.c	/^void spell_prot_dragon_breath(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath_acid	magic2.c	/^void spell_prot_dragon_breath_acid(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath_elec	magic2.c	/^void spell_prot_dragon_breath_elec(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath_fire	magic2.c	/^void spell_prot_dragon_breath_fire(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath_frost	magic2.c	/^void spell_prot_dragon_breath_frost(byte level, struct char_data *ch,$/;"	f
spell_prot_dragon_breath_gas	magic2.c	/^void spell_prot_dragon_breath_gas(byte level, struct char_data *ch,$/;"	f
spell_prot_elec	magic2.c	/^void spell_prot_elec(byte level, struct char_data *ch,$/;"	f
spell_prot_energy	magic2.c	/^void spell_prot_energy(byte level, struct char_data *ch,$/;"	f
spell_prot_energy_drain	magic2.c	/^void spell_prot_energy_drain(byte level, struct char_data *ch,$/;"	f
spell_prot_fire	magic2.c	/^void spell_prot_fire(byte level, struct char_data *ch,$/;"	f
spell_protection_from_evil	magic.c	/^void spell_protection_from_evil(byte level, struct char_data *ch,$/;"	f
spell_protection_from_evil_group	magic.c	/^void spell_protection_from_evil_group(byte level, struct char_data *ch,$/;"	f
spell_pword_blind	magic3.c	/^void spell_pword_blind(byte level, struct char_data *ch,$/;"	f
spell_pword_kill	magic3.c	/^void spell_pword_kill(byte level, struct char_data *ch,$/;"	f
spell_refresh	magic2.c	/^void spell_refresh(byte level, struct char_data *ch,$/;"	f
spell_reincarnate	magic3.c	/^void spell_reincarnate(byte level, struct char_data *ch,$/;"	f
spell_remove_curse	magic.c	/^void spell_remove_curse(byte level, struct char_data *ch,$/;"	f
spell_remove_paralysis	magic2.c	/^void spell_remove_paralysis(byte level, struct char_data *ch,$/;"	f
spell_remove_poison	magic.c	/^void spell_remove_poison(byte level, struct char_data *ch,$/;"	f
spell_resurrection	magic2.c	/^void spell_resurrection(byte level, struct char_data *ch,$/;"	f
spell_sanctuary	magic.c	/^void spell_sanctuary(byte level, struct char_data *ch,$/;"	f
spell_scare	magic3.c	/^void spell_scare(byte level, struct char_data *ch,$/;"	f
spell_second_wind	magic2.c	/^void spell_second_wind(byte level, struct char_data *ch,$/;"	f
spell_sending	magic2.c	/^void spell_sending(byte level, struct char_data *ch,$/;"	f
spell_sense_life	magic.c	/^void spell_sense_life(byte level, struct char_data *ch,$/;"	f
spell_shield	magic2.c	/^void spell_shield(byte level, struct char_data *ch,$/;"	f
spell_shillelagh	magic3.c	/^void spell_shillelagh(byte level, struct char_data *ch,$/;"	f
spell_shocking_grasp	magic.c	/^void spell_shocking_grasp(byte level, struct char_data *ch,$/;"	f
spell_silence	magic3.c	/^void spell_silence(byte level, struct char_data *ch,$/;"	f
spell_sleep	magic.c	/^void spell_sleep(byte level, struct char_data *ch,$/;"	f
spell_slow	magic3.c	/^void spell_slow(byte level, struct char_data *ch,$/;"	f
spell_slow_poison	magic3.c	/^void spell_slow_poison(byte level, struct char_data *ch,$/;"	f
spell_snare	magic3.c	/^void spell_snare(byte level, struct char_data *ch,$/;"	f
spell_speak_with_plants	magic3.c	/^void spell_speak_with_plants(byte level, struct char_data *ch,$/;"	f
spell_stone_skin	magic2.c	/^void spell_stone_skin(byte level, struct char_data *ch,$/;"	f
spell_strength	magic.c	/^void spell_strength(byte level, struct char_data *ch,$/;"	f
spell_succor	magic2.c	/^void spell_succor(byte level, struct char_data *ch,$/;"	f
spell_summon	magic.c	/^void spell_summon(byte level, struct char_data *ch,$/;"	f
spell_sunray	magic3.c	/^void spell_sunray(byte level, struct char_data *ch,$/;"	f
spell_teleport	magic.c	/^void spell_teleport(byte level, struct char_data *ch,$/;"	f
spell_teleport_wo_error	magic3.c	/^void spell_teleport_wo_error(byte level, struct char_data *ch,$/;"	f
spell_track	magic2.c	/^void spell_track(byte level, struct char_data *ch,$/;"	f
spell_transport_via_plant	magic3.c	/^void spell_transport_via_plant(byte level, struct char_data *ch,$/;"	f
spell_travelling	magic3.c	/^void spell_travelling(byte level, struct char_data *ch,$/;"	f
spell_tree	magic3.c	/^void spell_tree(byte level, struct char_data *ch,$/;"	f
spell_tree_travel	magic3.c	/^void spell_tree_travel(byte level, struct char_data *ch,$/;"	f
spell_true_seeing	magic2.c	/^void spell_true_seeing(byte level, struct char_data *ch,$/;"	f
spell_turn	magic2.c	/^void spell_turn(byte level, struct char_data *ch,$/;"	f
spell_unholy_word	magic2.c	/^void spell_unholy_word(byte level, struct char_data *ch,$/;"	f
spell_veggie_growth	magic3.c	/^void spell_veggie_growth(byte level, struct char_data *ch,$/;"	f
spell_ventriloquate	magic.c	/^void spell_ventriloquate(byte level, struct char_data *ch,$/;"	f
spell_warp_weapon	magic3.c	/^void spell_warp_weapon(byte level, struct char_data *ch,$/;"	f
spell_water_breath	magic2.c	/^void spell_water_breath(byte level, struct char_data *ch,$/;"	f
spell_weakness	magic2.c	/^void spell_weakness(byte level, struct char_data *ch,$/;"	f
spell_wear_off_msg	constants.c	/^const char *spell_wear_off_msg[] = {$/;"	v
spell_wear_off_room_msg	constants.c	/^const char *spell_wear_off_room_msg[] = {$/;"	v
spell_wear_off_soon_msg	constants.c	/^const char *spell_wear_off_soon_msg[] = {$/;"	v
spell_wear_off_soon_room_msg	constants.c	/^const char *spell_wear_off_soon_room_msg[] = {$/;"	v
spell_web	magic2.c	/^void spell_web(byte level, struct char_data *ch,$/;"	f
spell_wizard_eye	magic.c	/^void spell_wizard_eye(byte level, struct char_data *ch,$/;"	f
spell_word_of_recall	magic.c	/^void spell_word_of_recall(byte level, struct char_data *ch,$/;"	f
spello	spell_parser.c	/^void spello(int nr, byte beat, byte pos, $/;"	f
spells	spell_parser.c	/^char *spells[]=$/;"	v
spells_to_learn	pcedit.c	/^	byte spells_to_learn;  $/;"	m	struct:char_file_u_new	file:
spit_out_remains	pcedit.c	/^int spit_out_remains(char *argv[], int ammt) {$/;"	f
split_string	handler.c	/^int split_string(char *str, char *sep, char **argv)$/;"	f
sprintbit	utility.c	/^void sprintbit(unsigned long vektor, char *names[], char *result)$/;"	f
sprinttype	utility.c	/^void sprinttype(int type, char *names[], char *result)$/;"	f
square_contains_enemy	spec_proc3.c	/^struct char_data *square_contains_enemy(struct room_data *square)$/;"	f
square_contains_enemy	spec_procs3.c	/^struct char_data *square_contains_enemy(struct room_data *square)$/;"	f
square_contains_friend	spec_proc3.c	/^int square_contains_friend(struct room_data *square)$/;"	f
square_contains_friend	spec_procs3.c	/^int square_contains_friend(struct room_data *square)$/;"	f
square_empty	spec_proc3.c	/^int square_empty(struct room_data *square)$/;"	f
square_empty	spec_procs3.c	/^int square_empty(struct room_data *square)$/;"	f
startblank	act.wizard.c	/^  int	startblank, lastblank;$/;"	m	struct:show_room_zone_struct	file:
startroom	pcedit.c	/^	int startroom;  \/* which room the player should start in *\/$/;"	m	struct:char_file_u_new	file:
state	spec_proc2.c	/^   int state;$/;"	m	struct:T1000_data	file:
state	spec_procs2.c	/^   int state;$/;"	m	struct:T1000_data	file:
status	spec_proc.c	/^  int *status;$/;"	m	struct:memory	file:
status	spec_procs.c	/^  int *status;$/;"	m	struct:memory	file:
stderr	sunmalloc.c	1465;"	d	file:
stop_fighting	fight.c	/^void stop_fighting(struct char_data *ch)$/;"	f
stop_follower	spell_parser.c	/^void stop_follower(struct char_data *ch)$/;"	f
store_mail	mail.c	/^void	store_mail(char *to, char *from, char *message_pointer)$/;"	f
store_to_char	db.c	/^void store_to_char(struct char_file_u *st, struct char_data *ch)$/;"	f
str2ansi	comm.c	/^void str2ansi(char *p2, char *p1, int start, int stop)$/;"	f
str_app	constants.c	/^const struct str_app_type str_app[31] = {$/;"	v	typeref:struct:str_app_type
str_cmp	utility.c	/^int str_cmp(char *arg1, char *arg2)$/;"	f
str_cmp2	utility.c	/^int str_cmp2(char *arg1, char *arg2)$/;"	f
strahd_vampire	spec_proc3.c	/^int strahd_vampire(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
strahd_vampire	spec_procs3.c	/^int strahd_vampire(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
strahd_zombie	spec_proc3.c	/^int strahd_zombie(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
strahd_zombie	spec_procs3.c	/^int strahd_zombie(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
strdup	bsd.c	/^strdup(str)$/;"	f
strdup	mybsd.c	/^strdup(str)$/;"	f
string_add	modify.c	/^void string_add(struct descriptor_data *d, char *str)$/;"	f
string_fields	modify.c	/^char *string_fields[] =$/;"	v
strn_cmp	utility.c	/^int strn_cmp(char *arg1, char *arg2, int n)$/;"	f
strstr	bsd.c	/^strstr(s, find)$/;"	f
strstr	mybsd.c	/^strstr(s, find)$/;"	f
switch_light	weather.c	/^void switch_light(byte why)$/;"	f
syllable	spell_parser.c	/^struct syllable {$/;"	s	file:
syls	spell_parser.c	/^struct syllable syls[] = {$/;"	v	typeref:struct:syllable
system_flag_types	constants.c	/^const char *system_flag_types [] = {$/;"	v
talks	pcedit.c	/^	bool talks[MAX_TOUNGE];$/;"	m	struct:char_file_u_new	file:
temper1	shop.c	/^	int temper1;           	\/* How does keeper react if no money    *\/$/;"	m	struct:shop_data	file:
temper2	shop.c	/^	int temper2;           	\/* How does keeper react when attacked  *\/$/;"	m	struct:shop_data	file:
temple_labrynth_liar	spec_proc.c	/^int temple_labrynth_liar(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
temple_labrynth_liar	spec_procs.c	/^int temple_labrynth_liar(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
temple_labrynth_sentry	spec_proc.c	/^int temple_labrynth_sentry(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
temple_labrynth_sentry	spec_procs.c	/^int temple_labrynth_sentry(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
testlog	comm.c	/^void testlog(char *msg)$/;"	f
text	board.c	/^  char *text;$/;"	m	struct:message	file:
thaco	constants.c	/^const int thaco[MAX_CLASS][ABS_MAX_LVL] = {$/;"	v
thief	spec_proc.c	/^int thief(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
thief	spec_procs.c	/^int thief(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
throw_object	act.off.c	/^void throw_object(struct obj_data *o, int dir, int from)$/;"	f
throw_weapon	act.off.c	/^void throw_weapon(struct obj_data *o, int dir, struct char_data *targ, $/;"	f
tics	comm.c	/^int tics = 0;        \/* for extern checkpointing *\/$/;"	v
time_info	db.c	/^struct time_info_data time_info;        \/* the infomation about the time   *\/$/;"	v	typeref:struct:time_info_data
time_print	pcedit.c	/^char *time_print(long et)$/;"	f
timediff	comm.c	/^struct timeval timediff(struct timeval *a, struct timeval *b)$/;"	f
timnus	spec_proc3.c	/^int timnus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
timnus	spec_procs3.c	/^int timnus(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
title	board.c	/^  char *title;$/;"	m	struct:message	file:
title	pcedit.c	/^	char title[80];$/;"	m	struct:char_file_u_new	file:
titles	constants.c	/^const struct title_type titles[MAX_CLASS][ABS_MAX_LVL] = {$/;"	v	typeref:struct:title_type
too_many_followers	utility.c	/^int too_many_followers(struct char_data *ch) $/;"	f
top	act.wizard.c	/^  int	bottom, top;$/;"	m	struct:show_room_zone_struct	file:
top_of_alloc_mobt	db.c	/^int top_of_alloc_mobt = 0;$/;"	v
top_of_alloc_objt	db.c	/^int top_of_alloc_objt = 0;$/;"	v
top_of_comp	mobact.c	/^int top_of_comp = 0;$/;"	v
top_of_helpt	db.c	/^int top_of_helpt;                     \/* top of help index table         *\/$/;"	v
top_of_mobt	db.c	/^int top_of_mobt = 0;                  \/* top of mobile index table       *\/$/;"	v
top_of_objt	db.c	/^int top_of_objt = 0;                  \/* top of object index table       *\/$/;"	v
top_of_p_file	db.c	/^int top_of_p_file = 0;$/;"	v
top_of_p_table	db.c	/^int top_of_p_table = 0;               \/* ref to top of table             *\/$/;"	v
top_of_scripts	db.c	/^int top_of_scripts = 0;$/;"	v
top_of_sort_mobt	db.c	/^int top_of_sort_mobt = 0;$/;"	v
top_of_sort_objt	db.c	/^int top_of_sort_objt = 0;$/;"	v
top_of_wizhelpt	db.c	/^int top_of_wizhelpt;                  \/* top of wiz help index table         *\/$/;"	v
top_of_world	db.c	/^int top_of_world = 0;                 \/* ref to the top element of world *\/$/;"	v
top_of_zone_table	db.c	/^int top_of_zone_table = 0;$/;"	v
tormentor	spec_proc.c	/^int tormentor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
tormentor	spec_procs.c	/^int tormentor(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
total_bc	db.c	/^long total_bc = 0;$/;"	v
total_mbc	db.c	/^long total_mbc=0;$/;"	v
total_obc	db.c	/^long total_obc=0;$/;"	v
track	skills.c	/^int track( struct char_data *ch, struct char_data *vict)$/;"	f
trade_with	shop.c	/^int trade_with(struct obj_data *item, int shop_nr)$/;"	f
trapper	spec_proc.c	/^int trapper(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
trapper	spec_procs.c	/^int trapper(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
treeoverhead	sunmalloc.c	/^        uint    treeoverhead;$/;"	m	struct:mallinfo	file:
trogcook	spec_proc.c	/^int trogcook(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
trogcook	spec_procs.c	/^int trogcook(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
troguard	spec_proc.c	/^int troguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
troguard	spec_procs.c	/^int troguard(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
troll_class_choice	interpreter.c	/^const int troll_class_choice[]= {$/;"	v
true	sunmalloc.c	/^typedef enum {false,true} bool;$/;"	e	enum:__anon3	file:
type	shop.c	/^	byte type[MAX_TRADE];   \/* Which item to trade.                 *\/$/;"	m	struct:shop_data	file:
uint	sunmalloc.c	/^typedef unsigned int    uint;$/;"	t	file:
unequip_char	handler.c	/^struct obj_data *unequip_char(struct char_data *ch, int pos)$/;"	f
uordbytes	sunmalloc.c	/^        long    uordbytes;$/;"	m	struct:mallinfo	file:
update_char_objects	handler.c	/^void update_char_objects( struct char_data *ch )$/;"	f
update_file	reception.c	/^void update_file(struct char_data *ch, struct obj_file_u *st)$/;"	f
update_obj_file	reception.c	/^void update_obj_file()$/;"	f
update_object	handler.c	/^void update_object( struct obj_data *obj, int use){$/;"	f
update_pos	fight.c	/^void update_pos( struct char_data *victim )$/;"	f
update_time	db.c	/^void update_time()$/;"	f
use_breath_weapon	spec_proc2.c	/^int use_breath_weapon(struct char_data *ch, struct char_data *target,$/;"	f
use_breath_weapon	spec_procs2.c	/^int use_breath_weapon(struct char_data *ch, struct char_data *target,$/;"	f
user_flags	pcedit.c	/^	long user_flags;	\/* no-delete,use ansi,etc... *\/$/;"	m	struct:char_file_u_new	file:
vampire	spec_proc.c	/^int vampire(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
vampire	spec_procs.c	/^int vampire(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
vict	spec_proc2.c	/^   struct char_data *vict;$/;"	m	struct:T1000_data	typeref:struct:T1000_data::char_data	file:
vict	spec_procs2.c	/^   struct char_data *vict;$/;"	m	struct:T1000_data	typeref:struct:T1000_data::char_data	file:
vict_found	act.social.c	/^	char *vict_found;$/;"	m	struct:social_messg	file:
victim	skills.c	/^  struct char_data **victim;$/;"	m	struct:hunting_data	typeref:struct:hunting_data::char_data	file:
village_princess	spec_proc3.c	/^int village_princess(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
village_princess	spec_procs3.c	/^int village_princess(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
virgin_sac	spec_proc3.c	/^int virgin_sac(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
virgin_sac	spec_procs3.c	/^int virgin_sac(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
vnum	spec_assign.c	/^  int	vnum;$/;"	m	struct:special_proc_entry	file:
vnum	spells2.c	/^  int	vnum, spell[MAX_BREATHS];$/;"	m	struct:pbreath	file:
wear	act.obj2.c	/^void wear(struct char_data *ch, struct obj_data *obj_object, long keyword)$/;"	f
wear_bits	constants.c	/^const char *wear_bits[] = {$/;"	v
weather_and_time	weather.c	/^void weather_and_time(int mode)$/;"	f
weather_change	weather.c	/^void weather_change()$/;"	f
weather_info	db.c	/^struct weather_data weather_info;       \/* the infomation about the weather *\/$/;"	v	typeref:struct:weather_data
web_slinger	spec_proc.c	/^int web_slinger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
web_slinger	spec_procs.c	/^int web_slinger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
weekdays	constants.c	/^const char *weekdays[7] = { $/;"	v
weight	pcedit.c	/^	unsigned int weight;$/;"	m	struct:char_file_u_new	file:
weight	sunmalloc.c	105;"	d	file:
weight_change_object	act.obj2.c	/^void weight_change_object(struct obj_data *obj, int weight)$/;"	f
where	constants.c	/^const char *where[] = {$/;"	v
which_number_mobile	act.info.c	/^int which_number_mobile(struct char_data *ch, struct char_data *mob)$/;"	f
winger	spec_proc3.c	/^int winger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
winger	spec_procs3.c	/^int winger(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
wis_app	constants.c	/^struct wis_app_type wis_app[26] = {$/;"	v	typeref:struct:wis_app_type
with_who	shop.c	/^	int with_who;		\/* Who does the shop trade with?	*\/$/;"	m	struct:shop_data	file:
wizhelp_fl	db.c	/^     *wizhelp_fl;                     \/* file for wizhelp *\/$/;"	v
wizhelp_index	db.c	/^struct help_index_element *wizhelp_index = 0;$/;"	v	typeref:struct:help_index_element
wizlist	db.c	/^char wizlist[MAX_STRING_LENGTH*2];      \/* the wizlist                     *\/$/;"	v
wizs	db.c	/^struct wizs {$/;"	s	file:
wmotd	db.c	/^char wmotd[MAX_STRING_LENGTH];$/;"	v
world	modify.c	/^struct room_data *world;              \/* dyn alloc'ed array of rooms     *\/$/;"	v	typeref:struct:room_data
wraith	spec_proc.c	/^int wraith(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
wraith	spec_procs.c	/^int wraith(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
write_char_extra	reception.c	/^void write_char_extra( struct char_data *ch)$/;"	f
write_obj_to_file	db.c	/^int write_obj_to_file(struct obj_data *obj, FILE *f)$/;"	f
write_to_descriptor	comm.c	/^int write_to_descriptor( int desc, char *txt)$/;"	f
write_to_descriptor	comm.c	/^int write_to_descriptor(int desc, char *txt)$/;"	f
write_to_file	mail.c	/^void	write_to_file(void *buf, int size, long filepos)$/;"	f
write_to_output	comm.c	/^void write_to_output(char *txt, struct descriptor_data *t)$/;"	f
write_to_q	comm.c	/^void write_to_q(char *txt, struct txt_q *queue)$/;"	f
writetofile	comm.c	/^void writetofile(char *msg)$/;"	f
yesno	spec_proc2.c	/^  int   yesno; \/* 1 0 *\/$/;"	m	struct:breath_victim	file:
yesno	spec_procs2.c	/^  int	yesno; \/* 1 0 *\/$/;"	m	struct:breath_victim	file:
zero_bank	pcedit.c	/^void zero_bank()$/;"	f
zero_rent	reception.c	/^void zero_rent( struct char_data *ch) $/;"	f
zm_init_combat	spec_proc.c	/^zm_init_combat(struct char_data *zmaster, struct char_data *target)$/;"	f
zm_init_combat	spec_procs.c	/^zm_init_combat(struct char_data *zmaster, struct char_data *target)$/;"	f
zm_kill_aggressor	spec_proc.c	/^int zm_kill_aggressor(struct char_data *zmaster)$/;"	f
zm_kill_aggressor	spec_procs.c	/^int zm_kill_aggressor(struct char_data *zmaster)$/;"	f
zm_kill_fidos	spec_proc.c	/^int zm_kill_fidos(struct char_data *zmaster)$/;"	f
zm_kill_fidos	spec_procs.c	/^int zm_kill_fidos(struct char_data *zmaster)$/;"	f
zm_stunned_followers	spec_proc.c	/^int zm_stunned_followers(struct char_data *zmaster)$/;"	f
zm_stunned_followers	spec_procs.c	/^int zm_stunned_followers(struct char_data *zmaster)$/;"	f
zm_tired	spec_proc.c	/^int zm_tired(struct char_data *zmaster)$/;"	f
zm_tired	spec_procs.c	/^int zm_tired(struct char_data *zmaster)$/;"	f
zombie_master	spec_proc.c	/^int zombie_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
zombie_master	spec_procs.c	/^int zombie_master(struct char_data *ch, int cmd, char *arg, struct char_data *mob, int type)$/;"	f
zone_table	db.c	/^struct zone_data *zone_table;         \/* table of reset data             *\/$/;"	v	typeref:struct:zone_data
zone_table	fight.c	/^struct zone_data *zone_table;         \/* table of reset data             *\/$/;"	v	typeref:struct:zone_data
zone_update	db.c	/^void zone_update()$/;"	f
